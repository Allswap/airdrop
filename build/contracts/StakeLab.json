{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_dummyToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenRecovered",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AdminTokenRecovery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_gemsPerSecond",
          "type": "uint256"
        }
      ],
      "name": "SetRewardPerSecond",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardPerSecond",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20Ext",
          "name": "_Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_protocolOwner",
          "type": "address"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseUserLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseUserLimitTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "changeBaseUserLimitTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "addSeconds",
          "type": "uint32"
        }
      ],
      "name": "changeEndTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_time",
          "type": "uint256"
        }
      ],
      "name": "changePoolUserLimitEndTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "changeUserLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dummyToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "emergencyRewardWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "massUpdatePools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "pendingReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "RewardToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "RewardPerSecond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "TokenPrecision",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dummyTokenStakedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accRewardPerShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "userLimitEndTime",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "protocolOwnerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "recoverWrongTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewardPerSecond",
          "type": "uint256"
        }
      ],
      "name": "setRewardPerSecond",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "stopReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/GSN/Context.sol",
    "1": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol",
    "11": "contracts/StakeLab.sol",
    "2": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/math/SafeMath.sol",
    "4": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/IERC20.sol",
    "5": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/SafeERC20.sol",
    "6": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/StakeLab.sol",
    "exportedSymbols": {
      "IERC20Ext": [
        4146
      ],
      "StakeLab": [
        5088
      ]
    },
    "id": 5089,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4135,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:11"
      },
      {
        "absolutePath": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 4136,
        "nodeType": "ImportDirective",
        "scope": 5089,
        "sourceUnit": 5992,
        "src": "57:59:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4137,
        "nodeType": "ImportDirective",
        "scope": 5089,
        "sourceUnit": 5276,
        "src": "117:56:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4138,
        "nodeType": "ImportDirective",
        "scope": 5089,
        "sourceUnit": 5198,
        "src": "174:52:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4139,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5275,
              "src": "251:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5275",
                "typeString": "contract IERC20"
              }
            },
            "id": 4140,
            "nodeType": "InheritanceSpecifier",
            "src": "251:6:11"
          }
        ],
        "contractDependencies": [
          5275
        ],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 4146,
        "linearizedBaseContracts": [
          4146,
          5275
        ],
        "name": "IERC20Ext",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "313ce567",
            "id": 4145,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "281:2:11"
            },
            "returnParameters": {
              "id": 4144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4143,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4145,
                  "src": "302:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "302:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "301:6:11"
            },
            "scope": 4146,
            "src": "264:44:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5089,
        "src": "228:82:11"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4147,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5197,
              "src": "618:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5197",
                "typeString": "contract Ownable"
              }
            },
            "id": 4148,
            "nodeType": "InheritanceSpecifier",
            "src": "618:7:11"
          }
        ],
        "contractDependencies": [
          5197,
          6014
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5088,
        "linearizedBaseContracts": [
          5088,
          5197,
          6014
        ],
        "name": "StakeLab",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4151,
            "libraryName": {
              "contractScope": null,
              "id": 4149,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5991,
              "src": "638:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$5991",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "632:27:11",
            "typeName": {
              "contractScope": null,
              "id": 4150,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5275,
              "src": "652:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5275",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "StakeLab.UserInfo",
            "id": 4156,
            "members": [
              {
                "constant": false,
                "id": 4153,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4156,
                "src": "717:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4152,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4155,
                "mutability": "mutable",
                "name": "rewardDebt",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4156,
                "src": "787:18:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4154,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "787:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nodeType": "StructDefinition",
            "scope": 5088,
            "src": "691:160:11",
            "visibility": "public"
          },
          {
            "canonicalName": "StakeLab.PoolInfo",
            "id": 4177,
            "members": [
              {
                "constant": false,
                "id": 4158,
                "mutability": "mutable",
                "name": "RewardToken",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4177,
                "src": "909:18:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$5275",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 4157,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 5275,
                  "src": "909:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5275",
                    "typeString": "contract IERC20"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4160,
                "mutability": "mutable",
                "name": "RewardPerSecond",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4177,
                "src": "980:23:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4159,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "980:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4162,
                "mutability": "mutable",
                "name": "TokenPrecision",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4177,
                "src": "1056:22:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4161,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1056:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4164,
                "mutability": "mutable",
                "name": "dummyTokenStakedAmount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4177,
                "src": "1166:30:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4163,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1166:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4166,
                "mutability": "mutable",
                "name": "lastRewardTime",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4177,
                "src": "1248:22:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4165,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1248:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4168,
                "mutability": "mutable",
                "name": "accRewardPerShare",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4177,
                "src": "1333:25:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4167,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1333:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4170,
                "mutability": "mutable",
                "name": "endTime",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4177,
                "src": "1445:15:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4169,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1445:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4172,
                "mutability": "mutable",
                "name": "startTime",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4177,
                "src": "1490:17:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4171,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1490:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4174,
                "mutability": "mutable",
                "name": "userLimitEndTime",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4177,
                "src": "1539:24:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4173,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1539:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4176,
                "mutability": "mutable",
                "name": "protocolOwnerAddress",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 4177,
                "src": "1573:28:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4175,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1573:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nodeType": "StructDefinition",
            "scope": 5088,
            "src": "883:846:11",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "67479ec5",
            "id": 4179,
            "mutability": "immutable",
            "name": "dummyToken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5088,
            "src": "1735:34:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5275",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 4178,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5275,
              "src": "1735:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5275",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a84f2730",
            "id": 4182,
            "mutability": "mutable",
            "name": "baseUserLimitTime",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5088,
            "src": "1775:38:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4180,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1775:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 4181,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1807:6:11",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_172800_by_1",
                "typeString": "int_const 172800"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bebdbc0c",
            "id": 4185,
            "mutability": "mutable",
            "name": "baseUserLimit",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5088,
            "src": "1819:29:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4183,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1819:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 4184,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1847:1:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1526fe27",
            "id": 4188,
            "mutability": "mutable",
            "name": "poolInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5088,
            "src": "1881:26:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
              "typeString": "struct StakeLab.PoolInfo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 4186,
                "name": "PoolInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4177,
                "src": "1881:8:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                  "typeString": "struct StakeLab.PoolInfo"
                }
              },
              "id": 4187,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1881:10:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage_ptr",
                "typeString": "struct StakeLab.PoolInfo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93f1a40b",
            "id": 4194,
            "mutability": "mutable",
            "name": "userInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 5088,
            "src": "1958:66:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$4156_storage_$_$",
              "typeString": "mapping(uint256 => mapping(address => struct StakeLab.UserInfo))"
            },
            "typeName": {
              "id": 4193,
              "keyType": {
                "id": 4189,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1967:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1958:50:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$4156_storage_$_$",
                "typeString": "mapping(uint256 => mapping(address => struct StakeLab.UserInfo))"
              },
              "valueType": {
                "id": 4192,
                "keyType": {
                  "id": 4190,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1987:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1978:29:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$4156_storage_$",
                  "typeString": "mapping(address => struct StakeLab.UserInfo)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 4191,
                  "name": "UserInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 4156,
                  "src": "1998:8:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                    "typeString": "struct StakeLab.UserInfo"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4200,
            "name": "AdminTokenRecovery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4196,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenRecovered",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4200,
                  "src": "2056:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2056:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4198,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4200,
                  "src": "2080:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2080:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2055:40:11"
            },
            "src": "2031:65:11"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4208,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4202,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4208,
                  "src": "2115:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2115:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4204,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4208,
                  "src": "2137:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2137:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4206,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4208,
                  "src": "2158:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2114:59:11"
            },
            "src": "2101:73:11"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4216,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4210,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4216,
                  "src": "2194:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2194:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4212,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4216,
                  "src": "2216:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2216:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4214,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4216,
                  "src": "2237:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2237:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2193:59:11"
            },
            "src": "2179:74:11"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4224,
            "name": "EmergencyWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4218,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4224,
                  "src": "2282:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2282:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4220,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4224,
                  "src": "2304:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2304:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4222,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4224,
                  "src": "2325:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2325:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2281:59:11"
            },
            "src": "2258:83:11"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4230,
            "name": "SetRewardPerSecond",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4226,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4230,
                  "src": "2371:9:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4225,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2371:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4228,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_gemsPerSecond",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4230,
                  "src": "2382:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2382:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2370:35:11"
            },
            "src": "2346:60:11"
          },
          {
            "body": {
              "id": 4239,
              "nodeType": "Block",
              "src": "2451:41:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4235,
                      "name": "dummyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4179,
                      "src": "2461:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5275",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4236,
                      "name": "_dummyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4232,
                      "src": "2474:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5275",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2461:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5275",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 4238,
                  "nodeType": "ExpressionStatement",
                  "src": "2461:24:11"
                }
              ]
            },
            "documentation": null,
            "id": 4240,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4232,
                  "mutability": "mutable",
                  "name": "_dummyToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4240,
                  "src": "2424:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5275",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4231,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5275,
                    "src": "2424:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5275",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2423:20:11"
            },
            "returnParameters": {
              "id": 4234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2451:0:11"
            },
            "scope": 5088,
            "src": "2412:80:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4248,
              "nodeType": "Block",
              "src": "2553:39:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 4245,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4188,
                      "src": "2570:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                        "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2570:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4244,
                  "id": 4247,
                  "nodeType": "Return",
                  "src": "2563:22:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "081e3eda",
            "id": 4249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2518:2:11"
            },
            "returnParameters": {
              "id": 4244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4243,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4249,
                  "src": "2544:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2543:9:11"
            },
            "scope": 5088,
            "src": "2499:93:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4299,
              "nodeType": "Block",
              "src": "2770:277:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4260,
                      "name": "_from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4251,
                      "src": "2780:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4261,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4251,
                          "src": "2788:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4262,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4255,
                            "src": "2796:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                              "typeString": "struct StakeLab.PoolInfo memory"
                            }
                          },
                          "id": 4263,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4172,
                          "src": "2796:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2788:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4266,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4255,
                          "src": "2821:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                            "typeString": "struct StakeLab.PoolInfo memory"
                          }
                        },
                        "id": 4267,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4172,
                        "src": "2821:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2788:47:11",
                      "trueExpression": {
                        "argumentTypes": null,
                        "id": 4265,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4251,
                        "src": "2813:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2780:55:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4270,
                  "nodeType": "ExpressionStatement",
                  "src": "2780:55:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4271,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4251,
                        "src": "2849:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4272,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4255,
                          "src": "2857:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                            "typeString": "struct StakeLab.PoolInfo memory"
                          }
                        },
                        "id": 4273,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "endTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4170,
                        "src": "2857:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2849:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4275,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4253,
                        "src": "2873:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4276,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4255,
                          "src": "2879:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                            "typeString": "struct StakeLab.PoolInfo memory"
                          }
                        },
                        "id": 4277,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "startTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4172,
                        "src": "2879:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2873:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2849:44:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4283,
                  "nodeType": "IfStatement",
                  "src": "2845:83:11",
                  "trueBody": {
                    "id": 4282,
                    "nodeType": "Block",
                    "src": "2895:33:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2916:1:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 4259,
                        "id": 4281,
                        "nodeType": "Return",
                        "src": "2909:8:11"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4284,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4253,
                      "src": "2941:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4285,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4255,
                        "src": "2947:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                          "typeString": "struct StakeLab.PoolInfo memory"
                        }
                      },
                      "id": 4286,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4170,
                      "src": "2947:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2941:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4294,
                  "nodeType": "IfStatement",
                  "src": "2937:76:11",
                  "trueBody": {
                    "id": 4293,
                    "nodeType": "Block",
                    "src": "2961:52:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4288,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4255,
                              "src": "2982:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                                "typeString": "struct StakeLab.PoolInfo memory"
                              }
                            },
                            "id": 4289,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4170,
                            "src": "2982:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 4290,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4251,
                            "src": "2997:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2982:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4259,
                        "id": 4292,
                        "nodeType": "Return",
                        "src": "2975:27:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4295,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4253,
                      "src": "3029:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4296,
                      "name": "_from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4251,
                      "src": "3035:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3029:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4259,
                  "id": 4298,
                  "nodeType": "Return",
                  "src": "3022:18:11"
                }
              ]
            },
            "documentation": null,
            "id": 4300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMultiplier",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4251,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4300,
                  "src": "2688:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2688:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4253,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4300,
                  "src": "2703:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2703:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4255,
                  "mutability": "mutable",
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4300,
                  "src": "2716:20:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                    "typeString": "struct StakeLab.PoolInfo"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4254,
                    "name": "PoolInfo",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4177,
                    "src": "2716:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                      "typeString": "struct StakeLab.PoolInfo"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2687:50:11"
            },
            "returnParameters": {
              "id": 4259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4258,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4300,
                  "src": "2761:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2760:9:11"
            },
            "scope": 5088,
            "src": "2665:382:11",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4380,
              "nodeType": "Block",
              "src": "3191:609:11",
              "statements": [
                {
                  "assignments": [
                    4310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4310,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4380,
                      "src": "3201:20:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                        "typeString": "struct StakeLab.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4309,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4177,
                        "src": "3201:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4314,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4311,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4188,
                      "src": "3224:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                        "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4313,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4312,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4302,
                      "src": "3233:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3224:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$4177_storage",
                      "typeString": "struct StakeLab.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3201:37:11"
                },
                {
                  "assignments": [
                    4316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4316,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4380,
                      "src": "3248:20:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$4156_memory_ptr",
                        "typeString": "struct StakeLab.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4315,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4156,
                        "src": "3248:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                          "typeString": "struct StakeLab.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4322,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4317,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4194,
                        "src": "3271:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$4156_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct StakeLab.UserInfo storage ref))"
                        }
                      },
                      "id": 4319,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4318,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4302,
                        "src": "3280:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3271:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$4156_storage_$",
                        "typeString": "mapping(address => struct StakeLab.UserInfo storage ref)"
                      }
                    },
                    "id": 4321,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4320,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4304,
                      "src": "3286:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3271:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$4156_storage",
                      "typeString": "struct StakeLab.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3248:44:11"
                },
                {
                  "assignments": [
                    4324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4324,
                      "mutability": "mutable",
                      "name": "accRewardPerShare",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4380,
                      "src": "3302:25:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4323,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3302:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4327,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 4325,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4310,
                      "src": "3330:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                        "typeString": "struct StakeLab.PoolInfo memory"
                      }
                    },
                    "id": 4326,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accRewardPerShare",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4168,
                    "src": "3330:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3302:50:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4328,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3367:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3367:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4330,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4310,
                          "src": "3385:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                            "typeString": "struct StakeLab.PoolInfo memory"
                          }
                        },
                        "id": 4331,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4166,
                        "src": "3385:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3367:37:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4333,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4310,
                          "src": "3408:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                            "typeString": "struct StakeLab.PoolInfo memory"
                          }
                        },
                        "id": 4334,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dummyTokenStakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4164,
                        "src": "3408:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 4335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3439:1:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3408:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3367:73:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4367,
                  "nodeType": "IfStatement",
                  "src": "3363:341:11",
                  "trueBody": {
                    "id": 4366,
                    "nodeType": "Block",
                    "src": "3442:262:11",
                    "statements": [
                      {
                        "assignments": [
                          4339
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4339,
                            "mutability": "mutable",
                            "name": "multiplier",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 4366,
                            "src": "3456:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4338,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3456:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 4347,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4341,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4310,
                                "src": "3491:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                                  "typeString": "struct StakeLab.PoolInfo memory"
                                }
                              },
                              "id": 4342,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastRewardTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4166,
                              "src": "3491:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4343,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3512:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 4344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3512:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4345,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4310,
                              "src": "3529:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                                "typeString": "struct StakeLab.PoolInfo memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                                "typeString": "struct StakeLab.PoolInfo memory"
                              }
                            ],
                            "id": 4340,
                            "name": "getMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4300,
                            "src": "3477:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_struct$_PoolInfo_$4177_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,struct StakeLab.PoolInfo memory) pure returns (uint256)"
                            }
                          },
                          "id": 4346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3477:57:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3456:78:11"
                      },
                      {
                        "assignments": [
                          4349
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4349,
                            "mutability": "mutable",
                            "name": "reward",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 4366,
                            "src": "3548:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4348,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3548:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 4354,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 4350,
                            "name": "multiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4339,
                            "src": "3565:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4351,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4310,
                              "src": "3578:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                                "typeString": "struct StakeLab.PoolInfo memory"
                              }
                            },
                            "id": 4352,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "RewardPerSecond",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4160,
                            "src": "3578:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3565:33:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3548:50:11"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4355,
                            "name": "accRewardPerShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4324,
                            "src": "3612:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 4356,
                                    "name": "reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4349,
                                    "src": "3634:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4357,
                                      "name": "pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4310,
                                      "src": "3643:4:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                                        "typeString": "struct StakeLab.PoolInfo memory"
                                      }
                                    },
                                    "id": 4358,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "TokenPrecision",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4162,
                                    "src": "3643:19:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3634:28:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 4360,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3633:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4361,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4310,
                                "src": "3666:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                                  "typeString": "struct StakeLab.PoolInfo memory"
                                }
                              },
                              "id": 4362,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dummyTokenStakedAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4164,
                              "src": "3666:27:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3633:60:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3612:81:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4365,
                        "nodeType": "ExpressionStatement",
                        "src": "3612:81:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4368,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4316,
                                "src": "3721:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$4156_memory_ptr",
                                  "typeString": "struct StakeLab.UserInfo memory"
                                }
                              },
                              "id": 4369,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4153,
                              "src": "3721:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 4370,
                              "name": "accRewardPerShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4324,
                              "src": "3735:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3721:31:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4372,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4310,
                              "src": "3755:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                                "typeString": "struct StakeLab.PoolInfo memory"
                              }
                            },
                            "id": 4373,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "TokenPrecision",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4162,
                            "src": "3755:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3721:53:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4375,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3720:55:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4376,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4316,
                        "src": "3778:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_memory_ptr",
                          "typeString": "struct StakeLab.UserInfo memory"
                        }
                      },
                      "id": 4377,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4155,
                      "src": "3778:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3720:73:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4308,
                  "id": 4379,
                  "nodeType": "Return",
                  "src": "3713:80:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "98969e82",
            "id": 4381,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingReward",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4302,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4381,
                  "src": "3130:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3130:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4304,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4381,
                  "src": "3144:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3129:29:11"
            },
            "returnParameters": {
              "id": 4308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4307,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4381,
                  "src": "3182:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3182:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3181:9:11"
            },
            "scope": 5088,
            "src": "3107:693:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4405,
              "nodeType": "Block",
              "src": "3914:141:11",
              "statements": [
                {
                  "assignments": [
                    4385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4385,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4405,
                      "src": "3924:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4384,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3924:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4388,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 4386,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4188,
                      "src": "3941:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                        "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3941:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3924:32:11"
                },
                {
                  "body": {
                    "id": 4403,
                    "nodeType": "Block",
                    "src": "4009:40:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4400,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4390,
                              "src": "4034:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4399,
                            "name": "updatePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4476,
                            "src": "4023:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 4401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4023:15:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4402,
                        "nodeType": "ExpressionStatement",
                        "src": "4023:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4393,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4390,
                      "src": "3988:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4394,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4385,
                      "src": "3994:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3988:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4404,
                  "initializationExpression": {
                    "assignments": [
                      4390
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4390,
                        "mutability": "mutable",
                        "name": "pid",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 4404,
                        "src": "3971:11:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3971:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 4392,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3985:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3971:15:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 4397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "4002:5:11",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 4396,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4390,
                        "src": "4004:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4398,
                    "nodeType": "ExpressionStatement",
                    "src": "4002:5:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "3966:83:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "630b5ba1",
            "id": 4406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "massUpdatePools",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3904:2:11"
            },
            "returnParameters": {
              "id": 4383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3914:0:11"
            },
            "scope": 5088,
            "src": "3880:175:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4475,
              "nodeType": "Block",
              "src": "4171:559:11",
              "statements": [
                {
                  "assignments": [
                    4412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4412,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4475,
                      "src": "4181:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                        "typeString": "struct StakeLab.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4411,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4177,
                        "src": "4181:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4416,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4413,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4188,
                      "src": "4205:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                        "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4415,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4414,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4408,
                      "src": "4214:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4205:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$4177_storage",
                      "typeString": "struct StakeLab.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4181:38:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4417,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4233:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4233:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4419,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4412,
                        "src": "4252:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo storage pointer"
                        }
                      },
                      "id": 4420,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRewardTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4166,
                      "src": "4252:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4233:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4424,
                  "nodeType": "IfStatement",
                  "src": "4229:75:11",
                  "trueBody": {
                    "id": 4423,
                    "nodeType": "Block",
                    "src": "4273:31:11",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 4410,
                        "id": 4422,
                        "nodeType": "Return",
                        "src": "4287:7:11"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4425,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4412,
                        "src": "4318:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo storage pointer"
                        }
                      },
                      "id": 4426,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dummyTokenStakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4164,
                      "src": "4318:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4349:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4318:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4438,
                  "nodeType": "IfStatement",
                  "src": "4314:120:11",
                  "trueBody": {
                    "id": 4437,
                    "nodeType": "Block",
                    "src": "4352:82:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4429,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4412,
                              "src": "4366:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                                "typeString": "struct StakeLab.PoolInfo storage pointer"
                              }
                            },
                            "id": 4431,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastRewardTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4166,
                            "src": "4366:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4432,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4388:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 4433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4388:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4366:37:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4435,
                        "nodeType": "ExpressionStatement",
                        "src": "4366:37:11"
                      },
                      {
                        "expression": null,
                        "functionReturnParameters": 4410,
                        "id": 4436,
                        "nodeType": "Return",
                        "src": "4417:7:11"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4440,
                      "mutability": "mutable",
                      "name": "multiplier",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4475,
                      "src": "4443:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4439,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4443:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4448,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4442,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4412,
                          "src": "4478:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                            "typeString": "struct StakeLab.PoolInfo storage pointer"
                          }
                        },
                        "id": 4443,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4166,
                        "src": "4478:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4444,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4499:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4499:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4446,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4412,
                        "src": "4516:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo storage pointer"
                        }
                      ],
                      "id": 4441,
                      "name": "getMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4300,
                      "src": "4464:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_struct$_PoolInfo_$4177_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct StakeLab.PoolInfo memory) pure returns (uint256)"
                      }
                    },
                    "id": 4447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4464:57:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4443:78:11"
                },
                {
                  "assignments": [
                    4450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4450,
                      "mutability": "mutable",
                      "name": "reward",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4475,
                      "src": "4531:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4449,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4531:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4455,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4451,
                      "name": "multiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4440,
                      "src": "4548:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4452,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4412,
                        "src": "4561:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo storage pointer"
                        }
                      },
                      "id": 4453,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "RewardPerSecond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4160,
                      "src": "4561:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4548:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4531:50:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4456,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4412,
                        "src": "4592:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo storage pointer"
                        }
                      },
                      "id": 4458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "accRewardPerShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4168,
                      "src": "4592:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4459,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4450,
                          "src": "4618:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4460,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4412,
                            "src": "4627:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                              "typeString": "struct StakeLab.PoolInfo storage pointer"
                            }
                          },
                          "id": 4461,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "TokenPrecision",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4162,
                          "src": "4627:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4618:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4463,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4412,
                          "src": "4649:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                            "typeString": "struct StakeLab.PoolInfo storage pointer"
                          }
                        },
                        "id": 4464,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "dummyTokenStakedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4164,
                        "src": "4649:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4618:58:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4592:84:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4467,
                  "nodeType": "ExpressionStatement",
                  "src": "4592:84:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4468,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4412,
                        "src": "4686:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo storage pointer"
                        }
                      },
                      "id": 4470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastRewardTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4166,
                      "src": "4686:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4471,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4708:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4708:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4686:37:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4474,
                  "nodeType": "ExpressionStatement",
                  "src": "4686:37:11"
                }
              ]
            },
            "documentation": null,
            "id": 4476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4408,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4476,
                  "src": "4148:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4148:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4147:14:11"
            },
            "returnParameters": {
              "id": 4410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4171:0:11"
            },
            "scope": 5088,
            "src": "4128:602:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4598,
              "nodeType": "Block",
              "src": "4816:835:11",
              "statements": [
                {
                  "assignments": [
                    4484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4484,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4598,
                      "src": "4827:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                        "typeString": "struct StakeLab.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4483,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4177,
                        "src": "4827:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4488,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4485,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4188,
                      "src": "4851:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                        "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4487,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4486,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4478,
                      "src": "4860:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4851:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$4177_storage",
                      "typeString": "struct StakeLab.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4827:38:11"
                },
                {
                  "assignments": [
                    4490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4490,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4598,
                      "src": "4875:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                        "typeString": "struct StakeLab.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4489,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4156,
                        "src": "4875:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                          "typeString": "struct StakeLab.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4497,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4491,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4194,
                        "src": "4899:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$4156_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct StakeLab.UserInfo storage ref))"
                        }
                      },
                      "id": 4493,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4492,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4478,
                        "src": "4908:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4899:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$4156_storage_$",
                        "typeString": "mapping(address => struct StakeLab.UserInfo storage ref)"
                      }
                    },
                    "id": 4496,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4494,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4914:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4914:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4899:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$4156_storage",
                      "typeString": "struct StakeLab.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4875:50:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4498,
                        "name": "baseUserLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4185,
                        "src": "4939:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 4499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4955:1:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4939:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4501,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4960:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4960:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4503,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4484,
                          "src": "4978:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                            "typeString": "struct StakeLab.PoolInfo storage pointer"
                          }
                        },
                        "id": 4504,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "userLimitEndTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4174,
                        "src": "4978:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4960:39:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4939:60:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4518,
                  "nodeType": "IfStatement",
                  "src": "4936:174:11",
                  "trueBody": {
                    "id": 4517,
                    "nodeType": "Block",
                    "src": "5001:109:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 4508,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4490,
                                    "src": "5023:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                                      "typeString": "struct StakeLab.UserInfo storage pointer"
                                    }
                                  },
                                  "id": 4509,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4153,
                                  "src": "5023:11:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 4510,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4480,
                                  "src": "5037:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5023:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 4512,
                                "name": "baseUserLimit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4185,
                                "src": "5048:13:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5023:38:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6465706f7369743a20757365722068617320686974206465706f73697420636170",
                              "id": 4514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5063:35:11",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f936baaebdc9134cde90260ecd3b3800408a9113bea99552b98b13a94fe90ba",
                                "typeString": "literal_string \"deposit: user has hit deposit cap\""
                              },
                              "value": "deposit: user has hit deposit cap"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4f936baaebdc9134cde90260ecd3b3800408a9113bea99552b98b13a94fe90ba",
                                "typeString": "literal_string \"deposit: user has hit deposit cap\""
                              }
                            ],
                            "id": 4507,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5015:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5015:84:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4516,
                        "nodeType": "ExpressionStatement",
                        "src": "5015:84:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4520,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4478,
                        "src": "5131:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4519,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4476,
                      "src": "5120:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5120:16:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4522,
                  "nodeType": "ExpressionStatement",
                  "src": "5120:16:11"
                },
                {
                  "assignments": [
                    4524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4524,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4598,
                      "src": "5147:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4523,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5147:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4537,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4525,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4490,
                                "src": "5166:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                                  "typeString": "struct StakeLab.UserInfo storage pointer"
                                }
                              },
                              "id": 4526,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4153,
                              "src": "5166:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4527,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4484,
                                "src": "5180:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                                  "typeString": "struct StakeLab.PoolInfo storage pointer"
                                }
                              },
                              "id": 4528,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accRewardPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4168,
                              "src": "5180:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5166:36:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4530,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4484,
                              "src": "5205:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                                "typeString": "struct StakeLab.PoolInfo storage pointer"
                              }
                            },
                            "id": 4531,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "TokenPrecision",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4162,
                            "src": "5205:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5166:58:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4533,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5165:60:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4534,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4490,
                        "src": "5228:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                          "typeString": "struct StakeLab.UserInfo storage pointer"
                        }
                      },
                      "id": 4535,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4155,
                      "src": "5228:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5165:78:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5147:96:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4538,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4490,
                        "src": "5254:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                          "typeString": "struct StakeLab.UserInfo storage pointer"
                        }
                      },
                      "id": 4540,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4153,
                      "src": "5254:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4541,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4480,
                      "src": "5269:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5254:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4543,
                  "nodeType": "ExpressionStatement",
                  "src": "5254:22:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4544,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4484,
                        "src": "5286:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo storage pointer"
                        }
                      },
                      "id": 4546,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dummyTokenStakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4164,
                      "src": "5286:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4547,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4480,
                      "src": "5317:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5286:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4549,
                  "nodeType": "ExpressionStatement",
                  "src": "5286:38:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4550,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4490,
                        "src": "5334:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                          "typeString": "struct StakeLab.UserInfo storage pointer"
                        }
                      },
                      "id": 4552,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4155,
                      "src": "5334:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4553,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4490,
                            "src": "5352:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                              "typeString": "struct StakeLab.UserInfo storage pointer"
                            }
                          },
                          "id": 4554,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4153,
                          "src": "5352:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4555,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4484,
                            "src": "5366:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                              "typeString": "struct StakeLab.PoolInfo storage pointer"
                            }
                          },
                          "id": 4556,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accRewardPerShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4168,
                          "src": "5366:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5352:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4558,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4484,
                          "src": "5391:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                            "typeString": "struct StakeLab.PoolInfo storage pointer"
                          }
                        },
                        "id": 4559,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "TokenPrecision",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4162,
                        "src": "5391:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5352:58:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5334:76:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4562,
                  "nodeType": "ExpressionStatement",
                  "src": "5334:76:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4563,
                      "name": "pending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4524,
                      "src": "5424:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5434:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5424:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4575,
                  "nodeType": "IfStatement",
                  "src": "5421:92:11",
                  "trueBody": {
                    "id": 4574,
                    "nodeType": "Block",
                    "src": "5437:76:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4567,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4484,
                                "src": "5464:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                                  "typeString": "struct StakeLab.PoolInfo storage pointer"
                                }
                              },
                              "id": 4568,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "RewardToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4158,
                              "src": "5464:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5275",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4569,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5482:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5482:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4571,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4524,
                              "src": "5494:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$5275",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4566,
                            "name": "safeTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4807,
                            "src": "5451:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5275_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5451:51:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4573,
                        "nodeType": "ExpressionStatement",
                        "src": "5451:51:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4581,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5558:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5558:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 4580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5550:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4579,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5550:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5550:19:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4586,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5579:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeLab_$5088",
                              "typeString": "contract StakeLab"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeLab_$5088",
                              "typeString": "contract StakeLab"
                            }
                          ],
                          "id": 4585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5571:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4584,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5571:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5571:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4588,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4480,
                        "src": "5586:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4576,
                        "name": "dummyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4179,
                        "src": "5522:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5275",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5837,
                      "src": "5522:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5275_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5275_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 4589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5522:72:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4590,
                  "nodeType": "ExpressionStatement",
                  "src": "5522:72:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4592,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5618:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5618:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4594,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4478,
                        "src": "5630:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4595,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4480,
                        "src": "5636:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4591,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4208,
                      "src": "5610:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 4596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5610:34:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4597,
                  "nodeType": "EmitStatement",
                  "src": "5605:39:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e2bbb158",
            "id": 4599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4478,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4599,
                  "src": "4776:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4776:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4480,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4599,
                  "src": "4790:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4790:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4775:31:11"
            },
            "returnParameters": {
              "id": 4482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4816:0:11"
            },
            "scope": 5088,
            "src": "4759:892:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4703,
              "nodeType": "Block",
              "src": "5739:698:11",
              "statements": [
                {
                  "assignments": [
                    4607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4607,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4703,
                      "src": "5749:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                        "typeString": "struct StakeLab.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4606,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4177,
                        "src": "5749:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4611,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4608,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4188,
                      "src": "5773:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                        "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4610,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4609,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4601,
                      "src": "5782:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5773:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$4177_storage",
                      "typeString": "struct StakeLab.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5749:38:11"
                },
                {
                  "assignments": [
                    4613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4613,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4703,
                      "src": "5797:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                        "typeString": "struct StakeLab.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4612,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4156,
                        "src": "5797:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                          "typeString": "struct StakeLab.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4620,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4614,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4194,
                        "src": "5821:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$4156_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct StakeLab.UserInfo storage ref))"
                        }
                      },
                      "id": 4616,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4615,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4601,
                        "src": "5830:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5821:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$4156_storage_$",
                        "typeString": "mapping(address => struct StakeLab.UserInfo storage ref)"
                      }
                    },
                    "id": 4619,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4617,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5836:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5836:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5821:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$4156_storage",
                      "typeString": "struct StakeLab.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5797:50:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4622,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4613,
                            "src": "5866:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                              "typeString": "struct StakeLab.UserInfo storage pointer"
                            }
                          },
                          "id": 4623,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4153,
                          "src": "5866:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4624,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4603,
                          "src": "5881:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5866:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77697468647261773a206e6f7420676f6f64",
                        "id": 4626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5890:20:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        },
                        "value": "withdraw: not good"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        }
                      ],
                      "id": 4621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5858:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5858:53:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4628,
                  "nodeType": "ExpressionStatement",
                  "src": "5858:53:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4630,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4601,
                        "src": "5933:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4629,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4476,
                      "src": "5922:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5922:16:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4632,
                  "nodeType": "ExpressionStatement",
                  "src": "5922:16:11"
                },
                {
                  "assignments": [
                    4634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4634,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4703,
                      "src": "5949:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4633,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5949:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4647,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4635,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4613,
                                "src": "5968:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                                  "typeString": "struct StakeLab.UserInfo storage pointer"
                                }
                              },
                              "id": 4636,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4153,
                              "src": "5968:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4637,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4607,
                                "src": "5982:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                                  "typeString": "struct StakeLab.PoolInfo storage pointer"
                                }
                              },
                              "id": 4638,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accRewardPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4168,
                              "src": "5982:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5968:36:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4640,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4607,
                              "src": "6007:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                                "typeString": "struct StakeLab.PoolInfo storage pointer"
                              }
                            },
                            "id": 4641,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "TokenPrecision",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4162,
                            "src": "6007:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5968:58:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4643,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5967:60:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4644,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4613,
                        "src": "6030:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                          "typeString": "struct StakeLab.UserInfo storage pointer"
                        }
                      },
                      "id": 4645,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4155,
                      "src": "6030:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5967:78:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5949:96:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4648,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4613,
                        "src": "6056:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                          "typeString": "struct StakeLab.UserInfo storage pointer"
                        }
                      },
                      "id": 4650,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4153,
                      "src": "6056:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4651,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4603,
                      "src": "6071:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6056:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4653,
                  "nodeType": "ExpressionStatement",
                  "src": "6056:22:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4654,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4607,
                        "src": "6088:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo storage pointer"
                        }
                      },
                      "id": 4656,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dummyTokenStakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4164,
                      "src": "6088:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4657,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4603,
                      "src": "6119:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6088:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4659,
                  "nodeType": "ExpressionStatement",
                  "src": "6088:38:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4660,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4613,
                        "src": "6136:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                          "typeString": "struct StakeLab.UserInfo storage pointer"
                        }
                      },
                      "id": 4662,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4155,
                      "src": "6136:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4663,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4613,
                            "src": "6154:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                              "typeString": "struct StakeLab.UserInfo storage pointer"
                            }
                          },
                          "id": 4664,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4153,
                          "src": "6154:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4665,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4607,
                            "src": "6168:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                              "typeString": "struct StakeLab.PoolInfo storage pointer"
                            }
                          },
                          "id": 4666,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accRewardPerShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4168,
                          "src": "6168:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6154:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4668,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4607,
                          "src": "6193:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                            "typeString": "struct StakeLab.PoolInfo storage pointer"
                          }
                        },
                        "id": 4669,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "TokenPrecision",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4162,
                        "src": "6193:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6154:58:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6136:76:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4672,
                  "nodeType": "ExpressionStatement",
                  "src": "6136:76:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4673,
                      "name": "pending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4634,
                      "src": "6226:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6236:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6226:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4685,
                  "nodeType": "IfStatement",
                  "src": "6223:92:11",
                  "trueBody": {
                    "id": 4684,
                    "nodeType": "Block",
                    "src": "6239:76:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4677,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4607,
                                "src": "6266:4:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                                  "typeString": "struct StakeLab.PoolInfo storage pointer"
                                }
                              },
                              "id": 4678,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "RewardToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4158,
                              "src": "6266:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5275",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4679,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6284:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6284:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4681,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4634,
                              "src": "6296:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$5275",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4676,
                            "name": "safeTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4807,
                            "src": "6253:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5275_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6253:51:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4683,
                        "nodeType": "ExpressionStatement",
                        "src": "6253:51:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4687,
                        "name": "dummyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4179,
                        "src": "6338:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5275",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4690,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6358:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6358:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 4689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6350:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4688,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6350:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6350:19:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4693,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4603,
                        "src": "6371:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$5275",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4686,
                      "name": "safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4807,
                      "src": "6325:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5275_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6325:54:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4695,
                  "nodeType": "ExpressionStatement",
                  "src": "6325:54:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4697,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6404:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6404:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4699,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4601,
                        "src": "6416:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4700,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4603,
                        "src": "6422:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4696,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4216,
                      "src": "6395:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 4701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6395:35:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4702,
                  "nodeType": "EmitStatement",
                  "src": "6390:40:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "441a3e70",
            "id": 4704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4601,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4704,
                  "src": "5699:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4600,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5699:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4603,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4704,
                  "src": "5713:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5713:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5698:31:11"
            },
            "returnParameters": {
              "id": 4605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5739:0:11"
            },
            "scope": 5088,
            "src": "5681:756:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4766,
              "nodeType": "Block",
              "src": "6555:400:11",
              "statements": [
                {
                  "assignments": [
                    4710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4710,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4766,
                      "src": "6565:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                        "typeString": "struct StakeLab.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4709,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4177,
                        "src": "6565:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4714,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4711,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4188,
                      "src": "6589:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                        "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4713,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4712,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4706,
                      "src": "6598:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6589:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$4177_storage",
                      "typeString": "struct StakeLab.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6565:38:11"
                },
                {
                  "assignments": [
                    4716
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4716,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4766,
                      "src": "6613:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                        "typeString": "struct StakeLab.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4715,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4156,
                        "src": "6613:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                          "typeString": "struct StakeLab.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4723,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4717,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4194,
                        "src": "6637:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$4156_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct StakeLab.UserInfo storage ref))"
                        }
                      },
                      "id": 4719,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4718,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4706,
                        "src": "6646:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6637:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$4156_storage_$",
                        "typeString": "mapping(address => struct StakeLab.UserInfo storage ref)"
                      }
                    },
                    "id": 4722,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4720,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6652:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6652:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6637:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$4156_storage",
                      "typeString": "struct StakeLab.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6613:50:11"
                },
                {
                  "assignments": [
                    4725
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4725,
                      "mutability": "mutable",
                      "name": "oldUserAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4766,
                      "src": "6674:18:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4724,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6674:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4728,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 4726,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4716,
                      "src": "6695:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                        "typeString": "struct StakeLab.UserInfo storage pointer"
                      }
                    },
                    "id": 4727,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4153,
                    "src": "6695:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6674:32:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4729,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4710,
                        "src": "6716:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage_ptr",
                          "typeString": "struct StakeLab.PoolInfo storage pointer"
                        }
                      },
                      "id": 4731,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dummyTokenStakedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4164,
                      "src": "6716:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4732,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4716,
                        "src": "6747:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                          "typeString": "struct StakeLab.UserInfo storage pointer"
                        }
                      },
                      "id": 4733,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4153,
                      "src": "6747:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6716:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4735,
                  "nodeType": "ExpressionStatement",
                  "src": "6716:42:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4736,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4716,
                        "src": "6768:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                          "typeString": "struct StakeLab.UserInfo storage pointer"
                        }
                      },
                      "id": 4738,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4153,
                      "src": "6768:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6782:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6768:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4741,
                  "nodeType": "ExpressionStatement",
                  "src": "6768:15:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4742,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4716,
                        "src": "6793:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$4156_storage_ptr",
                          "typeString": "struct StakeLab.UserInfo storage pointer"
                        }
                      },
                      "id": 4744,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4155,
                      "src": "6793:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6811:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6793:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4747,
                  "nodeType": "ExpressionStatement",
                  "src": "6793:19:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4753,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6855:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6855:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 4752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6847:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4751,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6847:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6847:19:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4756,
                        "name": "oldUserAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4725,
                        "src": "6868:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4748,
                        "name": "dummyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4179,
                        "src": "6823:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5275",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5812,
                      "src": "6823:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5275_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5275_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6823:59:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4758,
                  "nodeType": "ExpressionStatement",
                  "src": "6823:59:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4760,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6915:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6915:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4762,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4706,
                        "src": "6927:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4763,
                        "name": "oldUserAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4725,
                        "src": "6933:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4759,
                      "name": "EmergencyWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4224,
                      "src": "6897:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 4764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6897:50:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4765,
                  "nodeType": "EmitStatement",
                  "src": "6892:55:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5312ea8e",
            "id": 4767,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4706,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4767,
                  "src": "6532:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6532:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6531:14:11"
            },
            "returnParameters": {
              "id": 4708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6555:0:11"
            },
            "scope": 5088,
            "src": "6505:450:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4806,
              "nodeType": "Block",
              "src": "7150:205:11",
              "statements": [
                {
                  "assignments": [
                    4777
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4777,
                      "mutability": "mutable",
                      "name": "bal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4806,
                      "src": "7160:11:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4776,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7160:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4785,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4782,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7198:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeLab_$5088",
                              "typeString": "contract StakeLab"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeLab_$5088",
                              "typeString": "contract StakeLab"
                            }
                          ],
                          "id": 4781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7190:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4780,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7190:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7190:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4778,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4769,
                        "src": "7174:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5275",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5214,
                      "src": "7174:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7174:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7160:44:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4786,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4773,
                      "src": "7218:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4787,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4777,
                      "src": "7228:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7218:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4804,
                    "nodeType": "Block",
                    "src": "7292:57:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4800,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4771,
                              "src": "7325:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4801,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4773,
                              "src": "7330:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4797,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4769,
                              "src": "7306:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5275",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5812,
                            "src": "7306:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5275_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5275_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7306:32:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4803,
                        "nodeType": "ExpressionStatement",
                        "src": "7306:32:11"
                      }
                    ]
                  },
                  "id": 4805,
                  "nodeType": "IfStatement",
                  "src": "7214:135:11",
                  "trueBody": {
                    "id": 4796,
                    "nodeType": "Block",
                    "src": "7233:53:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4792,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4771,
                              "src": "7266:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 4793,
                              "name": "bal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4777,
                              "src": "7271:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4789,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4769,
                              "src": "7247:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5275",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5812,
                            "src": "7247:18:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5275_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5275_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7247:28:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4795,
                        "nodeType": "ExpressionStatement",
                        "src": "7247:28:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 4807,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4769,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4807,
                  "src": "7097:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5275",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4768,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5275,
                    "src": "7097:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5275",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4771,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4807,
                  "src": "7111:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7111:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4773,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4807,
                  "src": "7124:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7124:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7096:44:11"
            },
            "returnParameters": {
              "id": 4775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7150:0:11"
            },
            "scope": 5088,
            "src": "7075:280:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4823,
              "nodeType": "Block",
              "src": "7457:53:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4816,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4188,
                          "src": "7467:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                            "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 4818,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4817,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4809,
                          "src": "7476:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7467:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage",
                          "typeString": "struct StakeLab.PoolInfo storage ref"
                        }
                      },
                      "id": 4819,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4170,
                      "src": "7467:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4820,
                      "name": "addSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4811,
                      "src": "7493:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "7467:36:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4822,
                  "nodeType": "ExpressionStatement",
                  "src": "7467:36:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "084f8604",
            "id": 4824,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4814,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4813,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5146,
                  "src": "7447:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7447:9:11"
              }
            ],
            "name": "changeEndTime",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4809,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4824,
                  "src": "7408:9:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4808,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7408:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4811,
                  "mutability": "mutable",
                  "name": "addSeconds",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4824,
                  "src": "7419:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 4810,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7419:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7407:30:11"
            },
            "returnParameters": {
              "id": 4815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7457:0:11"
            },
            "scope": 5088,
            "src": "7385:125:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4839,
              "nodeType": "Block",
              "src": "7566:54:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4831,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4188,
                          "src": "7576:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                            "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 4833,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4832,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4826,
                          "src": "7585:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7576:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage",
                          "typeString": "struct StakeLab.PoolInfo storage ref"
                        }
                      },
                      "id": 4834,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4170,
                      "src": "7576:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4835,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7601:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7601:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7576:37:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4838,
                  "nodeType": "ExpressionStatement",
                  "src": "7576:37:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "77300089",
            "id": 4840,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4829,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4828,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5146,
                  "src": "7556:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7556:9:11"
              }
            ],
            "name": "stopReward",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4826,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4840,
                  "src": "7536:9:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4825,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7536:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7535:11:11"
            },
            "returnParameters": {
              "id": 4830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7566:0:11"
            },
            "scope": 5088,
            "src": "7516:104:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4856,
              "nodeType": "Block",
              "src": "7704:56:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4849,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4188,
                          "src": "7714:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                            "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 4851,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4850,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4842,
                          "src": "7723:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7714:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage",
                          "typeString": "struct StakeLab.PoolInfo storage ref"
                        }
                      },
                      "id": 4852,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "userLimitEndTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4174,
                      "src": "7714:31:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4853,
                      "name": "_time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4844,
                      "src": "7748:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7714:39:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4855,
                  "nodeType": "ExpressionStatement",
                  "src": "7714:39:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7ffb25ef",
            "id": 4857,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4847,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4846,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5146,
                  "src": "7694:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7694:9:11"
              }
            ],
            "name": "changePoolUserLimitEndTime",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4842,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4857,
                  "src": "7662:9:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4841,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7662:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4844,
                  "mutability": "mutable",
                  "name": "_time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4857,
                  "src": "7673:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4843,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7673:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7661:23:11"
            },
            "returnParameters": {
              "id": 4848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7704:0:11"
            },
            "scope": 5088,
            "src": "7626:134:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4868,
              "nodeType": "Block",
              "src": "7823:39:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4864,
                      "name": "baseUserLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4185,
                      "src": "7833:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4865,
                      "name": "_limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4859,
                      "src": "7849:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7833:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4867,
                  "nodeType": "ExpressionStatement",
                  "src": "7833:22:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "99c5ccf4",
            "id": 4869,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4862,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4861,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5146,
                  "src": "7813:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7813:9:11"
              }
            ],
            "name": "changeUserLimit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4859,
                  "mutability": "mutable",
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4869,
                  "src": "7791:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4858,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7791:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7790:13:11"
            },
            "returnParameters": {
              "id": 4863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7823:0:11"
            },
            "scope": 5088,
            "src": "7766:96:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4880,
              "nodeType": "Block",
              "src": "7932:42:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4876,
                      "name": "baseUserLimitTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4182,
                      "src": "7942:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4877,
                      "name": "_time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4871,
                      "src": "7962:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7942:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4879,
                  "nodeType": "ExpressionStatement",
                  "src": "7942:25:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "26102c47",
            "id": 4881,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4874,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4873,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5146,
                  "src": "7922:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7922:9:11"
              }
            ],
            "name": "changeBaseUserLimitTime",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4871,
                  "mutability": "mutable",
                  "name": "_time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4881,
                  "src": "7901:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4870,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7901:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7900:12:11"
            },
            "returnParameters": {
              "id": 4875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7932:0:11"
            },
            "scope": 5088,
            "src": "7868:106:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4913,
              "nodeType": "Block",
              "src": "8031:214:11",
              "statements": [
                {
                  "assignments": [
                    4887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4887,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4913,
                      "src": "8041:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4886,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8041:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4890,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 4888,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4188,
                      "src": "8058:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                        "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 4889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "8058:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8041:32:11"
                },
                {
                  "body": {
                    "id": 4911,
                    "nodeType": "Block",
                    "src": "8129:110:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_contract$_IERC20_$5275",
                                "typeString": "contract IERC20"
                              },
                              "id": 4907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 4902,
                                    "name": "poolInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4188,
                                    "src": "8151:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                                      "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                                    }
                                  },
                                  "id": 4904,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 4903,
                                    "name": "_pid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4892,
                                    "src": "8160:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8151:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$4177_storage",
                                    "typeString": "struct StakeLab.PoolInfo storage ref"
                                  }
                                },
                                "id": 4905,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "RewardToken",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4158,
                                "src": "8151:26:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$5275",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 4906,
                                "name": "_Token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4883,
                                "src": "8181:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$5275",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "src": "8151:36:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "636865636b466f72546f6b656e3a2072657761726420746f6b656e2070726f7669646564",
                              "id": 4908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8189:38:11",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7383fc0d3d016943a3ae546fc88aac8c7f6ccd17d6b1a064530ac1ae0aff3155",
                                "typeString": "literal_string \"checkForToken: reward token provided\""
                              },
                              "value": "checkForToken: reward token provided"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7383fc0d3d016943a3ae546fc88aac8c7f6ccd17d6b1a064530ac1ae0aff3155",
                                "typeString": "literal_string \"checkForToken: reward token provided\""
                              }
                            ],
                            "id": 4901,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8143:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8143:85:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4910,
                        "nodeType": "ExpressionStatement",
                        "src": "8143:85:11"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4895,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4892,
                      "src": "8106:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4896,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4887,
                      "src": "8113:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8106:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4912,
                  "initializationExpression": {
                    "assignments": [
                      4892
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4892,
                        "mutability": "mutable",
                        "name": "_pid",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 4912,
                        "src": "8088:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4891,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8088:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 4894,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8103:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8088:16:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 4899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8121:6:11",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 4898,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4892,
                        "src": "8121:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4900,
                    "nodeType": "ExpressionStatement",
                    "src": "8121:6:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "8083:156:11"
                }
              ]
            },
            "documentation": null,
            "id": 4914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkForToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4883,
                  "mutability": "mutable",
                  "name": "_Token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4914,
                  "src": "8003:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5275",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4882,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5275,
                    "src": "8003:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5275",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8002:15:11"
            },
            "returnParameters": {
              "id": 4885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8031:0:11"
            },
            "scope": 5088,
            "src": "7980:265:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4966,
              "nodeType": "Block",
              "src": "8321:344:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4922,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4916,
                          "src": "8339:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4925,
                              "name": "dummyToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4179,
                              "src": "8364:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5275",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$5275",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 4924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8356:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4923,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8356:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 4926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8356:19:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8339:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265636f76657257726f6e67546f6b656e733a2043616e6e6f742062652064756d6d79546f6b656e",
                        "id": 4928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8377:42:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23aa8193c1c8fed86cef69e0730f2d30e89a50ea8ebf390bebd14431994cdbdc",
                          "typeString": "literal_string \"recoverWrongTokens: Cannot be dummyToken\""
                        },
                        "value": "recoverWrongTokens: Cannot be dummyToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23aa8193c1c8fed86cef69e0730f2d30e89a50ea8ebf390bebd14431994cdbdc",
                          "typeString": "literal_string \"recoverWrongTokens: Cannot be dummyToken\""
                        }
                      ],
                      "id": 4921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8331:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8331:89:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4930,
                  "nodeType": "ExpressionStatement",
                  "src": "8331:89:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4933,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4916,
                            "src": "8451:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4932,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5275,
                          "src": "8444:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$5275_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8444:21:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5275",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$5275",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 4931,
                      "name": "checkForToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4914,
                      "src": "8430:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$5275_$returns$__$",
                        "typeString": "function (contract IERC20) view"
                      }
                    },
                    "id": 4935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8430:36:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4936,
                  "nodeType": "ExpressionStatement",
                  "src": "8430:36:11"
                },
                {
                  "assignments": [
                    4938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4938,
                      "mutability": "mutable",
                      "name": "bal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4966,
                      "src": "8477:8:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4937,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8477:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4948,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4945,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8528:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakeLab_$5088",
                              "typeString": "contract StakeLab"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakeLab_$5088",
                              "typeString": "contract StakeLab"
                            }
                          ],
                          "id": 4944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8520:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4943,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8520:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8520:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4940,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4916,
                            "src": "8495:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4939,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5275,
                          "src": "8488:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$5275_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8488:21:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5275",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5214,
                      "src": "8488:31:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8488:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8477:57:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4955,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8587:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8587:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 4954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8579:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4953,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8579:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8579:19:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4958,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4938,
                        "src": "8600:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4950,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4916,
                            "src": "8551:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4949,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5275,
                          "src": "8544:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$5275_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 4951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8544:21:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5275",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5812,
                      "src": "8544:34:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5275_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5275_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8544:60:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4960,
                  "nodeType": "ExpressionStatement",
                  "src": "8544:60:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4962,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4916,
                        "src": "8639:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4963,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4938,
                        "src": "8654:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4961,
                      "name": "AdminTokenRecovery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4200,
                      "src": "8620:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8620:38:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4965,
                  "nodeType": "EmitStatement",
                  "src": "8615:43:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "746268cc",
            "id": 4967,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4919,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4918,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5146,
                  "src": "8311:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8311:9:11"
              }
            ],
            "name": "recoverWrongTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4916,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4967,
                  "src": "8279:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8279:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8278:23:11"
            },
            "returnParameters": {
              "id": 4920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8321:0:11"
            },
            "scope": 5088,
            "src": "8251:414:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4988,
              "nodeType": "Block",
              "src": "8751:102:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4981,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4188,
                            "src": "8801:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                              "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                            }
                          },
                          "id": 4983,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 4982,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4969,
                            "src": "8810:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8801:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4177_storage",
                            "typeString": "struct StakeLab.PoolInfo storage ref"
                          }
                        },
                        "id": 4984,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "protocolOwnerAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4176,
                        "src": "8801:35:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4985,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4971,
                        "src": "8838:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4976,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4188,
                            "src": "8761:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                              "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                            }
                          },
                          "id": 4978,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 4977,
                            "name": "_pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4969,
                            "src": "8770:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8761:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$4177_storage",
                            "typeString": "struct StakeLab.PoolInfo storage ref"
                          }
                        },
                        "id": 4979,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "RewardToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4158,
                        "src": "8761:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5275",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5812,
                      "src": "8761:39:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5275_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5275_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8761:85:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4987,
                  "nodeType": "ExpressionStatement",
                  "src": "8761:85:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2c636645",
            "id": 4989,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4974,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4973,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5146,
                  "src": "8741:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8741:9:11"
              }
            ],
            "name": "emergencyRewardWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4969,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4989,
                  "src": "8704:9:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4968,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8704:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4971,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4989,
                  "src": "8715:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8715:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8703:28:11"
            },
            "returnParameters": {
              "id": 4975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8751:0:11"
            },
            "scope": 5088,
            "src": "8671:182:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5060,
              "nodeType": "Block",
              "src": "9057:823:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5005,
                        "name": "_Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4993,
                        "src": "9082:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Ext_$4146",
                          "typeString": "contract IERC20Ext"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20Ext_$4146",
                          "typeString": "contract IERC20Ext"
                        }
                      ],
                      "id": 5004,
                      "name": "checkForToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4914,
                      "src": "9068:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$5275_$returns$__$",
                        "typeString": "function (contract IERC20) view"
                      }
                    },
                    "id": 5006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9068:21:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5007,
                  "nodeType": "ExpressionStatement",
                  "src": "9068:21:11"
                },
                {
                  "assignments": [
                    5009
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5009,
                      "mutability": "mutable",
                      "name": "lastRewardTime",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5060,
                      "src": "9139:19:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5008,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9139:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5018,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5010,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "9161:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 5011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9161:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 5012,
                        "name": "_startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4995,
                        "src": "9179:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9161:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 5016,
                      "name": "_startTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4995,
                      "src": "9210:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "9161:59:11",
                    "trueExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5014,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9192:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 5015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9192:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9139:81:11"
                },
                {
                  "assignments": [
                    5020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5020,
                      "mutability": "mutable",
                      "name": "decimalsRewardToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5060,
                      "src": "9230:24:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5019,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9230:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5024,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5021,
                        "name": "_Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4993,
                        "src": "9257:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Ext_$4146",
                          "typeString": "contract IERC20Ext"
                        }
                      },
                      "id": 5022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4145,
                      "src": "9257:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 5023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9257:17:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9230:44:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5026,
                          "name": "decimalsRewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5020,
                          "src": "9292:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3330",
                          "id": 5027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9314:2:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30_by_1",
                            "typeString": "int_const 30"
                          },
                          "value": "30"
                        },
                        "src": "9292:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e206861732077617920746f6f206d616e7920646563696d616c73",
                        "id": 5029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9318:33:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ad9bda9362ff9d68aee3190aa1169587fcbfb8bce0f8c5f1f2e3ce43a43c2f4",
                          "typeString": "literal_string \"Token has way too many decimals\""
                        },
                        "value": "Token has way too many decimals"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ad9bda9362ff9d68aee3190aa1169587fcbfb8bce0f8c5f1f2e3ce43a43c2f4",
                          "typeString": "literal_string \"Token has way too many decimals\""
                        }
                      ],
                      "id": 5025,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9284:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9284:68:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5031,
                  "nodeType": "ExpressionStatement",
                  "src": "9284:68:11"
                },
                {
                  "assignments": [
                    5033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5033,
                      "mutability": "mutable",
                      "name": "precision",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 5060,
                      "src": "9362:14:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5032,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9362:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5040,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 5034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9379:2:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3330",
                            "id": 5035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9384:2:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_30_by_1",
                              "typeString": "int_const 30"
                            },
                            "value": "30"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 5036,
                            "name": "decimalsRewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5020,
                            "src": "9389:19:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9384:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5038,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9383:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9379:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9362:47:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5045,
                            "name": "_Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4993,
                            "src": "9470:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Ext_$4146",
                              "typeString": "contract IERC20Ext"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 5046,
                            "name": "_rewardPerSecond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4991,
                            "src": "9507:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 5047,
                            "name": "precision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5033,
                            "src": "9553:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9600:1:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "id": 5049,
                            "name": "_startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4995,
                            "src": "9626:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 5050,
                            "name": "_endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4997,
                            "src": "9659:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 5051,
                            "name": "lastRewardTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5009,
                            "src": "9697:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9744:1:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "id": 5053,
                            "name": "_protocolOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4999,
                            "src": "9781:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 5054,
                              "name": "lastRewardTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5009,
                              "src": "9827:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 5055,
                              "name": "baseUserLimitTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4182,
                              "src": "9844:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9827:34:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Ext_$4146",
                              "typeString": "contract IERC20Ext"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 5044,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4177,
                          "src": "9434:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$4177_storage_ptr_$",
                            "typeString": "type(struct StakeLab.PoolInfo storage pointer)"
                          }
                        },
                        "id": 5057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "RewardToken",
                          "RewardPerSecond",
                          "TokenPrecision",
                          "dummyTokenStakedAmount",
                          "startTime",
                          "endTime",
                          "lastRewardTime",
                          "accRewardPerShare",
                          "protocolOwnerAddress",
                          "userLimitEndTime"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "9434:438:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                          "typeString": "struct StakeLab.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_memory_ptr",
                          "typeString": "struct StakeLab.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5041,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4188,
                        "src": "9420:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                          "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 5043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9420:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$4177_storage_$returns$__$",
                        "typeString": "function (struct StakeLab.PoolInfo storage ref)"
                      }
                    },
                    "id": 5058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9420:453:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5059,
                  "nodeType": "ExpressionStatement",
                  "src": "9420:453:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "cc43d9c4",
            "id": 5061,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5002,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5001,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5146,
                  "src": "9047:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9047:9:11"
              }
            ],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4991,
                  "mutability": "mutable",
                  "name": "_rewardPerSecond",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5061,
                  "src": "8941:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4990,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8941:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4993,
                  "mutability": "mutable",
                  "name": "_Token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5061,
                  "src": "8964:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Ext_$4146",
                    "typeString": "contract IERC20Ext"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4992,
                    "name": "IERC20Ext",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4146,
                    "src": "8964:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Ext_$4146",
                      "typeString": "contract IERC20Ext"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4995,
                  "mutability": "mutable",
                  "name": "_startTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5061,
                  "src": "8982:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4994,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8982:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4997,
                  "mutability": "mutable",
                  "name": "_endTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5061,
                  "src": "8999:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4996,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8999:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4999,
                  "mutability": "mutable",
                  "name": "_protocolOwner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5061,
                  "src": "9014:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9014:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8940:97:11"
            },
            "returnParameters": {
              "id": 5003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9057:0:11"
            },
            "scope": 5088,
            "src": "8928:952:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5086,
              "nodeType": "Block",
              "src": "10056:152:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5071,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5063,
                        "src": "10078:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5070,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4476,
                      "src": "10067:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10067:16:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5073,
                  "nodeType": "ExpressionStatement",
                  "src": "10067:16:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5074,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4188,
                          "src": "10094:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$4177_storage_$dyn_storage",
                            "typeString": "struct StakeLab.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 5076,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5075,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5063,
                          "src": "10103:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10094:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$4177_storage",
                          "typeString": "struct StakeLab.PoolInfo storage ref"
                        }
                      },
                      "id": 5077,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "RewardPerSecond",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4160,
                      "src": "10094:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5078,
                      "name": "_rewardPerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5065,
                      "src": "10127:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10094:49:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5080,
                  "nodeType": "ExpressionStatement",
                  "src": "10094:49:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5082,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5063,
                        "src": "10178:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5083,
                        "name": "_rewardPerSecond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5065,
                        "src": "10184:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5081,
                      "name": "SetRewardPerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4230,
                      "src": "10159:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 5084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10159:42:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5085,
                  "nodeType": "EmitStatement",
                  "src": "10154:47:11"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b5f578fc",
            "id": 5087,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5068,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5067,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5146,
                  "src": "10046:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10046:9:11"
              }
            ],
            "name": "setRewardPerSecond",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5063,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5087,
                  "src": "9997:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9997:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5065,
                  "mutability": "mutable",
                  "name": "_rewardPerSecond",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5087,
                  "src": "10011:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10011:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9996:40:11"
            },
            "returnParameters": {
              "id": 5069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10056:0:11"
            },
            "scope": 5088,
            "src": "9969:239:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5089,
        "src": "597:9614:11"
      }
    ],
    "src": "32:10180:11"
  },
  "bytecode": "",
  "bytecodeSha1": "fafb448ecd6002632a0fa705f2e94e8ae9dfafb4",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "StakeLab",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Ownable.transferOwnership": {
          "94": [
            1287,
            1309,
            true
          ],
          "95": [
            2088,
            2110,
            true
          ]
        }
      },
      "11": {
        "StakeLab.add": {
          "77": [
            9161,
            9189,
            true
          ],
          "78": [
            9292,
            9316,
            true
          ]
        },
        "StakeLab.checkForToken": {
          "85": [
            8151,
            8187,
            true
          ]
        },
        "StakeLab.deposit": {
          "79": [
            4939,
            4956,
            false
          ],
          "80": [
            4960,
            4999,
            false
          ],
          "81": [
            5023,
            5061,
            true
          ],
          "82": [
            5424,
            5435,
            false
          ]
        },
        "StakeLab.getMultiplier": {
          "86": [
            2788,
            2810,
            true
          ],
          "87": [
            2849,
            2869,
            true
          ],
          "88": [
            2873,
            2893,
            false
          ],
          "89": [
            2941,
            2959,
            false
          ]
        },
        "StakeLab.pendingReward": {
          "75": [
            3367,
            3404,
            false
          ],
          "76": [
            3408,
            3440,
            false
          ]
        },
        "StakeLab.recoverWrongTokens": {
          "74": [
            8339,
            8375,
            true
          ]
        },
        "StakeLab.safeTransfer": {
          "84": [
            7218,
            7231,
            false
          ]
        },
        "StakeLab.updatePool": {
          "83": [
            4233,
            4271,
            false
          ]
        },
        "StakeLab.withdraw": {
          "72": [
            5866,
            5888,
            true
          ],
          "73": [
            6226,
            6237,
            false
          ]
        }
      },
      "2": {},
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "96": [
            3495,
            3516,
            false
          ],
          "97": [
            3624,
            3654,
            true
          ]
        }
      },
      "6": {
        "Address._verifyCallResult": {
          "92": [
            6254,
            6261,
            false
          ],
          "93": [
            6395,
            6416,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "90": [
            4767,
            4797,
            true
          ],
          "91": [
            4858,
            4876,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "48": [
            678,
            695
          ]
        }
      },
      "1": {
        "Ownable.owner": {
          "27": [
            1140,
            1153
          ]
        },
        "Ownable.renounceOwnership": {
          "19": [
            1770,
            1815
          ],
          "20": [
            1825,
            1844
          ]
        },
        "Ownable.transferOwnership": {
          "45": [
            2080,
            2153
          ],
          "46": [
            2163,
            2206
          ],
          "47": [
            2216,
            2233
          ]
        }
      },
      "11": {
        "StakeLab.add": {
          "34": [
            9068,
            9089
          ],
          "35": [
            9284,
            9352
          ],
          "36": [
            9420,
            9873
          ]
        },
        "StakeLab.changeBaseUserLimitTime": {
          "2": [
            7942,
            7967
          ]
        },
        "StakeLab.changeEndTime": {
          "1": [
            7467,
            7503
          ]
        },
        "StakeLab.changePoolUserLimitEndTime": {
          "26": [
            7714,
            7753
          ]
        },
        "StakeLab.changeUserLimit": {
          "30": [
            7833,
            7855
          ]
        },
        "StakeLab.checkForToken": {
          "57": [
            8143,
            8228
          ],
          "58": [
            8121,
            8127
          ]
        },
        "StakeLab.deposit": {
          "37": [
            5015,
            5099
          ],
          "38": [
            5120,
            5136
          ],
          "39": [
            5254,
            5276
          ],
          "40": [
            5286,
            5324
          ],
          "41": [
            5334,
            5410
          ],
          "42": [
            5451,
            5502
          ],
          "43": [
            5522,
            5594
          ],
          "44": [
            5605,
            5644
          ]
        },
        "StakeLab.emergencyRewardWithdraw": {
          "3": [
            8761,
            8846
          ]
        },
        "StakeLab.emergencyWithdraw": {
          "12": [
            6716,
            6758
          ],
          "13": [
            6768,
            6783
          ],
          "14": [
            6793,
            6812
          ],
          "15": [
            6823,
            6882
          ],
          "16": [
            6892,
            6947
          ]
        },
        "StakeLab.getMultiplier": {
          "59": [
            2780,
            2835
          ],
          "60": [
            2909,
            2917
          ],
          "61": [
            2975,
            3002
          ],
          "62": [
            3022,
            3040
          ]
        },
        "StakeLab.massUpdatePools": {
          "17": [
            4023,
            4038
          ],
          "18": [
            4002,
            4007
          ]
        },
        "StakeLab.pendingReward": {
          "28": [
            3612,
            3693
          ],
          "29": [
            3713,
            3793
          ]
        },
        "StakeLab.poolLength": {
          "0": [
            2563,
            2585
          ]
        },
        "StakeLab.recoverWrongTokens": {
          "21": [
            8331,
            8420
          ],
          "22": [
            8430,
            8466
          ],
          "23": [
            8544,
            8604
          ],
          "24": [
            8615,
            8658
          ]
        },
        "StakeLab.safeTransfer": {
          "55": [
            7247,
            7275
          ],
          "56": [
            7306,
            7338
          ]
        },
        "StakeLab.setRewardPerSecond": {
          "31": [
            10067,
            10083
          ],
          "32": [
            10094,
            10143
          ],
          "33": [
            10154,
            10201
          ]
        },
        "StakeLab.stopReward": {
          "25": [
            7576,
            7613
          ]
        },
        "StakeLab.updatePool": {
          "50": [
            4287,
            4294
          ],
          "51": [
            4366,
            4403
          ],
          "52": [
            4417,
            4424
          ],
          "53": [
            4592,
            4676
          ],
          "54": [
            4686,
            4723
          ]
        },
        "StakeLab.withdraw": {
          "4": [
            5858,
            5911
          ],
          "5": [
            5922,
            5938
          ],
          "6": [
            6056,
            6078
          ],
          "7": [
            6088,
            6126
          ],
          "8": [
            6136,
            6212
          ],
          "9": [
            6253,
            6304
          ],
          "10": [
            6325,
            6379
          ],
          "11": [
            6390,
            6430
          ]
        }
      },
      "2": {},
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "64": [
            3616,
            3701
          ]
        },
        "SafeERC20.safeTransfer": {
          "49": [
            786,
            872
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "63": [
            985,
            1081
          ]
        }
      },
      "6": {
        "Address._verifyCallResult": {
          "70": [
            6277,
            6294
          ],
          "71": [
            6785,
            6805
          ]
        },
        "Address.functionCall": {
          "65": [
            3708,
            3767
          ]
        },
        "Address.functionCallWithValue": {
          "66": [
            4759,
            4840
          ],
          "67": [
            4850,
            4910
          ],
          "68": [
            5065,
            5124
          ]
        },
        "Address.isContract": {
          "69": [
            1117,
            1132
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.3.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/IERC20",
    "IERC20Ext",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "597:9614:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:93;;;:::i;:::-;;;;;;;;;;;;;;;;7385:125;;;;;;;;;;;;;;;;-1:-1:-1;7385:125:11;;;;;;;;;:::i;:::-;;1881:26;;;;;;;;;;;;;;;;-1:-1:-1;1881:26:11;;:::i;:::-;;;;-1:-1:-1;;;;;1881:26:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7868:106;;;;;;;;;;;;;;;;-1:-1:-1;7868:106:11;;:::i;8671:182::-;;;;;;;;;;;;;;;;-1:-1:-1;8671:182:11;;;;;;;:::i;5681:756::-;;;;;;;;;;;;;;;;-1:-1:-1;5681:756:11;;;;;;;:::i;6505:450::-;;;;;;;;;;;;;;;;-1:-1:-1;6505:450:11;;:::i;3880:175::-;;;:::i;1735:34::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1735:34:11;;;;;;;;;;;;;;1706:145:1;;;:::i;8251:414:11:-;;;;;;;;;;;;;;;;-1:-1:-1;8251:414:11;-1:-1:-1;;;;;8251:414:11;;:::i;7516:104::-;;;;;;;;;;;;;;;;-1:-1:-1;7516:104:11;;:::i;7626:134::-;;;;;;;;;;;;;;;;-1:-1:-1;7626:134:11;;;;;;;:::i;1083:77:1:-;;;:::i;1958:66:11:-;;;;;;;;;;;;;;;;-1:-1:-1;1958:66:11;;;;;;-1:-1:-1;;;;;1958:66:11;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3107:693;;;;;;;;;;;;;;;;-1:-1:-1;3107:693:11;;;;;;-1:-1:-1;;;;;3107:693:11;;:::i;7766:96::-;;;;;;;;;;;;;;;;-1:-1:-1;7766:96:11;;:::i;1775:38::-;;;:::i;9969:239::-;;;;;;;;;;;;;;;;-1:-1:-1;9969:239:11;;;;;;;:::i;1819:29::-;;;:::i;8928:952::-;;;;;;;;;;;;;;;;-1:-1:-1;8928:952:11;;;-1:-1:-1;;;;;8928:952:11;;;;;;;;;;;;;;;;;;;;;;:::i;4759:892::-;;;;;;;;;;;;;;;;-1:-1:-1;4759:892:11;;;;;;;:::i;2000:240:1:-;;;;;;;;;;;;;;;;-1:-1:-1;2000:240:1;-1:-1:-1;;;;;2000:240:1;;:::i;2499:93:11:-;2570:8;:15;2499:93;:::o;7385:125::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;7493:10:11::1;7467:36;;:8;7476:4;7467:14;;;;;;;;;::::0;;;::::1;::::0;;;:22:::1;:14;::::0;;::::1;;:22;:36:::0;;;;::::1;::::0;;-1:-1:-1;;7385:125:11:o;1881:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1881:26:11;;;;-1:-1:-1;1881:26:11;;;;;;;;;;;;;;;;;:::o;7868:106::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;7942:17:11::1;:25:::0;7868:106::o;8671:182::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;8761:85:11::1;8801:8;8810:4;8801:14;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;-1:-1:-1::0;;;;;8801:35:11::1;8838:7;8761:8;8770:4;8761:14;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:26:::0;-1:-1:-1;;;;;8761:26:11::1;::::0;:85;:39:::1;:85::i;:::-;8671:182:::0;;:::o;5681:756::-;5749:21;5773:8;5782:4;5773:14;;;;;;;;;;;;;;;;5821;;;:8;:14;;;;;;5836:10;5821:26;;;;;;;5866:11;;5773:14;;;;;;;;-1:-1:-1;5866:22:11;-1:-1:-1;5866:22:11;5858:53;;;;;-1:-1:-1;;;5858:53:11;;;;;;;;;;;;-1:-1:-1;;;5858:53:11;;;;;;;;;;;;;;;5922:16;5933:4;5922:10;:16::i;:::-;5949:15;6030:4;:15;;;6007:4;:19;;;5982:4;:22;;;5968:4;:11;;;:36;:58;;;;;6056:22;;;;;;;6088:27;;;:38;;;;;;;6193:19;;;;6168:22;;;;6154:11;;5968:58;;;;5967:78;;;;;-1:-1:-1;6154:36:11;6193:19;6154:58;;;;;6136:15;;;:76;6226:11;;6223:92;;6266:16;;6253:51;;-1:-1:-1;;;;;6266:16:11;6284:10;6296:7;6253:12;:51::i;:::-;6325:54;6338:10;6358;6371:7;6325:12;:54::i;:::-;6395:35;;;;;;;;6416:4;;6404:10;;6395:35;;;;;;;;;5681:756;;;;;:::o;6505:450::-;6565:21;6589:8;6598:4;6589:14;;;;;;;;;;;;;;;;6637;;;:8;:14;;;;;;6652:10;6637:26;;;;;;;6695:11;;6716:27;6589:14;;;;;;;6716:27;;;:42;;;;;;;6768:15;;;-1:-1:-1;6793:15:11;;:19;;;;6589:14;;-1:-1:-1;6823:59:11;;:10;-1:-1:-1;;;;;6823:23:11;;6695:11;6823:23;:59::i;:::-;6897:50;;;;;;;;6927:4;;6915:10;;6897:50;;;;;;;;;6505:450;;;;:::o;3880:175::-;3941:8;:15;3924:14;3966:83;3994:6;3988:3;:12;3966:83;;;4023:15;4034:3;4023:10;:15::i;:::-;4002:5;;3966:83;;1735:34;;;:::o;1706:145:1:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;1812:1:::1;1796:6:::0;;1775:40:::1;::::0;-1:-1:-1;;;;;1796:6:1;;::::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1842:1;1825:19:::0;;-1:-1:-1;;;;;;1825:19:1::1;::::0;;1706:145::o;8251:414:11:-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;8364:10:11::1;-1:-1:-1::0;;;;;8339:36:11::1;:13;-1:-1:-1::0;;;;;8339:36:11::1;;;8331:89;;;;-1:-1:-1::0;;;8331:89:11::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8430:36;8451:13;8430;:36::i;:::-;8477:8;8495:13;-1:-1:-1::0;;;;;8488:31:11::1;;8528:4;8488:46;;;;;;;;;;;;;-1:-1:-1::0;;;;;8488:46:11::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;8488:46:11;;-1:-1:-1;8544:60:11::1;-1:-1:-1::0;;;;;8544:34:11;::::1;8587:10;8488:46:::0;8544:34:::1;:60::i;:::-;8620:38;::::0;;-1:-1:-1;;;;;8620:38:11;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;;;::::1;1356:1:1;8251:414:11::0;:::o;7516:104::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;7601:12:11::1;7576:8;7585:4;7576:14;;;;;;;;;;;;;;;;;;:22;;:37;;;;7516:104:::0;:::o;7626:134::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;7748:5:11::1;7714:8;7723:4;7714:14;;;;;;;;;;;;;;;;;;:31;;:39;;;;7626:134:::0;;:::o;1083:77:1:-;1121:7;1147:6;-1:-1:-1;;;;;1147:6:1;1083:77;:::o;1958:66:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3107:693::-;3182:7;3201:20;;:::i;:::-;3224:8;3233:4;3224:14;;;;;;;;;;;;;;;;;3201:37;;;;;;;;3224:14;;;;;;;3201:37;;-1:-1:-1;;;;;3201:37:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3248:20:11;;:::i;:::-;-1:-1:-1;3271:14:11;;;;:8;:14;;;;;;;;-1:-1:-1;;;;;3271:21:11;;;;;;;;;;3248:44;;;;;;;;;;;;;;;;;;;3330:22;;;;3385:19;;;;3367:15;:37;:73;;;;-1:-1:-1;3408:27:11;;;;:32;;3367:73;3363:341;;;3456:18;3477:57;3491:4;:19;;;3512:15;3529:4;3477:13;:57::i;:::-;3456:78;;3548:14;3578:4;:20;;;3565:10;:33;3548:50;;3666:4;:27;;;3643:4;:19;;;3634:6;:28;3633:60;;;;;;3612:81;;;;3363:341;;;3778:15;;;;3755:19;;;;3721:11;;:31;;3755:19;3721:53;;;;;3720:73;;3107:693;-1:-1:-1;;;;;;3107:693:11:o;7766:96::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;7833:13:11::1;:22:::0;7766:96::o;1775:38::-;;;;:::o;9969:239::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;10067:16:11::1;10078:4;10067:10;:16::i;:::-;10127;10094:8;10103:4;10094:14;;;;;;;;;;;;;;;;;;:30;;:49;;;;10159:42;10178:4;10184:16;10159:42;;;;;;;;;;;;;;;;;;;;;;;;9969:239:::0;;:::o;1819:29::-;;;;:::o;8928:952::-;1297:12:1;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;9068:21:11::1;9082:6;9068:13;:21::i;:::-;9139:19;9179:10;9161:15;:28;:59;;9210:10;9161:59;;;9192:15;9161:59;9139:81;;9230:24;9257:6;-1:-1:-1::0;;;;;9257:15:11::1;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;9257:17:11;;-1:-1:-1;9314:2:11::1;9292:24:::0;::::1;9284:68;;;::::0;;-1:-1:-1;;;9284:68:11;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9434:438;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;9434:438:11;;::::1;::::0;;::::1;::::0;::::1;::::0;;;9384:2:::1;:24:::0;;;::::1;9379:2;:30:::0;;::::1;9434:438:::0;;;;;;9362:14:::1;9434:438:::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9844:17:::1;::::0;;9827:34;;::::1;9434:438:::0;;;;;;;;::::1;::::0;;;;;;9420:8:::1;:453:::0;;;;::::1;::::0;;;;;;;;;;::::1;::::0;;::::1;::::0;;;;::::1;-1:-1:-1::0;;;;;;9420:453:11;;::::1;;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;8928:952::o;4759:892::-;4827:21;4851:8;4860:4;4851:14;;;;;;;;;;;;;;;;4899;;;:8;:14;;;;;;4914:10;4899:26;;;;;;;4939:13;;4851:14;;;;;;;;-1:-1:-1;4939:17:11;;;;:60;;;4978:4;:21;;;4960:15;:39;4939:60;4936:174;;;5048:13;;5023:11;;:21;;:38;;5015:84;;;;-1:-1:-1;;;5015:84:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5120:16;5131:4;5120:10;:16::i;:::-;5147:15;5228:4;:15;;;5205:4;:19;;;5180:4;:22;;;5166:4;:11;;;:36;:58;;;;;5254:22;;;;;;5286:27;;;:38;;;;;;5391:19;;;;5366:22;;;;5352:11;;5166:58;;;;5165:78;;;;;-1:-1:-1;5352:36:11;5391:19;5352:58;;;;;5334:15;;;:76;5424:11;;5421:92;;5464:16;;5451:51;;-1:-1:-1;;;;;5464:16:11;5482:10;5494:7;5451:12;:51::i;:::-;5522:72;-1:-1:-1;;;;;5522:10:11;:27;5558:10;5579:4;5586:7;5522:27;:72::i;:::-;5610:34;;;;;;;;5630:4;;5618:10;;5610:34;;;;;;;;;4759:892;;;;;:::o;2000:240:1:-;1297:12;:10;:12::i;:::-;1287:6;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;2088:22:1;::::1;2080:73;;;;-1:-1:-1::0;;;2080:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;;2168:38:::1;::::0;-1:-1:-1;;;;;2168:38:1;;::::1;::::0;2189:6;::::1;::::0;2168:38:::1;::::0;::::1;2216:6;:17:::0;;-1:-1:-1;;;;;;2216:17:1::1;-1:-1:-1::0;;;;;2216:17:1;;;::::1;::::0;;;::::1;::::0;;2000:240::o;598:104:0:-;685:10;598:104;:::o;704:175:5:-;813:58;;;-1:-1:-1;;;;;813:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;813:58:5;-1:-1:-1;;;813:58:5;;;786:86;;806:5;;786:19;:86::i;:::-;704:175;;;:::o;4128:602:11:-;4181:21;4205:8;4214:4;4205:14;;;;;;;;;;;;;;;;;;4181:38;;4252:4;:19;;;4233:15;:38;4229:75;;4287:7;;;4229:75;4318:27;;;;4314:120;;4388:15;4366:19;;;;:37;4417:7;;4314:120;4478:19;;;;4464:57;;;;;;;;;;-1:-1:-1;;;;;4464:57:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4443:18;;4464:57;;4499:15;;4464:13;:57::i;:::-;4443:78;;4531:14;4561:4;:20;;;4548:10;:33;4531:50;;4649:4;:27;;;4627:4;:19;;;4618:6;:28;:58;;;;;4592:22;;;:84;;4618:58;;;;4592:84;;;;;-1:-1:-1;;4708:15:11;4686:19;;;;:37;4128:602;;:::o;7075:280::-;7160:11;7174:5;-1:-1:-1;;;;;7174:15:11;;7198:4;7174:30;;;;;;;;;;;;;-1:-1:-1;;;;;7174:30:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7174:30:11;;-1:-1:-1;7218:13:11;;;7214:135;;;7247:28;-1:-1:-1;;;;;7247:18:11;;7266:3;7271;7247:18;:28::i;:::-;7214:135;;;7306:32;-1:-1:-1;;;;;7306:18:11;;7325:3;7330:7;7306:18;:32::i;:::-;7075:280;;;;:::o;7980:265::-;8058:8;:15;8041:14;8083:156;8113:6;8106:4;:13;8083:156;;;8181:6;-1:-1:-1;;;;;8151:36:11;:8;8160:4;8151:14;;;;;;;;;;;;;;;;;;;;;:26;-1:-1:-1;;;;;8151:26:11;:36;;8143:85;;;;-1:-1:-1;;;8143:85:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8121:6;;8083:156;;2665:382;2761:7;2796:4;:14;;;2788:5;:22;:47;;2821:4;:14;;;2788:47;;;2813:5;2788:47;2780:55;;2857:4;:12;;;2849:5;:20;:44;;;;2879:4;:14;;;2873:3;:20;2849:44;2845:83;;;-1:-1:-1;2916:1:11;2909:8;;2845:83;2947:4;:12;;;2941:3;:18;2937:76;;;2997:5;2982:4;:12;;;:20;2975:27;;;;2937:76;-1:-1:-1;3029:11:11;;;2665:382;;;;;;:::o;885:203:5:-;1012:68;;;-1:-1:-1;;;;;1012:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:5;-1:-1:-1;;;1012:68:5;;;985:96;;1005:5;;2967:751;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:5;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:5;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:5;3616:85;;;;-1:-1:-1;;;3616:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3581:193:6;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;3581:193;-1:-1:-1;;;;3581:193:6:o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:6;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:6:o;726:413::-;1086:20;1124:8;;;726:413::o;6111:725::-;6226:12;6254:7;6250:580;;;-1:-1:-1;6284:10:6;6277:17;;6250:580;6395:17;;:21;6391:429;;6653:10;6647:17;6713:15;6700:10;6696:2;6692:19;6685:44;6602:145;6792:12;6785:20;;-1:-1:-1;;;6785:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    597,
    10211
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77300089 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA84F2730 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA84F2730 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xB5F578FC EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xBEBDBC0C EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xCC43D9C4 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x458 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x77300089 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x7FFB25EF EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x98969E82 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x99C5CCF4 EQ PUSH2 0x3A5 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x67479EC5 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x746268CC EQ PUSH2 0x2C6 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x84F8604 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x26102C47 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x2C636645 EQ PUSH2 0x22F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x484 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP12 DUP13 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP11 SWAP1 SWAP11 MSTORE DUP10 DUP2 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP9 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0xA0 DUP8 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x140 ADD SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x57B JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x698 JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x195 PUSH2 0x8BF JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB4F JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC5B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xDE1 JUMP JUMPDEST PUSH2 0x15A PUSH2 0xE3E JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE44 JUMP JUMPDEST PUSH2 0x15A PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x80 ADD CALLDATALOAD AND PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1260 JUMP JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x48C PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x4DC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x4F0 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 PUSH1 0xA SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x51B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0xA SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0x9 SWAP1 SWAP10 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND SWAP11 POP SWAP7 SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 AND DUP11 JUMP JUMPDEST PUSH2 0x583 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x5D3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x5E0 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x630 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x694 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x640 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x9 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x673 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0xA SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x14DA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6A7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0xA SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x71A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x723 DUP5 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x5 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD MUL DUP2 PUSH2 0x741 JUMPI INVALID JUMPDEST DUP5 SLOAD DUP8 SWAP1 SUB DUP6 SSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP9 SWAP1 SUB SWAP1 SSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD DUP7 SLOAD SWAP4 SWAP1 SWAP3 DIV SWAP4 SWAP1 SWAP4 SUB SWAP4 POP MUL DUP2 PUSH2 0x771 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 DUP4 ADD SSTORE DUP1 ISZERO PUSH2 0x793 JUMPI DUP3 SLOAD PUSH2 0x793 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x7BE PUSH32 0x0 CALLER DUP7 PUSH2 0x163D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD DUP7 SWAP2 CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x80B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x3 PUSH1 0xA SWAP1 SWAP6 MUL SWAP1 SWAP3 ADD SWAP4 DUP5 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE DUP5 DUP2 SSTORE PUSH1 0x1 DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SWAP4 POP PUSH2 0x882 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x694 JUMPI PUSH2 0x8D6 DUP2 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x8C5 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x90A PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x95A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x9AC PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x9FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B80 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA76 DUP2 PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xB07 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x74545154AAC348A3EAC92596BD1971957CA94795F4E954EC5F613B55FAB78129 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xB57 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xBA7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBB5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xBD5 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xC25 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC33 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC89 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC96 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0xA SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0x9 ADD SLOAD SWAP1 SWAP2 AND PUSH2 0x120 DUP3 ADD MSTORE SWAP1 POP PUSH2 0xD2F PUSH2 0x1B65 JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x80 DUP4 ADD MLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0xD82 JUMPI POP PUSH1 0x60 DUP4 ADD MLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDC0 JUMPI PUSH1 0x0 PUSH2 0xD98 DUP5 PUSH1 0x80 ADD MLOAD TIMESTAMP DUP7 PUSH2 0x1779 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD DUP3 MUL SWAP1 POP DUP5 PUSH1 0x60 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP3 MUL DUP2 PUSH2 0xDB8 JUMPI INVALID JUMPDEST DIV DUP4 ADD SWAP3 POP POP POP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD DUP4 MLOAD DUP4 MUL DUP2 PUSH2 0xDD5 JUMPI INVALID JUMPDEST DIV SUB SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDE9 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE4C PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE9C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xEA5 DUP3 PUSH2 0x1531 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xEB3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xCF46B21C204617FFB815B827463DB479E0F3CDC9586E33690D10CED9541FCDA0 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF19 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xF69 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xF72 DUP5 PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x0 DUP4 TIMESTAMP GT PUSH2 0xF81 JUMPI DUP4 PUSH2 0xF83 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFD6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1E DUP2 LT PUSH2 0x1045 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206861732077617920746F6F206D616E7920646563696D616C7300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP9 DUP10 MSTORE PUSH1 0x1E SWAP3 SWAP1 SWAP3 SUB PUSH1 0xA SWAP1 DUP2 EXP SWAP2 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP5 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP6 ADD DUP7 DUP2 MSTORE PUSH1 0xA0 DUP7 ADD DUP4 DUP2 MSTORE PUSH1 0xC0 DUP8 ADD SWAP10 DUP11 MSTORE PUSH1 0xE0 DUP8 ADD SWAP11 DUP12 MSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP9 ADD PUSH2 0x100 DUP9 ADD SWAP1 DUP2 MSTORE SWAP9 DUP13 AND PUSH2 0x120 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP1 SLOAD SWAP10 DUP11 ADD DUP2 SSTORE SWAP1 SWAP5 MSTORE SWAP6 MLOAD SWAP7 SWAP1 SWAP4 MUL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B DUP2 ADD DUP1 SLOAD SWAP8 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP9 DUP10 AND OR SWAP1 SSTORE SWAP11 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C DUP13 ADD SSTORE SWAP3 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85D DUP12 ADD SSTORE SWAP2 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85E DUP11 ADD SSTORE MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85F DUP10 ADD SSTORE SWAP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F860 DUP9 ADD SSTORE SWAP3 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F861 DUP8 ADD SSTORE SWAP3 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F862 DUP7 ADD SSTORE MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F863 DUP6 ADD SSTORE MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F864 SWAP1 SWAP4 ADD DUP1 SLOAD SWAP4 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x126F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x2 SLOAD PUSH1 0xA SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP ISZERO DUP1 ISZERO SWAP1 PUSH2 0x12AB JUMPI POP DUP2 PUSH1 0x8 ADD SLOAD TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x12F4 JUMPI PUSH1 0x2 SLOAD DUP2 SLOAD DUP5 ADD GT ISZERO PUSH2 0x12F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BCE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12FD DUP5 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x5 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD MUL DUP2 PUSH2 0x131B JUMPI INVALID JUMPDEST DUP5 SLOAD DUP8 ADD DUP6 SSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP9 ADD SWAP1 SSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x5 DUP8 ADD SLOAD DUP7 SLOAD SWAP4 SWAP1 SWAP3 DIV SWAP4 SWAP1 SWAP4 SUB SWAP4 POP MUL DUP2 PUSH2 0x1349 JUMPI INVALID JUMPDEST DIV PUSH1 0x1 DUP4 ADD SSTORE DUP1 ISZERO PUSH2 0x136B JUMPI DUP3 SLOAD PUSH2 0x136B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x163D JUMP JUMPDEST PUSH2 0x13A0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP8 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD DUP7 SWAP2 CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x13E6 PUSH2 0x14D6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1436 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1C39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x147B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BA8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x152C SWAP1 DUP5 SWAP1 PUSH2 0x1832 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1540 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xA MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT PUSH2 0x1561 JUMPI POP PUSH2 0x163A JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH2 0x1576 JUMPI TIMESTAMP PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH2 0x163A JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP6 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP5 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x8 DUP5 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP5 ADD SLOAD SWAP1 SWAP2 AND PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH2 0x1601 SWAP2 TIMESTAMP SWAP1 PUSH2 0x1779 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD SLOAD DUP3 MUL SWAP1 POP DUP3 PUSH1 0x3 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD DUP3 MUL DUP2 PUSH2 0x1621 JUMPI INVALID JUMPDEST PUSH1 0x5 DUP6 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP2 DIV SWAP1 SWAP2 ADD SWAP1 SSTORE POP POP TIMESTAMP PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x168C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16DB JUMPI PUSH2 0x16D6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP4 PUSH2 0x14DA JUMP JUMPDEST PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x16EF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP5 PUSH2 0x14DA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x152C JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x171A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0xA SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C15 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x16FB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE0 ADD MLOAD DUP5 GT PUSH2 0x1790 JUMPI DUP2 PUSH1 0xE0 ADD MLOAD PUSH2 0x1792 JUMP JUMPDEST DUP4 JUMPDEST SWAP4 POP DUP2 PUSH1 0xC0 ADD MLOAD DUP5 GT DUP1 PUSH2 0x17A9 JUMPI POP DUP2 PUSH1 0xE0 ADD MLOAD DUP4 LT JUMPDEST ISZERO PUSH2 0x17B6 JUMPI POP PUSH1 0x0 PUSH2 0x17D5 JUMP JUMPDEST DUP2 PUSH1 0xC0 ADD MLOAD DUP4 GT ISZERO PUSH2 0x17D0 JUMPI DUP4 DUP3 PUSH1 0xC0 ADD MLOAD SUB SWAP1 POP PUSH2 0x17D5 JUMP JUMPDEST POP DUP3 DUP3 SUB JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x16EF SWAP1 DUP6 SWAP1 JUMPDEST PUSH1 0x60 PUSH2 0x1887 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18E3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x152C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x152C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C59 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x18F2 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x18FA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x193B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BEF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1944 DUP6 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x1995 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x19D4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x19B5 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A36 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A4B DUP3 DUP3 DUP7 PUSH2 0x1A5C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1A6B JUMPI POP DUP2 PUSH2 0x17D5 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1A7B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AC5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AAD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1AF2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID PUSH19 0x65636F76657257726F6E67546F6B656E733A20 NUMBER PUSH2 0x6E6E PUSH16 0x742062652064756D6D79546F6B656E4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573736465706F7369743A2075736572206861 PUSH20 0x20686974206465706F7369742063617041646472 PUSH6 0x73733A20696E PUSH20 0x756666696369656E742062616C616E636520666F PUSH19 0x2063616C6C636865636B466F72546F6B656E3A KECCAK256 PUSH19 0x657761726420746F6B656E2070726F76696465 PUSH5 0x4F776E6162 PUSH13 0x653A2063616C6C657220697320 PUSH15 0x6F7420746865206F776E6572536166 PUSH6 0x45524332303A KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A264697066735822122016CFE9C8 PUSH4 0xA1B39A10 0x4F PUSH4 0x4DA18CC6 PUSH15 0x254D5C9602BCB1BD89C7DB7B8F3544 0xE1 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        597,
        10211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14D"
    },
    "25": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x77300089"
    },
    "38": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "GT",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA84F2730"
    },
    "49": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "GT",
      "path": "11"
    },
    "50": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "54": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "55": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA84F2730"
    },
    "60": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3C2"
    },
    "64": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "65": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "66": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB5F578FC"
    },
    "71": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "72": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3CA"
    },
    "75": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "76": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "77": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xBEBDBC0C"
    },
    "82": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "83": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3ED"
    },
    "86": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "87": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "88": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xCC43D9C4"
    },
    "93": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "94": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3F5"
    },
    "97": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "98": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "99": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE2BBB158"
    },
    "104": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "105": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x435"
    },
    "108": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "109": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "110": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "116": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x458"
    },
    "119": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "120": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14D"
    },
    "123": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMP",
      "path": "11"
    },
    "124": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "125": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "126": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x77300089"
    },
    "131": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "132": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2EC"
    },
    "135": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "136": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "137": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x7FFB25EF"
    },
    "142": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "143": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x309"
    },
    "146": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "147": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "148": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8DA5CB5B"
    },
    "153": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "154": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32C"
    },
    "157": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "158": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "159": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x93F1A40B"
    },
    "164": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "165": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x334"
    },
    "168": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "169": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "170": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x98969E82"
    },
    "175": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "176": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x379"
    },
    "179": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "180": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "181": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x99C5CCF4"
    },
    "186": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "187": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A5"
    },
    "190": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "191": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14D"
    },
    "194": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMP",
      "path": "11"
    },
    "195": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "196": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "197": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x441A3E70"
    },
    "202": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "GT",
      "path": "11"
    },
    "203": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "207": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "208": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x441A3E70"
    },
    "213": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "214": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x252"
    },
    "217": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "218": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "219": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x5312EA8E"
    },
    "224": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "225": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x275"
    },
    "228": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "229": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "230": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x630B5BA1"
    },
    "235": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "236": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x292"
    },
    "239": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "240": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "241": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x67479EC5"
    },
    "246": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "247": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x29A"
    },
    "250": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "251": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "252": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x715018A6"
    },
    "257": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "258": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BE"
    },
    "261": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "262": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "263": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x746268CC"
    },
    "268": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "269": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C6"
    },
    "272": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "273": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14D"
    },
    "276": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMP",
      "path": "11"
    },
    "277": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "278": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "279": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x81E3EDA"
    },
    "284": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "285": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x152"
    },
    "288": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "289": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "290": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x84F8604"
    },
    "295": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "296": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16C"
    },
    "299": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "300": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "301": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x1526FE27"
    },
    "306": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "307": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x197"
    },
    "310": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "311": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "312": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x26102C47"
    },
    "317": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "318": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x212"
    },
    "321": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "322": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "323": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x2C636645"
    },
    "328": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "EQ",
      "path": "11"
    },
    "329": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22F"
    },
    "332": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "333": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "334": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "336": {
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "DUP1",
      "path": "11"
    },
    "337": {
      "first_revert": true,
      "fn": null,
      "offset": [
        597,
        10211
      ],
      "op": "REVERT",
      "path": "11"
    },
    "338": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "339": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15A"
    },
    "342": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x47E"
    },
    "345": {
      "fn": "StakeLab.poolLength",
      "jump": "i",
      "offset": [
        2499,
        2592
      ],
      "op": "JUMP",
      "path": "11"
    },
    "346": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "347": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "349": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "DUP1",
      "path": "11"
    },
    "350": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "351": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "352": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "DUP3",
      "path": "11"
    },
    "353": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "354": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "355": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "356": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "DUP2",
      "path": "11"
    },
    "357": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "358": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "SUB",
      "path": "11"
    },
    "359": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "361": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "ADD",
      "path": "11"
    },
    "362": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "363": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "RETURN",
      "path": "11"
    },
    "364": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "365": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "368": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "370": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "DUP1",
      "path": "11"
    },
    "371": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "372": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "SUB",
      "path": "11"
    },
    "373": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "375": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "DUP2",
      "path": "11"
    },
    "376": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "LT",
      "path": "11"
    },
    "377": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "378": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x182"
    },
    "381": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "382": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "384": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "DUP1",
      "path": "11"
    },
    "385": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "REVERT",
      "path": "11"
    },
    "386": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "387": {
      "op": "POP"
    },
    "388": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "DUP1",
      "path": "11"
    },
    "389": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "390": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "391": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "393": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "ADD",
      "path": "11"
    },
    "394": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "395": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "400": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "AND",
      "path": "11"
    },
    "401": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x484"
    },
    "404": {
      "fn": "StakeLab.changeEndTime",
      "jump": "i",
      "offset": [
        7385,
        7510
      ],
      "op": "JUMP",
      "path": "11"
    },
    "405": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "406": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "STOP",
      "path": "11"
    },
    "407": {
      "offset": [
        1881,
        1907
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "408": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B4"
    },
    "411": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "413": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP1",
      "path": "11"
    },
    "414": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "415": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SUB",
      "path": "11"
    },
    "416": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "418": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP2",
      "path": "11"
    },
    "419": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "LT",
      "path": "11"
    },
    "420": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "421": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AD"
    },
    "424": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "425": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "427": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP1",
      "path": "11"
    },
    "428": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "REVERT",
      "path": "11"
    },
    "429": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "430": {
      "op": "POP"
    },
    "431": {
      "offset": [
        1881,
        1907
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "432": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x50E"
    },
    "435": {
      "fn": "StakeLab.changeEndTime",
      "jump": "i",
      "offset": [
        1881,
        1907
      ],
      "op": "JUMP",
      "path": "11"
    },
    "436": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "437": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "439": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP1",
      "path": "11"
    },
    "440": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "447": {
      "op": "SHL"
    },
    "448": {
      "op": "SUB"
    },
    "449": {
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP12",
      "path": "11"
    },
    "450": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP13",
      "path": "11"
    },
    "451": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "AND",
      "path": "11"
    },
    "452": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP2",
      "path": "11"
    },
    "453": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "454": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "456": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP2",
      "path": "11"
    },
    "457": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "458": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP11",
      "path": "11"
    },
    "459": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "460": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP11",
      "path": "11"
    },
    "461": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "462": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP10",
      "path": "11"
    },
    "463": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP2",
      "path": "11"
    },
    "464": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "465": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "466": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "467": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "468": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "469": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "471": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP10",
      "path": "11"
    },
    "472": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "473": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "474": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "475": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "476": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "477": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "479": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP9",
      "path": "11"
    },
    "480": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "481": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "482": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "483": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "484": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "485": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "487": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP8",
      "path": "11"
    },
    "488": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "489": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "490": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "491": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "492": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "493": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "495": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP7",
      "path": "11"
    },
    "496": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "497": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "498": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "500": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP6",
      "path": "11"
    },
    "501": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "502": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "503": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "506": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP5",
      "path": "11"
    },
    "507": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "508": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "509": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "510": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "511": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "AND",
      "path": "11"
    },
    "512": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x120"
    },
    "515": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP3",
      "path": "11"
    },
    "516": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "517": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "518": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "519": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "520": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "521": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP2",
      "path": "11"
    },
    "522": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "523": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SUB",
      "path": "11"
    },
    "524": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x140"
    },
    "527": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "528": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "529": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "RETURN",
      "path": "11"
    },
    "530": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "531": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "534": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "536": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "DUP1",
      "path": "11"
    },
    "537": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "538": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "SUB",
      "path": "11"
    },
    "539": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "541": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "DUP2",
      "path": "11"
    },
    "542": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "LT",
      "path": "11"
    },
    "543": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "544": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x228"
    },
    "547": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "548": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "550": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "DUP1",
      "path": "11"
    },
    "551": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "REVERT",
      "path": "11"
    },
    "552": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "553": {
      "op": "POP"
    },
    "554": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "555": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x57B"
    },
    "558": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "jump": "i",
      "offset": [
        7868,
        7974
      ],
      "op": "JUMP",
      "path": "11"
    },
    "559": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "560": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "563": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "565": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "DUP1",
      "path": "11"
    },
    "566": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "567": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "SUB",
      "path": "11"
    },
    "568": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "570": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "DUP2",
      "path": "11"
    },
    "571": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "LT",
      "path": "11"
    },
    "572": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "573": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x245"
    },
    "576": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "577": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "579": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "DUP1",
      "path": "11"
    },
    "580": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "REVERT",
      "path": "11"
    },
    "581": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "DUP1",
      "path": "11"
    },
    "584": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "585": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "586": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "588": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "ADD",
      "path": "11"
    },
    "589": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "590": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5D8"
    },
    "593": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "jump": "i",
      "offset": [
        8671,
        8853
      ],
      "op": "JUMP",
      "path": "11"
    },
    "594": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "595": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "598": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "600": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "DUP1",
      "path": "11"
    },
    "601": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "602": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "SUB",
      "path": "11"
    },
    "603": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "605": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "DUP2",
      "path": "11"
    },
    "606": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "LT",
      "path": "11"
    },
    "607": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "608": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x268"
    },
    "611": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "612": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "614": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "DUP1",
      "path": "11"
    },
    "615": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "REVERT",
      "path": "11"
    },
    "616": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "617": {
      "op": "POP"
    },
    "618": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "DUP1",
      "path": "11"
    },
    "619": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "620": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "621": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "623": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "ADD",
      "path": "11"
    },
    "624": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "625": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x698"
    },
    "628": {
      "fn": "StakeLab.withdraw",
      "jump": "i",
      "offset": [
        5681,
        6437
      ],
      "op": "JUMP",
      "path": "11"
    },
    "629": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "630": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "633": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "635": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "636": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "637": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "SUB",
      "path": "11"
    },
    "638": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "640": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "DUP2",
      "path": "11"
    },
    "641": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "LT",
      "path": "11"
    },
    "642": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "643": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x28B"
    },
    "646": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "647": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "649": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "650": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "REVERT",
      "path": "11"
    },
    "651": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "654": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7FC"
    },
    "657": {
      "fn": "StakeLab.emergencyWithdraw",
      "jump": "i",
      "offset": [
        6505,
        6955
      ],
      "op": "JUMP",
      "path": "11"
    },
    "658": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3880,
        4055
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "659": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3880,
        4055
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "662": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3880,
        4055
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8BF"
    },
    "665": {
      "fn": "StakeLab.massUpdatePools",
      "jump": "i",
      "offset": [
        3880,
        4055
      ],
      "op": "JUMP",
      "path": "11"
    },
    "666": {
      "offset": [
        1735,
        1769
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "667": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A2"
    },
    "670": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8DE"
    },
    "673": {
      "fn": "StakeLab.massUpdatePools",
      "jump": "i",
      "offset": [
        1735,
        1769
      ],
      "op": "JUMP",
      "path": "11"
    },
    "674": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "675": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "677": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "DUP1",
      "path": "11"
    },
    "678": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "685": {
      "op": "SHL"
    },
    "686": {
      "op": "SUB"
    },
    "687": {
      "offset": [
        1735,
        1769
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "688": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "689": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "AND",
      "path": "11"
    },
    "690": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "DUP3",
      "path": "11"
    },
    "691": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "692": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "693": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "694": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "DUP2",
      "path": "11"
    },
    "695": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "696": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "SUB",
      "path": "11"
    },
    "697": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "699": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "ADD",
      "path": "11"
    },
    "700": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "701": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "RETURN",
      "path": "11"
    },
    "702": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "703": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x195"
    },
    "706": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x902"
    },
    "709": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMP",
      "path": "1"
    },
    "710": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "711": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "714": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "716": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "DUP1",
      "path": "11"
    },
    "717": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "718": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "SUB",
      "path": "11"
    },
    "719": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "721": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "DUP2",
      "path": "11"
    },
    "722": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "LT",
      "path": "11"
    },
    "723": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "724": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DC"
    },
    "727": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "728": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "730": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "DUP1",
      "path": "11"
    },
    "731": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "REVERT",
      "path": "11"
    },
    "732": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "733": {
      "op": "POP"
    },
    "734": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "741": {
      "op": "SHL"
    },
    "742": {
      "op": "SUB"
    },
    "743": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "AND",
      "path": "11"
    },
    "744": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9A4"
    },
    "747": {
      "fn": "StakeLab.recoverWrongTokens",
      "jump": "i",
      "offset": [
        8251,
        8665
      ],
      "op": "JUMP",
      "path": "11"
    },
    "748": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "749": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "752": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "754": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "DUP1",
      "path": "11"
    },
    "755": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "756": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "SUB",
      "path": "11"
    },
    "757": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "759": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "DUP2",
      "path": "11"
    },
    "760": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "LT",
      "path": "11"
    },
    "761": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "762": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x302"
    },
    "765": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "766": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "768": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "DUP1",
      "path": "11"
    },
    "769": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "REVERT",
      "path": "11"
    },
    "770": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "771": {
      "op": "POP"
    },
    "772": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "773": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB4F"
    },
    "776": {
      "fn": "StakeLab.stopReward",
      "jump": "i",
      "offset": [
        7516,
        7620
      ],
      "op": "JUMP",
      "path": "11"
    },
    "777": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "778": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "781": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "783": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "DUP1",
      "path": "11"
    },
    "784": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "785": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "SUB",
      "path": "11"
    },
    "786": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "788": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "DUP2",
      "path": "11"
    },
    "789": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "LT",
      "path": "11"
    },
    "790": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "791": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x31F"
    },
    "794": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "795": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "797": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "DUP1",
      "path": "11"
    },
    "798": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "REVERT",
      "path": "11"
    },
    "799": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "800": {
      "op": "POP"
    },
    "801": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "DUP1",
      "path": "11"
    },
    "802": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "803": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "804": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "806": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "ADD",
      "path": "11"
    },
    "807": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "808": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBCD"
    },
    "811": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "jump": "i",
      "offset": [
        7626,
        7760
      ],
      "op": "JUMP",
      "path": "11"
    },
    "812": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "813": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A2"
    },
    "816": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC4C"
    },
    "819": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMP",
      "path": "1"
    },
    "820": {
      "offset": [
        1958,
        2024
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "821": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x360"
    },
    "824": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "826": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP1",
      "path": "11"
    },
    "827": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "828": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SUB",
      "path": "11"
    },
    "829": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "831": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP2",
      "path": "11"
    },
    "832": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "LT",
      "path": "11"
    },
    "833": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "834": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x34A"
    },
    "837": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "838": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "840": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP1",
      "path": "11"
    },
    "841": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "REVERT",
      "path": "11"
    },
    "842": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "843": {
      "op": "POP"
    },
    "844": {
      "offset": [
        1958,
        2024
      ],
      "op": "DUP1",
      "path": "11"
    },
    "845": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "846": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "847": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "849": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "ADD",
      "path": "11"
    },
    "850": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "857": {
      "op": "SHL"
    },
    "858": {
      "op": "SUB"
    },
    "859": {
      "offset": [
        1958,
        2024
      ],
      "op": "AND",
      "path": "11"
    },
    "860": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC5B"
    },
    "863": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1958,
        2024
      ],
      "op": "JUMP",
      "path": "11"
    },
    "864": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "865": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "867": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP1",
      "path": "11"
    },
    "868": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "869": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "870": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP4",
      "path": "11"
    },
    "871": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "872": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "874": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP4",
      "path": "11"
    },
    "875": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "ADD",
      "path": "11"
    },
    "876": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "877": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "878": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "879": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "880": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP1",
      "path": "11"
    },
    "881": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "882": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "883": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP3",
      "path": "11"
    },
    "884": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "885": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SUB",
      "path": "11"
    },
    "886": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "ADD",
      "path": "11"
    },
    "887": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "888": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "RETURN",
      "path": "11"
    },
    "889": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "890": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15A"
    },
    "893": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "895": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "DUP1",
      "path": "11"
    },
    "896": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "897": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "SUB",
      "path": "11"
    },
    "898": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "900": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "DUP2",
      "path": "11"
    },
    "901": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "LT",
      "path": "11"
    },
    "902": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "903": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x38F"
    },
    "906": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "907": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "909": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "DUP1",
      "path": "11"
    },
    "910": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "REVERT",
      "path": "11"
    },
    "911": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "912": {
      "op": "POP"
    },
    "913": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "DUP1",
      "path": "11"
    },
    "914": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "915": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "916": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "918": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "ADD",
      "path": "11"
    },
    "919": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "926": {
      "op": "SHL"
    },
    "927": {
      "op": "SUB"
    },
    "928": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "AND",
      "path": "11"
    },
    "929": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC7F"
    },
    "932": {
      "fn": "StakeLab.pendingReward",
      "jump": "i",
      "offset": [
        3107,
        3800
      ],
      "op": "JUMP",
      "path": "11"
    },
    "933": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "934": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "937": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "939": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "DUP1",
      "path": "11"
    },
    "940": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "941": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "SUB",
      "path": "11"
    },
    "942": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "944": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "DUP2",
      "path": "11"
    },
    "945": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "LT",
      "path": "11"
    },
    "946": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "947": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3BB"
    },
    "950": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "951": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "953": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "DUP1",
      "path": "11"
    },
    "954": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "REVERT",
      "path": "11"
    },
    "955": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "956": {
      "op": "POP"
    },
    "957": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "958": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDE1"
    },
    "961": {
      "fn": "StakeLab.changeUserLimit",
      "jump": "i",
      "offset": [
        7766,
        7862
      ],
      "op": "JUMP",
      "path": "11"
    },
    "962": {
      "offset": [
        1775,
        1813
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "963": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1775,
        1813
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15A"
    },
    "966": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1775,
        1813
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE3E"
    },
    "969": {
      "fn": "StakeLab.changeUserLimit",
      "jump": "i",
      "offset": [
        1775,
        1813
      ],
      "op": "JUMP",
      "path": "11"
    },
    "970": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "971": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "974": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "976": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "DUP1",
      "path": "11"
    },
    "977": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "978": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "SUB",
      "path": "11"
    },
    "979": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "981": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "982": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "LT",
      "path": "11"
    },
    "983": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "984": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E0"
    },
    "987": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "988": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "990": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "DUP1",
      "path": "11"
    },
    "991": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "REVERT",
      "path": "11"
    },
    "992": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "993": {
      "op": "POP"
    },
    "994": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "DUP1",
      "path": "11"
    },
    "995": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "996": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "997": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "999": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "ADD",
      "path": "11"
    },
    "1000": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "1001": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE44"
    },
    "1004": {
      "fn": "StakeLab.setRewardPerSecond",
      "jump": "i",
      "offset": [
        9969,
        10208
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1005": {
      "offset": [
        1819,
        1848
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1006": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1819,
        1848
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15A"
    },
    "1009": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1819,
        1848
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF0B"
    },
    "1012": {
      "fn": "StakeLab.setRewardPerSecond",
      "jump": "i",
      "offset": [
        1819,
        1848
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1013": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1014": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "1017": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1019": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1020": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1021": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "SUB",
      "path": "11"
    },
    "1022": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "1024": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1025": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "LT",
      "path": "11"
    },
    "1026": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1027": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x40B"
    },
    "1030": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1031": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1033": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1034": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1035": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1036": {
      "op": "POP"
    },
    "1037": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1038": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "1039": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1046": {
      "op": "SHL"
    },
    "1047": {
      "op": "SUB"
    },
    "1048": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1050": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1051": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "ADD",
      "path": "11"
    },
    "1052": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "1053": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1054": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "AND",
      "path": "11"
    },
    "1055": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1056": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1058": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1059": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "ADD",
      "path": "11"
    },
    "1060": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "1061": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1062": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1064": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1065": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "ADD",
      "path": "11"
    },
    "1066": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "1067": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1068": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "1070": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "ADD",
      "path": "11"
    },
    "1071": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "1072": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "AND",
      "path": "11"
    },
    "1073": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF11"
    },
    "1076": {
      "fn": "StakeLab.add",
      "jump": "i",
      "offset": [
        8928,
        9880
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1077": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1078": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x195"
    },
    "1081": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1083": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1084": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1085": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "SUB",
      "path": "11"
    },
    "1086": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1088": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1089": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "LT",
      "path": "11"
    },
    "1090": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1091": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x44B"
    },
    "1094": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1095": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1097": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1098": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1099": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1100": {
      "op": "POP"
    },
    "1101": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1102": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "1103": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1104": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1106": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "ADD",
      "path": "11"
    },
    "1107": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "1108": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1260"
    },
    "1111": {
      "fn": "StakeLab.deposit",
      "jump": "i",
      "offset": [
        4759,
        5651
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1112": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x195"
    },
    "1116": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1119": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1120": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "SUB",
      "path": "1"
    },
    "1121": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "LT",
      "path": "1"
    },
    "1125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1126": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46E"
    },
    "1129": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1130": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1132": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1134": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1135": {
      "op": "POP"
    },
    "1136": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1143": {
      "op": "SHL"
    },
    "1144": {
      "op": "SUB"
    },
    "1145": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "AND",
      "path": "1"
    },
    "1146": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13DE"
    },
    "1149": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1150": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1151": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2570,
        2578
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 0,
      "value": "0x3"
    },
    "1153": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2570,
        2585
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1154": {
      "fn": "StakeLab.poolLength",
      "offset": [
        2499,
        2592
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1155": {
      "fn": "StakeLab.poolLength",
      "jump": "o",
      "offset": [
        2499,
        2592
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1156": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7385,
        7510
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1157": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x48C"
    },
    "1160": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D6"
    },
    "1163": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1164": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1165": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1167": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1174": {
      "op": "SHL"
    },
    "1175": {
      "op": "SUB"
    },
    "1176": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1177": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1178": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "1179": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1180": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "1181": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "1182": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DC"
    },
    "1185": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1186": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1188": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1189": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1190": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1196": {
      "op": "SHL"
    },
    "1197": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1198": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1199": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1201": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1203": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1204": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1205": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1206": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1207": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1208": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1210": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1211": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1212": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1215": {
      "op": "DUP1"
    },
    "1216": {
      "op": "MLOAD"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1219": {
      "op": "PUSH2",
      "value": "0x1C39"
    },
    "1222": {
      "op": "DUP4"
    },
    "1223": {
      "op": "CODECOPY"
    },
    "1224": {
      "op": "DUP2"
    },
    "1225": {
      "op": "MLOAD"
    },
    "1226": {
      "op": "SWAP2"
    },
    "1227": {
      "op": "MSTORE"
    },
    "1228": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1230": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1231": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1232": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1233": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1234": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1235": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1236": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1237": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1238": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "1239": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1241": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1242": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1243": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1244": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1245": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7493,
        7503
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 1
    },
    "1246": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7503
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "1251": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7503
      ],
      "op": "AND",
      "path": "11"
    },
    "1252": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7475
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1254": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7476,
        7480
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1255": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1256": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1257": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1258": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "LT",
      "path": "11"
    },
    "1259": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4F0"
    },
    "1262": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1263": {
      "dev": "Index out of range",
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "INVALID",
      "path": "11"
    },
    "1264": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1265": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1267": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1268": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1269": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1270": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1272": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1273": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1274": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1275": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7489
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "1277": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1279": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1280": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1281": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "MUL",
      "path": "11"
    },
    "1282": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7481
      ],
      "op": "ADD",
      "path": "11"
    },
    "1283": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7489
      ],
      "op": "ADD",
      "path": "11"
    },
    "1284": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7503
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1285": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7503
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1286": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7503
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1287": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7503
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1288": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7503
      ],
      "op": "ADD",
      "path": "11"
    },
    "1289": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7503
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1290": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        7467,
        7503
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1291": {
      "op": "POP"
    },
    "1292": {
      "op": "POP"
    },
    "1293": {
      "fn": "StakeLab.changeEndTime",
      "jump": "o",
      "offset": [
        7385,
        7510
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1294": {
      "offset": [
        1881,
        1907
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1295": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1297": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1298": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1299": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1300": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1301": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "LT",
      "path": "11"
    },
    "1302": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x51B"
    },
    "1305": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1306": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "INVALID",
      "path": "11"
    },
    "1307": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1308": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1310": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1311": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1312": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1313": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1315": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1316": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1317": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1318": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1320": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1321": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1322": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "MUL",
      "path": "11"
    },
    "1323": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "1324": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1325": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1326": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1328": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1329": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "1330": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1331": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1333": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1334": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "1335": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1336": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1338": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1339": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "1340": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1341": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1343": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1344": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "1345": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1346": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1348": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1349": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "1350": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1351": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "1353": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1354": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "1355": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1356": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1358": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP9",
      "path": "11"
    },
    "1359": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "1360": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1361": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "1363": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP10",
      "path": "11"
    },
    "1364": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "1365": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1366": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "1368": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1369": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP10",
      "path": "11"
    },
    "1370": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "ADD",
      "path": "11"
    },
    "1371": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "op": "SUB"
    },
    "1380": {
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "1381": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP10",
      "path": "11"
    },
    "1382": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "AND",
      "path": "11"
    },
    "1383": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP11",
      "path": "11"
    },
    "1384": {
      "op": "POP"
    },
    "1385": {
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "1386": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "1387": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "1388": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "1389": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "1390": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "1391": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1392": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "1393": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1394": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "1395": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1396": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1397": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1398": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1399": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1400": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "AND",
      "path": "11"
    },
    "1401": {
      "fn": "StakeLab.changeEndTime",
      "offset": [
        1881,
        1907
      ],
      "op": "DUP11",
      "path": "11"
    },
    "1402": {
      "fn": "StakeLab.changeEndTime",
      "jump": "o",
      "offset": [
        1881,
        1907
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1403": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7868,
        7974
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1404": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x583"
    },
    "1407": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D6"
    },
    "1410": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1411": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1412": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1414": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1421": {
      "op": "SHL"
    },
    "1422": {
      "op": "SUB"
    },
    "1423": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1424": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1425": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "1426": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1427": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "1428": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "1429": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D3"
    },
    "1432": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1433": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1435": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1436": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1437": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1443": {
      "op": "SHL"
    },
    "1444": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1445": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1446": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1448": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1450": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1451": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1452": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1453": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1454": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1455": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1457": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1458": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1459": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1462": {
      "op": "DUP1"
    },
    "1463": {
      "op": "MLOAD"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1466": {
      "op": "PUSH2",
      "value": "0x1C39"
    },
    "1469": {
      "op": "DUP4"
    },
    "1470": {
      "op": "CODECOPY"
    },
    "1471": {
      "op": "DUP2"
    },
    "1472": {
      "op": "MLOAD"
    },
    "1473": {
      "op": "SWAP2"
    },
    "1474": {
      "op": "MSTORE"
    },
    "1475": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1477": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1478": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1479": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1480": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1481": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1482": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1483": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1484": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1485": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "1486": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1488": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1489": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1490": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1491": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1492": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7942,
        7959
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 2,
      "value": "0x1"
    },
    "1494": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "offset": [
        7942,
        7967
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1495": {
      "fn": "StakeLab.changeBaseUserLimitTime",
      "jump": "o",
      "offset": [
        7868,
        7974
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1496": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1497": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5E0"
    },
    "1500": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D6"
    },
    "1503": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1504": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1505": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1507": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1514": {
      "op": "SHL"
    },
    "1515": {
      "op": "SUB"
    },
    "1516": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1517": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1518": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "1519": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1520": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "1521": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "1522": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x630"
    },
    "1525": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1526": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1528": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1529": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1536": {
      "op": "SHL"
    },
    "1537": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1538": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1539": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1541": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1543": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1544": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1545": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1546": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1547": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1548": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1550": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1551": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1552": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1555": {
      "op": "DUP1"
    },
    "1556": {
      "op": "MLOAD"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1559": {
      "op": "PUSH2",
      "value": "0x1C39"
    },
    "1562": {
      "op": "DUP4"
    },
    "1563": {
      "op": "CODECOPY"
    },
    "1564": {
      "op": "DUP2"
    },
    "1565": {
      "op": "MLOAD"
    },
    "1566": {
      "op": "SWAP2"
    },
    "1567": {
      "op": "MSTORE"
    },
    "1568": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1570": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1571": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1572": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1573": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1574": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1575": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1576": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1577": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1578": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "1579": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1581": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1582": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1583": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1584": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1585": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8846
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 3,
      "value": "0x694"
    },
    "1588": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8809
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1590": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8810,
        8814
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1591": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1592": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1593": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1594": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "LT",
      "path": "11"
    },
    "1595": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x640"
    },
    "1598": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1599": {
      "dev": "Index out of range",
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "INVALID",
      "path": "11"
    },
    "1600": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1601": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1602": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1604": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1605": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1607": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1609": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1610": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1611": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1613": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "MUL",
      "path": "11"
    },
    "1614": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8815
      ],
      "op": "ADD",
      "path": "11"
    },
    "1615": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8836
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "1617": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8836
      ],
      "op": "ADD",
      "path": "11"
    },
    "1618": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8836
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1620": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8836
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1621": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8836
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1622": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8836
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1623": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8836
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "1626": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8836
      ],
      "op": "EXP",
      "path": "11"
    },
    "1627": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8836
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1628": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8836
      ],
      "op": "DIV",
      "path": "11"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "op": "SUB"
    },
    "1637": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8801,
        8836
      ],
      "op": "AND",
      "path": "11"
    },
    "1638": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8838,
        8845
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1639": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8769
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1641": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8770,
        8774
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1642": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1643": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1644": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1645": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "LT",
      "path": "11"
    },
    "1646": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x673"
    },
    "1649": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1650": {
      "dev": "Index out of range",
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "INVALID",
      "path": "11"
    },
    "1651": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1652": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1654": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1655": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1656": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1657": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1659": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1660": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1661": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1662": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1664": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1665": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1666": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "MUL",
      "path": "11"
    },
    "1667": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8775
      ],
      "op": "ADD",
      "path": "11"
    },
    "1668": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8787
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "op": "SUB"
    },
    "1677": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8787
      ],
      "op": "AND",
      "path": "11"
    },
    "1678": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8787
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1679": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8846
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1680": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8800
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14DA"
    },
    "1683": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "jump": "i",
      "offset": [
        8761,
        8846
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1684": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8761,
        8846
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1685": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "POP",
      "path": "11"
    },
    "1686": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "offset": [
        8671,
        8853
      ],
      "op": "POP",
      "path": "11"
    },
    "1687": {
      "fn": "StakeLab.emergencyRewardWithdraw",
      "jump": "o",
      "offset": [
        8671,
        8853
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1688": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1689": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5749,
        5770
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1691": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5781
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1693": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5782,
        5786
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1694": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1695": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1696": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1697": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "LT",
      "path": "11"
    },
    "1698": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6A7"
    },
    "1701": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1702": {
      "dev": "Index out of range",
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "INVALID",
      "path": "11"
    },
    "1703": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1704": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1706": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1707": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1708": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1709": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1711": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1712": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1713": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1714": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5835
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1715": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5835
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1716": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5835
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1717": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5829
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1719": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5835
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1720": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5835
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1721": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5835
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1723": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5835
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1724": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5835
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1725": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5835
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1726": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5836,
        5846
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1727": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5847
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1728": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5847
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1729": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5847
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1730": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5847
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1731": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5847
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1732": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5847
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1733": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5821,
        5847
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1734": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5866,
        5877
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 4
    },
    "1735": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5866,
        5877
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1736": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "1738": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1739": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1740": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "MUL",
      "path": "11"
    },
    "1741": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1742": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1743": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "ADD",
      "path": "11"
    },
    "1744": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5773,
        5787
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1745": {
      "op": "POP"
    },
    "1746": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5866,
        5888
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1747": {
      "op": "GT"
    },
    "1748": {
      "branch": 72,
      "fn": "StakeLab.withdraw",
      "offset": [
        5866,
        5888
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1749": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x71A"
    },
    "1752": {
      "branch": 72,
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1753": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1755": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1756": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1757": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1763": {
      "op": "SHL"
    },
    "1764": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1765": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1766": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1768": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1770": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1771": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "ADD",
      "path": "11"
    },
    "1772": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1773": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x12"
    },
    "1775": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "1777": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1778": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "ADD",
      "path": "11"
    },
    "1779": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1780": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1801": {
      "op": "SHL"
    },
    "1802": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x44"
    },
    "1804": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1805": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "ADD",
      "path": "11"
    },
    "1806": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1807": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1808": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1809": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1810": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1811": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1812": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "SUB",
      "path": "11"
    },
    "1813": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x64"
    },
    "1815": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "ADD",
      "path": "11"
    },
    "1816": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1817": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1818": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5858,
        5911
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1819": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5922,
        5938
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 5,
      "value": "0x723"
    },
    "1822": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5933,
        5937
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1823": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5922,
        5932
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1531"
    },
    "1826": {
      "fn": "StakeLab.withdraw",
      "jump": "i",
      "offset": [
        5922,
        5938
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1827": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5922,
        5938
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1828": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5949,
        5964
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1830": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6030,
        6034
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1831": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6030,
        6045
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1833": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6030,
        6045
      ],
      "op": "ADD",
      "path": "11"
    },
    "1834": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6030,
        6045
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1835": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6007,
        6011
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1836": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6007,
        6026
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1838": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6007,
        6026
      ],
      "op": "ADD",
      "path": "11"
    },
    "1839": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6007,
        6026
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1840": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5982,
        5986
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1841": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5982,
        6004
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1843": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5982,
        6004
      ],
      "op": "ADD",
      "path": "11"
    },
    "1844": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5982,
        6004
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1845": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        5972
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1846": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        5979
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1848": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        5979
      ],
      "op": "ADD",
      "path": "11"
    },
    "1849": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        5979
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1850": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        6004
      ],
      "op": "MUL",
      "path": "11"
    },
    "1851": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        6026
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1852": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        6026
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x741"
    },
    "1855": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        6026
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1856": {
      "dev": "Division by zero",
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        6026
      ],
      "op": "INVALID",
      "path": "11"
    },
    "1857": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        6026
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1858": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6056,
        6078
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 6
    },
    "1859": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6056,
        6078
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1860": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6056,
        6078
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1861": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6056,
        6078
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1862": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6056,
        6078
      ],
      "op": "SUB",
      "path": "11"
    },
    "1863": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6056,
        6078
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1864": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6056,
        6078
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1865": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6088,
        6115
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 7,
      "value": "0x3"
    },
    "1867": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6088,
        6115
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1868": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6088,
        6115
      ],
      "op": "ADD",
      "path": "11"
    },
    "1869": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6088,
        6126
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1870": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6088,
        6126
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1871": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6088,
        6126
      ],
      "op": "DUP9",
      "path": "11"
    },
    "1872": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6088,
        6126
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1873": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6088,
        6126
      ],
      "op": "SUB",
      "path": "11"
    },
    "1874": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6088,
        6126
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1875": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6088,
        6126
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1876": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6193,
        6212
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 8,
      "value": "0x2"
    },
    "1878": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6193,
        6212
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1879": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6193,
        6212
      ],
      "op": "ADD",
      "path": "11"
    },
    "1880": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6193,
        6212
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1881": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6168,
        6190
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1883": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6168,
        6190
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1884": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6168,
        6190
      ],
      "op": "ADD",
      "path": "11"
    },
    "1885": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6168,
        6190
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1886": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6154,
        6165
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1887": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6154,
        6165
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1888": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        6026
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1889": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        6026
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1890": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        6026
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1891": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5968,
        6026
      ],
      "op": "DIV",
      "path": "11"
    },
    "1892": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5967,
        6045
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1893": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5967,
        6045
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1894": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5967,
        6045
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1895": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5967,
        6045
      ],
      "op": "SUB",
      "path": "11"
    },
    "1896": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5967,
        6045
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1897": {
      "op": "POP"
    },
    "1898": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6154,
        6190
      ],
      "op": "MUL",
      "path": "11"
    },
    "1899": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6193,
        6212
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1900": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6154,
        6212
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x771"
    },
    "1903": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6154,
        6212
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1904": {
      "dev": "Division by zero",
      "fn": "StakeLab.withdraw",
      "offset": [
        6154,
        6212
      ],
      "op": "INVALID",
      "path": "11"
    },
    "1905": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6154,
        6212
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1906": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6154,
        6212
      ],
      "op": "DIV",
      "path": "11"
    },
    "1907": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6136,
        6151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1909": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6136,
        6151
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1910": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6136,
        6151
      ],
      "op": "ADD",
      "path": "11"
    },
    "1911": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6136,
        6212
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1912": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6226,
        6237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1913": {
      "branch": 73,
      "fn": "StakeLab.withdraw",
      "offset": [
        6226,
        6237
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1914": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6223,
        6315
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x793"
    },
    "1917": {
      "branch": 73,
      "fn": "StakeLab.withdraw",
      "offset": [
        6223,
        6315
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1918": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6266,
        6282
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 9
    },
    "1919": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6266,
        6282
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1920": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6253,
        6304
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x793"
    },
    "1923": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6253,
        6304
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1930": {
      "op": "SHL"
    },
    "1931": {
      "op": "SUB"
    },
    "1932": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6266,
        6282
      ],
      "op": "AND",
      "path": "11"
    },
    "1933": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6284,
        6294
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1934": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6296,
        6303
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1935": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6253,
        6265
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x163D"
    },
    "1938": {
      "fn": "StakeLab.withdraw",
      "jump": "i",
      "offset": [
        6253,
        6304
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1939": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6253,
        6304
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1940": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6325,
        6379
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 10,
      "value": "0x7BE"
    },
    "1943": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6338,
        6348
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "1976": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6358,
        6368
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1977": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6371,
        6378
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1978": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6325,
        6337
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x163D"
    },
    "1981": {
      "fn": "StakeLab.withdraw",
      "jump": "i",
      "offset": [
        6325,
        6379
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1982": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6325,
        6379
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1983": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 11,
      "value": "0x40"
    },
    "1985": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1986": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1987": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1988": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1989": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1990": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1991": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1992": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6416,
        6420
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1993": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6416,
        6420
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1994": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6404,
        6414
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1995": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6404,
        6414
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1996": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
    },
    "2029": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2030": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2031": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2032": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "SUB",
      "path": "11"
    },
    "2033": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2035": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "ADD",
      "path": "11"
    },
    "2036": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2037": {
      "fn": "StakeLab.withdraw",
      "offset": [
        6395,
        6430
      ],
      "op": "LOG3",
      "path": "11"
    },
    "2038": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "POP",
      "path": "11"
    },
    "2039": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "POP",
      "path": "11"
    },
    "2040": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "POP",
      "path": "11"
    },
    "2041": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "POP",
      "path": "11"
    },
    "2042": {
      "fn": "StakeLab.withdraw",
      "offset": [
        5681,
        6437
      ],
      "op": "POP",
      "path": "11"
    },
    "2043": {
      "fn": "StakeLab.withdraw",
      "jump": "o",
      "offset": [
        5681,
        6437
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2044": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2045": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6565,
        6586
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2047": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6597
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2049": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6598,
        6602
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2050": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2051": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2052": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2053": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "LT",
      "path": "11"
    },
    "2054": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x80B"
    },
    "2057": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2058": {
      "dev": "Index out of range",
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "INVALID",
      "path": "11"
    },
    "2059": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2060": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2062": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2063": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2064": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2065": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2067": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2068": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2069": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2070": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6651
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2071": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6651
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2072": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6651
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2073": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6645
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2075": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6651
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2076": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6651
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2077": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6651
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2079": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6651
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2080": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6651
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2081": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6651
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2082": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6652,
        6662
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2083": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6663
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2084": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6663
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2085": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6663
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2086": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6663
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2087": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6663
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2088": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6663
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2089": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6637,
        6663
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2090": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6695,
        6706
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2091": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6695,
        6706
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2092": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6716,
        6743
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 12,
      "value": "0x3"
    },
    "2094": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "2096": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2097": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "2098": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "MUL",
      "path": "11"
    },
    "2099": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2100": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2101": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "ADD",
      "path": "11"
    },
    "2102": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6716,
        6743
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2103": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6716,
        6743
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2104": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6716,
        6743
      ],
      "op": "ADD",
      "path": "11"
    },
    "2105": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6716,
        6758
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2106": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6716,
        6758
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2107": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6716,
        6758
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2108": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6716,
        6758
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2109": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6716,
        6758
      ],
      "op": "SUB",
      "path": "11"
    },
    "2110": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6716,
        6758
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2111": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6716,
        6758
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2112": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6768,
        6783
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 13
    },
    "2113": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6768,
        6783
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2114": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6768,
        6783
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2117": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6793,
        6808
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 14
    },
    "2118": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6793,
        6808
      ],
      "op": "ADD",
      "path": "11"
    },
    "2119": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6793,
        6812
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2120": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6793,
        6812
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2121": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6793,
        6812
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2122": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6793,
        6812
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2123": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2124": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6589,
        6603
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2125": {
      "op": "POP"
    },
    "2126": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6823,
        6882
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 15,
      "value": "0x882"
    },
    "2129": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6823,
        6882
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2130": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6823,
        6833
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2169": {
      "op": "SHL"
    },
    "2170": {
      "op": "SUB"
    },
    "2171": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6823,
        6846
      ],
      "op": "AND",
      "path": "11"
    },
    "2172": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6823,
        6846
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2173": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6695,
        6706
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2174": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6823,
        6846
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14DA"
    },
    "2177": {
      "fn": "StakeLab.emergencyWithdraw",
      "jump": "i",
      "offset": [
        6823,
        6882
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2178": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6823,
        6882
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2179": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 16,
      "value": "0x40"
    },
    "2181": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2182": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2183": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2184": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2185": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2186": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2187": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2188": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6927,
        6931
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2189": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6927,
        6931
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2190": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6915,
        6925
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2191": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6915,
        6925
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2192": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
    },
    "2225": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2226": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2227": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2228": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "SUB",
      "path": "11"
    },
    "2229": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2231": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "ADD",
      "path": "11"
    },
    "2232": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2233": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6897,
        6947
      ],
      "op": "LOG3",
      "path": "11"
    },
    "2234": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "POP",
      "path": "11"
    },
    "2235": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "POP",
      "path": "11"
    },
    "2236": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "POP",
      "path": "11"
    },
    "2237": {
      "fn": "StakeLab.emergencyWithdraw",
      "offset": [
        6505,
        6955
      ],
      "op": "POP",
      "path": "11"
    },
    "2238": {
      "fn": "StakeLab.emergencyWithdraw",
      "jump": "o",
      "offset": [
        6505,
        6955
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2239": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3880,
        4055
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2240": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3941,
        3949
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2242": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3941,
        3956
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2243": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3924,
        3938
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2245": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3966,
        4049
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2246": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3994,
        4000
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2247": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3988,
        3991
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2248": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3988,
        4000
      ],
      "op": "LT",
      "path": "11"
    },
    "2249": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3966,
        4049
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2250": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3966,
        4049
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x694"
    },
    "2253": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3966,
        4049
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2254": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        4023,
        4038
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 17,
      "value": "0x8D6"
    },
    "2257": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        4034,
        4037
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2258": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        4023,
        4033
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1531"
    },
    "2261": {
      "fn": "StakeLab.massUpdatePools",
      "jump": "i",
      "offset": [
        4023,
        4038
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2262": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        4023,
        4038
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2263": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        4002,
        4007
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 18,
      "value": "0x1"
    },
    "2265": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        4002,
        4007
      ],
      "op": "ADD",
      "path": "11"
    },
    "2266": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3966,
        4049
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8C5"
    },
    "2269": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        3966,
        4049
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2270": {
      "offset": [
        1735,
        1769
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2271": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "2304": {
      "fn": "StakeLab.massUpdatePools",
      "offset": [
        1735,
        1769
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2305": {
      "fn": "StakeLab.massUpdatePools",
      "jump": "o",
      "offset": [
        1735,
        1769
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2306": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2307": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x90A"
    },
    "2310": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D6"
    },
    "2313": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2314": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2315": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2317": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2324": {
      "op": "SHL"
    },
    "2325": {
      "op": "SUB"
    },
    "2326": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2327": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2328": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "2329": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2330": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "2331": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "2332": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x95A"
    },
    "2335": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2336": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2338": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2339": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2340": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2346": {
      "op": "SHL"
    },
    "2347": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2348": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2349": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2351": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2353": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2354": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2355": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2356": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2357": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2358": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2360": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2361": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2362": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2365": {
      "op": "DUP1"
    },
    "2366": {
      "op": "MLOAD"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2369": {
      "op": "PUSH2",
      "value": "0x1C39"
    },
    "2372": {
      "op": "DUP4"
    },
    "2373": {
      "op": "CODECOPY"
    },
    "2374": {
      "op": "DUP2"
    },
    "2375": {
      "op": "MLOAD"
    },
    "2376": {
      "op": "SWAP2"
    },
    "2377": {
      "op": "MSTORE"
    },
    "2378": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2380": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2381": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2382": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2383": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2384": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2385": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2386": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2387": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2388": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "2389": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2391": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2392": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2393": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2394": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2395": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 19,
      "value": "0x0"
    },
    "2397": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2398": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2399": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2401": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2408": {
      "op": "SHL"
    },
    "2409": {
      "op": "SUB"
    },
    "2410": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2411": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2412": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "AND",
      "path": "1"
    },
    "2413": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2414": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2447": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2448": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2449": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2450": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2451": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1842,
        1843
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 20,
      "value": "0x0"
    },
    "2453": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2454": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2461": {
      "op": "SHL"
    },
    "2462": {
      "op": "SUB"
    },
    "2463": {
      "op": "NOT"
    },
    "2464": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "AND",
      "path": "1"
    },
    "2465": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2466": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2467": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2468": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2469": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9AC"
    },
    "2472": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D6"
    },
    "2475": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2476": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2477": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2479": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2486": {
      "op": "SHL"
    },
    "2487": {
      "op": "SUB"
    },
    "2488": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2489": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2490": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "2491": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2492": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "2493": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "2494": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9FC"
    },
    "2497": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2498": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2500": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2501": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2502": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2508": {
      "op": "SHL"
    },
    "2509": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2510": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2511": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2513": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2515": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2516": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2517": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2518": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2519": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2520": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2522": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2523": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2524": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2527": {
      "op": "DUP1"
    },
    "2528": {
      "op": "MLOAD"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2531": {
      "op": "PUSH2",
      "value": "0x1C39"
    },
    "2534": {
      "op": "DUP4"
    },
    "2535": {
      "op": "CODECOPY"
    },
    "2536": {
      "op": "DUP2"
    },
    "2537": {
      "op": "MLOAD"
    },
    "2538": {
      "op": "SWAP2"
    },
    "2539": {
      "op": "MSTORE"
    },
    "2540": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2542": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2543": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2544": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2545": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2546": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2547": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2548": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2549": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2550": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "2551": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2553": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2554": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2555": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2556": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2557": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8364,
        8374
      ],
      "op": "PUSH32",
      "path": "11",
      "statement": 21,
      "value": "0x0"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2596": {
      "op": "SHL"
    },
    "2597": {
      "op": "SUB"
    },
    "2598": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8339,
        8375
      ],
      "op": "AND",
      "path": "11"
    },
    "2599": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8339,
        8352
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2606": {
      "op": "SHL"
    },
    "2607": {
      "op": "SUB"
    },
    "2608": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8339,
        8375
      ],
      "op": "AND",
      "path": "11"
    },
    "2609": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8339,
        8375
      ],
      "op": "EQ",
      "path": "11"
    },
    "2610": {
      "branch": 74,
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8339,
        8375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2611": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA6D"
    },
    "2614": {
      "branch": 74,
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2615": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2617": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2618": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2624": {
      "op": "SHL"
    },
    "2625": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2626": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2627": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2629": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "ADD",
      "path": "11"
    },
    "2630": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2631": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2632": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2634": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "ADD",
      "path": "11"
    },
    "2635": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2636": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2637": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "SUB",
      "path": "11"
    },
    "2638": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2639": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2640": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x28"
    },
    "2642": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2643": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2644": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2646": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "ADD",
      "path": "11"
    },
    "2647": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2648": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B80"
    },
    "2651": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x28"
    },
    "2653": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2654": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "CODECOPY",
      "path": "11"
    },
    "2655": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2657": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "ADD",
      "path": "11"
    },
    "2658": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2659": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "POP",
      "path": "11"
    },
    "2660": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "POP",
      "path": "11"
    },
    "2661": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2663": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2664": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2665": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2666": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "SUB",
      "path": "11"
    },
    "2667": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2668": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2669": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8331,
        8420
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2670": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8430,
        8466
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 22,
      "value": "0xA76"
    },
    "2673": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8451,
        8464
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2674": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8430,
        8443
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16F5"
    },
    "2677": {
      "fn": "StakeLab.recoverWrongTokens",
      "jump": "i",
      "offset": [
        8430,
        8466
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2678": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8430,
        8466
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2679": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8477,
        8485
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2681": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8495,
        8508
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2688": {
      "op": "SHL"
    },
    "2689": {
      "op": "SUB"
    },
    "2690": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8519
      ],
      "op": "AND",
      "path": "11"
    },
    "2691": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8519
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "2696": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8528,
        8532
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "2697": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2699": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2700": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2701": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "2706": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "AND",
      "path": "11"
    },
    "2707": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "2709": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "SHL",
      "path": "11"
    },
    "2710": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2711": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2712": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2714": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "ADD",
      "path": "11"
    },
    "2715": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2716": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2723": {
      "op": "SHL"
    },
    "2724": {
      "op": "SUB"
    },
    "2725": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "AND",
      "path": "11"
    },
    "2726": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2727": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2728": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2730": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "ADD",
      "path": "11"
    },
    "2731": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2732": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "POP",
      "path": "11"
    },
    "2733": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "POP",
      "path": "11"
    },
    "2734": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2736": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2738": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2739": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2740": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2741": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "SUB",
      "path": "11"
    },
    "2742": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2743": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2744": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2745": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "2746": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2747": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2748": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2749": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAC5"
    },
    "2752": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2753": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2755": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2756": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2757": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2758": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "POP",
      "path": "11"
    },
    "2759": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "GAS",
      "path": "11"
    },
    "2760": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "2761": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2762": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2763": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2764": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAD9"
    },
    "2767": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2768": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2769": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2771": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2772": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2773": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2774": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2776": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2777": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2778": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "POP",
      "path": "11"
    },
    "2779": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "POP",
      "path": "11"
    },
    "2780": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "POP",
      "path": "11"
    },
    "2781": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "POP",
      "path": "11"
    },
    "2782": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2784": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2785": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2786": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2788": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2789": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "LT",
      "path": "11"
    },
    "2790": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2791": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAEF"
    },
    "2794": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2795": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2797": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2798": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2799": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2802": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2803": {
      "op": "POP"
    },
    "2804": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8544,
        8604
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 23,
      "value": "0xB07"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2813": {
      "op": "SHL"
    },
    "2814": {
      "op": "SUB"
    },
    "2815": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8544,
        8578
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2816": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8544,
        8578
      ],
      "op": "AND",
      "path": "11"
    },
    "2817": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8587,
        8597
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2818": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8488,
        8534
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2819": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8544,
        8578
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14DA"
    },
    "2822": {
      "fn": "StakeLab.recoverWrongTokens",
      "jump": "i",
      "offset": [
        8544,
        8604
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2823": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8544,
        8604
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2824": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 24,
      "value": "0x40"
    },
    "2826": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2827": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2834": {
      "op": "SHL"
    },
    "2835": {
      "op": "SUB"
    },
    "2836": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2837": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "AND",
      "path": "11"
    },
    "2838": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2839": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2840": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2842": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2843": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "ADD",
      "path": "11"
    },
    "2844": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2845": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2846": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2847": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2848": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2849": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x74545154AAC348A3EAC92596BD1971957CA94795F4E954EC5F613B55FAB78129"
    },
    "2882": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2883": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2884": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2885": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2886": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "SUB",
      "path": "11"
    },
    "2887": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2888": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2889": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "ADD",
      "path": "11"
    },
    "2890": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2891": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8620,
        8658
      ],
      "op": "LOG1",
      "path": "11"
    },
    "2892": {
      "offset": [
        1356,
        1357
      ],
      "op": "POP",
      "path": "1"
    },
    "2893": {
      "fn": "StakeLab.recoverWrongTokens",
      "offset": [
        8251,
        8665
      ],
      "op": "POP",
      "path": "11"
    },
    "2894": {
      "fn": "StakeLab.recoverWrongTokens",
      "jump": "o",
      "offset": [
        8251,
        8665
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2895": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2896": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB57"
    },
    "2899": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D6"
    },
    "2902": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2903": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2904": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2906": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2913": {
      "op": "SHL"
    },
    "2914": {
      "op": "SUB"
    },
    "2915": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2916": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2917": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "2918": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2919": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "2920": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "2921": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBA7"
    },
    "2924": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2925": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2927": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2928": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2929": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2935": {
      "op": "SHL"
    },
    "2936": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2937": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2938": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2940": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2942": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2943": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2944": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2945": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2946": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2947": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2949": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2950": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2951": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2954": {
      "op": "DUP1"
    },
    "2955": {
      "op": "MLOAD"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2958": {
      "op": "PUSH2",
      "value": "0x1C39"
    },
    "2961": {
      "op": "DUP4"
    },
    "2962": {
      "op": "CODECOPY"
    },
    "2963": {
      "op": "DUP2"
    },
    "2964": {
      "op": "MLOAD"
    },
    "2965": {
      "op": "SWAP2"
    },
    "2966": {
      "op": "MSTORE"
    },
    "2967": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2969": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2970": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2971": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2972": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2973": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2974": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2975": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2976": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2977": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "2978": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2980": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2981": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2982": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2983": {
      "fn": "StakeLab.stopReward",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2984": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7601,
        7613
      ],
      "op": "NUMBER",
      "path": "11",
      "statement": 25
    },
    "2985": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7584
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2987": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7585,
        7589
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2988": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2989": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2990": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2991": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "LT",
      "path": "11"
    },
    "2992": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBB5"
    },
    "2995": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2996": {
      "dev": "Index out of range",
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "INVALID",
      "path": "11"
    },
    "2997": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2998": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2999": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3001": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3002": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3004": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3006": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3007": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3008": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "3010": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "MUL",
      "path": "11"
    },
    "3011": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7590
      ],
      "op": "ADD",
      "path": "11"
    },
    "3012": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "3014": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7598
      ],
      "op": "ADD",
      "path": "11"
    },
    "3015": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7613
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3016": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7613
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3017": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7613
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3018": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7576,
        7613
      ],
      "op": "POP",
      "path": "11"
    },
    "3019": {
      "fn": "StakeLab.stopReward",
      "offset": [
        7516,
        7620
      ],
      "op": "POP",
      "path": "11"
    },
    "3020": {
      "fn": "StakeLab.stopReward",
      "jump": "o",
      "offset": [
        7516,
        7620
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3021": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3022": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBD5"
    },
    "3025": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D6"
    },
    "3028": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3029": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3030": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3032": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3039": {
      "op": "SHL"
    },
    "3040": {
      "op": "SUB"
    },
    "3041": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3042": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3043": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "3044": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3045": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "3046": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "3047": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC25"
    },
    "3050": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3051": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3053": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3054": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3055": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3061": {
      "op": "SHL"
    },
    "3062": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3063": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3064": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3066": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3068": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3069": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3070": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3071": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3072": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3073": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3075": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3076": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3077": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3080": {
      "op": "DUP1"
    },
    "3081": {
      "op": "MLOAD"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3084": {
      "op": "PUSH2",
      "value": "0x1C39"
    },
    "3087": {
      "op": "DUP4"
    },
    "3088": {
      "op": "CODECOPY"
    },
    "3089": {
      "op": "DUP2"
    },
    "3090": {
      "op": "MLOAD"
    },
    "3091": {
      "op": "SWAP2"
    },
    "3092": {
      "op": "MSTORE"
    },
    "3093": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "3095": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3096": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3097": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3098": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3099": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3100": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3101": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3102": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3103": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "3104": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "3106": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3107": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3108": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3109": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3110": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7748,
        7753
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 26
    },
    "3111": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7722
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "3113": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7723,
        7727
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3114": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3115": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3116": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3117": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "LT",
      "path": "11"
    },
    "3118": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC33"
    },
    "3121": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3122": {
      "dev": "Index out of range",
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "INVALID",
      "path": "11"
    },
    "3123": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3124": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3125": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3127": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3128": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3130": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3132": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3133": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3134": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "3136": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "MUL",
      "path": "11"
    },
    "3137": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7728
      ],
      "op": "ADD",
      "path": "11"
    },
    "3138": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "3140": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7745
      ],
      "op": "ADD",
      "path": "11"
    },
    "3141": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7753
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3142": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7753
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3143": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7753
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3144": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7714,
        7753
      ],
      "op": "POP",
      "path": "11"
    },
    "3145": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "POP",
      "path": "11"
    },
    "3146": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "offset": [
        7626,
        7760
      ],
      "op": "POP",
      "path": "11"
    },
    "3147": {
      "fn": "StakeLab.changePoolUserLimitEndTime",
      "jump": "o",
      "offset": [
        7626,
        7760
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3148": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3149": {
      "fn": "Ownable.owner",
      "offset": [
        1121,
        1128
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3151": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 27
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3158": {
      "op": "SHL"
    },
    "3159": {
      "op": "SUB"
    },
    "3160": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "AND",
      "path": "1"
    },
    "3161": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3162": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3163": {
      "offset": [
        1958,
        2024
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3164": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3166": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3168": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3169": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3170": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3171": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3173": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3174": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3175": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3176": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3178": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3179": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3180": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3181": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3182": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3183": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3184": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3185": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3186": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3187": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3188": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3189": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3190": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3191": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3193": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3194": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3195": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "ADD",
      "path": "11"
    },
    "3196": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3197": {
      "fn": "Ownable.owner",
      "offset": [
        1958,
        2024
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3198": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1958,
        2024
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3199": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3200": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3182,
        3189
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3202": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3221
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC89"
    },
    "3205": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3221
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B00"
    },
    "3208": {
      "fn": "StakeLab.pendingReward",
      "jump": "i",
      "offset": [
        3201,
        3221
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3209": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3221
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3210": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3232
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "3212": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3233,
        3237
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3213": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3214": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3215": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3216": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "LT",
      "path": "11"
    },
    "3217": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC96"
    },
    "3220": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3221": {
      "dev": "Index out of range",
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "INVALID",
      "path": "11"
    },
    "3222": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3223": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3225": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3226": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3227": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3228": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3230": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3231": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3232": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3233": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3234": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3236": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3237": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3238": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x140"
    },
    "3241": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3242": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3243": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3244": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3245": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "3247": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3248": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3249": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "MUL",
      "path": "11"
    },
    "3250": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3251": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3252": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3224,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3253": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3254": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3261": {
      "op": "SHL"
    },
    "3262": {
      "op": "SUB"
    },
    "3263": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3264": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3265": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "AND",
      "path": "11"
    },
    "3266": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3267": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3268": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3270": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3271": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3272": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3273": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3274": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3275": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3276": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3277": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3278": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3279": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3280": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "3282": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3283": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3284": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3285": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3286": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3287": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3288": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3289": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3290": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3291": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3292": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "3294": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3295": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3296": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3297": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "3299": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3300": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3301": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3302": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3304": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3305": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3306": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3307": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "3309": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3310": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3311": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3312": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "3314": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3315": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3316": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3317": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "3319": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3320": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3321": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3322": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "3324": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3325": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3326": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3327": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "3329": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3330": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3331": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3332": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3334": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3335": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3336": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3337": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "3339": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3340": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3341": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3342": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "3344": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3345": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3346": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3347": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "3350": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3351": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3352": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3353": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "3355": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3356": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3357": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3358": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3359": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "AND",
      "path": "11"
    },
    "3360": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x120"
    },
    "3363": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3364": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "ADD",
      "path": "11"
    },
    "3365": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3366": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3201,
        3238
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3367": {
      "op": "POP"
    },
    "3368": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3268
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD2F"
    },
    "3371": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3268
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B65"
    },
    "3374": {
      "fn": "StakeLab.pendingReward",
      "jump": "i",
      "offset": [
        3248,
        3268
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3375": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3268
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3376": {
      "op": "POP"
    },
    "3377": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3285
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3379": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3285
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3380": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3285
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3381": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3285
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3382": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3279
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3384": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3285
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3386": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3285
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3387": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3285
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3388": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3285
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3389": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3285
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3391": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3285
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3392": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3285
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3393": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3285
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3400": {
      "op": "SHL"
    },
    "3401": {
      "op": "SUB"
    },
    "3402": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3292
      ],
      "op": "DUP8",
      "path": "11"
    },
    "3403": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3292
      ],
      "op": "AND",
      "path": "11"
    },
    "3404": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3292
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3405": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3292
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3406": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3292
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3407": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3292
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3408": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3292
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3409": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3292
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3410": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3292
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3411": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3271,
        3292
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3412": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3413": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3414": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3415": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3416": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "ADD",
      "path": "11"
    },
    "3417": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3418": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3419": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3420": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3421": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3422": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3423": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3424": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3426": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "ADD",
      "path": "11"
    },
    "3427": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3428": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3429": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3430": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "ADD",
      "path": "11"
    },
    "3431": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3248,
        3292
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3432": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3330,
        3352
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "3434": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3330,
        3352
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3435": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3330,
        3352
      ],
      "op": "ADD",
      "path": "11"
    },
    "3436": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3330,
        3352
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3437": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3385,
        3404
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "3439": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3385,
        3404
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3440": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3385,
        3404
      ],
      "op": "ADD",
      "path": "11"
    },
    "3441": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3385,
        3404
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3442": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3367,
        3382
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "3443": {
      "branch": 75,
      "fn": "StakeLab.pendingReward",
      "offset": [
        3367,
        3404
      ],
      "op": "GT",
      "path": "11"
    },
    "3444": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3367,
        3440
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3445": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3367,
        3440
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3446": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3367,
        3440
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD82"
    },
    "3449": {
      "branch": 75,
      "fn": "StakeLab.pendingReward",
      "offset": [
        3367,
        3440
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3450": {
      "op": "POP"
    },
    "3451": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3408,
        3435
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "3453": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3408,
        3435
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3454": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3408,
        3435
      ],
      "op": "ADD",
      "path": "11"
    },
    "3455": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3408,
        3435
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3456": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3408,
        3440
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3457": {
      "branch": 76,
      "fn": "StakeLab.pendingReward",
      "offset": [
        3408,
        3440
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3458": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3367,
        3440
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3459": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3363,
        3704
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3460": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3363,
        3704
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDC0"
    },
    "3463": {
      "branch": 76,
      "fn": "StakeLab.pendingReward",
      "offset": [
        3363,
        3704
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3464": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3456,
        3474
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3466": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3477,
        3534
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD98"
    },
    "3469": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3491,
        3495
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3470": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3491,
        3510
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "3472": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3491,
        3510
      ],
      "op": "ADD",
      "path": "11"
    },
    "3473": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3491,
        3510
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3474": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3512,
        3527
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "3475": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3529,
        3533
      ],
      "op": "DUP7",
      "path": "11"
    },
    "3476": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3477,
        3490
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1779"
    },
    "3479": {
      "fn": "StakeLab.pendingReward",
      "jump": "i",
      "offset": [
        3477,
        3534
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3480": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3477,
        3534
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3481": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3456,
        3534
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3482": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3456,
        3534
      ],
      "op": "POP",
      "path": "11"
    },
    "3483": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3548,
        3562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3485": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3578,
        3582
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3486": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3578,
        3598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3488": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3578,
        3598
      ],
      "op": "ADD",
      "path": "11"
    },
    "3489": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3578,
        3598
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3490": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3565,
        3575
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3491": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3565,
        3598
      ],
      "op": "MUL",
      "path": "11"
    },
    "3492": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3548,
        3598
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3493": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3548,
        3598
      ],
      "op": "POP",
      "path": "11"
    },
    "3494": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3666,
        3670
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 28
    },
    "3495": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3666,
        3693
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "3497": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3666,
        3693
      ],
      "op": "ADD",
      "path": "11"
    },
    "3498": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3666,
        3693
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3499": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3643,
        3647
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3500": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3643,
        3662
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3502": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3643,
        3662
      ],
      "op": "ADD",
      "path": "11"
    },
    "3503": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3643,
        3662
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3504": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3634,
        3640
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3505": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3634,
        3662
      ],
      "op": "MUL",
      "path": "11"
    },
    "3506": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3633,
        3693
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3507": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3633,
        3693
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDB8"
    },
    "3510": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3633,
        3693
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3511": {
      "dev": "Division by zero",
      "fn": "StakeLab.pendingReward",
      "offset": [
        3633,
        3693
      ],
      "op": "INVALID",
      "path": "11"
    },
    "3512": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3633,
        3693
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3513": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3633,
        3693
      ],
      "op": "DIV",
      "path": "11"
    },
    "3514": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3612,
        3693
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3515": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3612,
        3693
      ],
      "op": "ADD",
      "path": "11"
    },
    "3516": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3612,
        3693
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3517": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3612,
        3693
      ],
      "op": "POP",
      "path": "11"
    },
    "3518": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3363,
        3704
      ],
      "op": "POP",
      "path": "11"
    },
    "3519": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3363,
        3704
      ],
      "op": "POP",
      "path": "11"
    },
    "3520": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3363,
        3704
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3521": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3778,
        3793
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 29,
      "value": "0x20"
    },
    "3523": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3778,
        3793
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3524": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3778,
        3793
      ],
      "op": "ADD",
      "path": "11"
    },
    "3525": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3778,
        3793
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3526": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3755,
        3774
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3528": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3755,
        3774
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3529": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3755,
        3774
      ],
      "op": "ADD",
      "path": "11"
    },
    "3530": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3755,
        3774
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3531": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3721,
        3732
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3532": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3721,
        3732
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3533": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3721,
        3752
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3534": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3721,
        3752
      ],
      "op": "MUL",
      "path": "11"
    },
    "3535": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3755,
        3774
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3536": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3721,
        3774
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDD5"
    },
    "3539": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3721,
        3774
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3540": {
      "dev": "Division by zero",
      "fn": "StakeLab.pendingReward",
      "offset": [
        3721,
        3774
      ],
      "op": "INVALID",
      "path": "11"
    },
    "3541": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3721,
        3774
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3542": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3721,
        3774
      ],
      "op": "DIV",
      "path": "11"
    },
    "3543": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3720,
        3793
      ],
      "op": "SUB",
      "path": "11"
    },
    "3544": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3720,
        3793
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "3545": {
      "fn": "StakeLab.pendingReward",
      "offset": [
        3107,
        3800
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "3546": {
      "op": "POP"
    },
    "3547": {
      "op": "POP"
    },
    "3548": {
      "op": "POP"
    },
    "3549": {
      "op": "POP"
    },
    "3550": {
      "op": "POP"
    },
    "3551": {
      "op": "POP"
    },
    "3552": {
      "fn": "StakeLab.pendingReward",
      "jump": "o",
      "offset": [
        3107,
        3800
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3553": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7766,
        7862
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3554": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDE9"
    },
    "3557": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D6"
    },
    "3560": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3561": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3562": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3564": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3571": {
      "op": "SHL"
    },
    "3572": {
      "op": "SUB"
    },
    "3573": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3574": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3575": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "3576": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3577": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "3578": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "3579": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE39"
    },
    "3582": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3583": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3585": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3586": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3593": {
      "op": "SHL"
    },
    "3594": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3595": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3596": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3598": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3600": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3601": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3602": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3603": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3604": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3605": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3607": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3608": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3609": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3612": {
      "op": "DUP1"
    },
    "3613": {
      "op": "MLOAD"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3616": {
      "op": "PUSH2",
      "value": "0x1C39"
    },
    "3619": {
      "op": "DUP4"
    },
    "3620": {
      "op": "CODECOPY"
    },
    "3621": {
      "op": "DUP2"
    },
    "3622": {
      "op": "MLOAD"
    },
    "3623": {
      "op": "SWAP2"
    },
    "3624": {
      "op": "MSTORE"
    },
    "3625": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "3627": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3628": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3629": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3630": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3631": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3632": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3633": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3634": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3635": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "3636": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "3638": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3639": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3640": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3641": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3642": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7833,
        7846
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 30,
      "value": "0x2"
    },
    "3644": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        7833,
        7855
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3645": {
      "fn": "StakeLab.changeUserLimit",
      "jump": "o",
      "offset": [
        7766,
        7862
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3646": {
      "offset": [
        1775,
        1813
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3647": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1775,
        1813
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3649": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1775,
        1813
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3650": {
      "fn": "StakeLab.changeUserLimit",
      "offset": [
        1775,
        1813
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3651": {
      "fn": "StakeLab.changeUserLimit",
      "jump": "o",
      "offset": [
        1775,
        1813
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3652": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3653": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE4C"
    },
    "3656": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D6"
    },
    "3659": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3660": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3661": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3663": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3670": {
      "op": "SHL"
    },
    "3671": {
      "op": "SUB"
    },
    "3672": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3673": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3674": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "3675": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3676": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "3677": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "3678": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9C"
    },
    "3681": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3682": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3684": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3685": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3686": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3692": {
      "op": "SHL"
    },
    "3693": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3694": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3695": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3697": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3699": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3700": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3701": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3702": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3703": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3704": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3706": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3707": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3708": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3711": {
      "op": "DUP1"
    },
    "3712": {
      "op": "MLOAD"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3715": {
      "op": "PUSH2",
      "value": "0x1C39"
    },
    "3718": {
      "op": "DUP4"
    },
    "3719": {
      "op": "CODECOPY"
    },
    "3720": {
      "op": "DUP2"
    },
    "3721": {
      "op": "MLOAD"
    },
    "3722": {
      "op": "SWAP2"
    },
    "3723": {
      "op": "MSTORE"
    },
    "3724": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "3726": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3727": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3728": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3729": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3730": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3731": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3732": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3733": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3734": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "3735": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "3737": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3738": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3739": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3740": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3741": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10067,
        10083
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 31,
      "value": "0xEA5"
    },
    "3744": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10078,
        10082
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3745": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10067,
        10077
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1531"
    },
    "3748": {
      "fn": "StakeLab.setRewardPerSecond",
      "jump": "i",
      "offset": [
        10067,
        10083
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3749": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10067,
        10083
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3750": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10127,
        10143
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 32
    },
    "3751": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10102
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "3753": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10103,
        10107
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3754": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3755": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3756": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3757": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "LT",
      "path": "11"
    },
    "3758": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEB3"
    },
    "3761": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3762": {
      "dev": "Index out of range",
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "INVALID",
      "path": "11"
    },
    "3763": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3764": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3765": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3767": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3768": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3770": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3772": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3773": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3774": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "3776": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "MUL",
      "path": "11"
    },
    "3777": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10108
      ],
      "op": "ADD",
      "path": "11"
    },
    "3778": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10124
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3780": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10124
      ],
      "op": "ADD",
      "path": "11"
    },
    "3781": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10143
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3782": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10143
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3783": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10143
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3784": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10094,
        10143
      ],
      "op": "POP",
      "path": "11"
    },
    "3785": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "PUSH32",
      "path": "11",
      "statement": 33,
      "value": "0xCF46B21C204617FFB815B827463DB479E0F3CDC9586E33690D10CED9541FCDA0"
    },
    "3818": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10178,
        10182
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3819": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10184,
        10200
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3820": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3822": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3823": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3824": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3825": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3826": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3827": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3829": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "ADD",
      "path": "11"
    },
    "3830": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3831": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3832": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3833": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3835": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "ADD",
      "path": "11"
    },
    "3836": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3837": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "POP",
      "path": "11"
    },
    "3838": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "POP",
      "path": "11"
    },
    "3839": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "POP",
      "path": "11"
    },
    "3840": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3842": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3843": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3844": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3845": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "SUB",
      "path": "11"
    },
    "3846": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3847": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        10159,
        10201
      ],
      "op": "LOG1",
      "path": "11"
    },
    "3848": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "POP",
      "path": "11"
    },
    "3849": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        9969,
        10208
      ],
      "op": "POP",
      "path": "11"
    },
    "3850": {
      "fn": "StakeLab.setRewardPerSecond",
      "jump": "o",
      "offset": [
        9969,
        10208
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3851": {
      "offset": [
        1819,
        1848
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3852": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1819,
        1848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "3854": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1819,
        1848
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3855": {
      "fn": "StakeLab.setRewardPerSecond",
      "offset": [
        1819,
        1848
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3856": {
      "fn": "StakeLab.setRewardPerSecond",
      "jump": "o",
      "offset": [
        1819,
        1848
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3857": {
      "fn": "StakeLab.add",
      "offset": [
        8928,
        9880
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3858": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF19"
    },
    "3861": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D6"
    },
    "3864": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3865": {
      "fn": "StakeLab.add",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3866": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3868": {
      "fn": "StakeLab.add",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3875": {
      "op": "SHL"
    },
    "3876": {
      "op": "SUB"
    },
    "3877": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3878": {
      "fn": "StakeLab.add",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3879": {
      "fn": "StakeLab.add",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "3880": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3881": {
      "fn": "StakeLab.add",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "3882": {
      "fn": "StakeLab.add",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "3883": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF69"
    },
    "3886": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3887": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3889": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3890": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3891": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3897": {
      "op": "SHL"
    },
    "3898": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3899": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3900": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3902": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3904": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3905": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3906": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3907": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3908": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3909": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3911": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3912": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3913": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3916": {
      "op": "DUP1"
    },
    "3917": {
      "op": "MLOAD"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3920": {
      "op": "PUSH2",
      "value": "0x1C39"
    },
    "3923": {
      "op": "DUP4"
    },
    "3924": {
      "op": "CODECOPY"
    },
    "3925": {
      "op": "DUP2"
    },
    "3926": {
      "op": "MLOAD"
    },
    "3927": {
      "op": "SWAP2"
    },
    "3928": {
      "op": "MSTORE"
    },
    "3929": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "3931": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3932": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3933": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3934": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3935": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3936": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3937": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3938": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3939": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "3940": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "3942": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "3943": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3944": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3945": {
      "fn": "StakeLab.add",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3946": {
      "fn": "StakeLab.add",
      "offset": [
        9068,
        9089
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 34,
      "value": "0xF72"
    },
    "3949": {
      "fn": "StakeLab.add",
      "offset": [
        9082,
        9088
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3950": {
      "fn": "StakeLab.add",
      "offset": [
        9068,
        9081
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16F5"
    },
    "3953": {
      "fn": "StakeLab.add",
      "jump": "i",
      "offset": [
        9068,
        9089
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3954": {
      "fn": "StakeLab.add",
      "offset": [
        9068,
        9089
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3955": {
      "fn": "StakeLab.add",
      "offset": [
        9139,
        9158
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3957": {
      "fn": "StakeLab.add",
      "offset": [
        9179,
        9189
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3958": {
      "fn": "StakeLab.add",
      "offset": [
        9161,
        9176
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "3959": {
      "branch": 77,
      "fn": "StakeLab.add",
      "offset": [
        9161,
        9189
      ],
      "op": "GT",
      "path": "11"
    },
    "3960": {
      "fn": "StakeLab.add",
      "offset": [
        9161,
        9220
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF81"
    },
    "3963": {
      "branch": 77,
      "fn": "StakeLab.add",
      "offset": [
        9161,
        9220
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3964": {
      "fn": "StakeLab.add",
      "offset": [
        9210,
        9220
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3965": {
      "fn": "StakeLab.add",
      "offset": [
        9161,
        9220
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF83"
    },
    "3968": {
      "fn": "StakeLab.add",
      "offset": [
        9161,
        9220
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3969": {
      "fn": "StakeLab.add",
      "offset": [
        9161,
        9220
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3970": {
      "fn": "StakeLab.add",
      "offset": [
        9192,
        9207
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "3971": {
      "fn": "StakeLab.add",
      "offset": [
        9161,
        9220
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3972": {
      "fn": "StakeLab.add",
      "offset": [
        9139,
        9220
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3973": {
      "fn": "StakeLab.add",
      "offset": [
        9139,
        9220
      ],
      "op": "POP",
      "path": "11"
    },
    "3974": {
      "fn": "StakeLab.add",
      "offset": [
        9230,
        9254
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3976": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9263
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3983": {
      "op": "SHL"
    },
    "3984": {
      "op": "SUB"
    },
    "3985": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9272
      ],
      "op": "AND",
      "path": "11"
    },
    "3986": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9272
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x313CE567"
    },
    "3991": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3993": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3994": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3995": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "4000": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "AND",
      "path": "11"
    },
    "4001": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "4003": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "SHL",
      "path": "11"
    },
    "4004": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4005": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4006": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4008": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "ADD",
      "path": "11"
    },
    "4009": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4011": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4013": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4014": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4015": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4016": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "SUB",
      "path": "11"
    },
    "4017": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4018": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4020": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "DUP8",
      "path": "11"
    },
    "4021": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4022": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "4023": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4024": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4025": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4026": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFC2"
    },
    "4029": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4030": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4032": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4033": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4034": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4035": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "POP",
      "path": "11"
    },
    "4036": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "GAS",
      "path": "11"
    },
    "4037": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "CALL",
      "path": "11"
    },
    "4038": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4039": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4040": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4041": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFD6"
    },
    "4044": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4045": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4046": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4048": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4049": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "4050": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4051": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4053": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4054": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4055": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "POP",
      "path": "11"
    },
    "4056": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "POP",
      "path": "11"
    },
    "4057": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "POP",
      "path": "11"
    },
    "4058": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "POP",
      "path": "11"
    },
    "4059": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4061": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4062": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "4063": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4065": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4066": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "LT",
      "path": "11"
    },
    "4067": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4068": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFEC"
    },
    "4071": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4072": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4074": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4075": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4076": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4077": {
      "op": "POP"
    },
    "4078": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4079": {
      "fn": "StakeLab.add",
      "offset": [
        9257,
        9274
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4080": {
      "op": "POP"
    },
    "4081": {
      "fn": "StakeLab.add",
      "offset": [
        9314,
        9316
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 35,
      "value": "0x1E"
    },
    "4083": {
      "fn": "StakeLab.add",
      "offset": [
        9292,
        9316
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4084": {
      "branch": 78,
      "fn": "StakeLab.add",
      "offset": [
        9292,
        9316
      ],
      "op": "LT",
      "path": "11"
    },
    "4085": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1045"
    },
    "4088": {
      "branch": 78,
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4089": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4091": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4092": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4099": {
      "op": "SHL"
    },
    "4100": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4101": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4102": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4104": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4106": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4107": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "ADD",
      "path": "11"
    },
    "4108": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4109": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "4111": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "4113": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4114": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "ADD",
      "path": "11"
    },
    "4115": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4116": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x546F6B656E206861732077617920746F6F206D616E7920646563696D616C7300"
    },
    "4149": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x44"
    },
    "4151": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4152": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "ADD",
      "path": "11"
    },
    "4153": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4154": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4155": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4156": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4157": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4158": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4159": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "SUB",
      "path": "11"
    },
    "4160": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x64"
    },
    "4162": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "ADD",
      "path": "11"
    },
    "4163": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4164": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4165": {
      "fn": "StakeLab.add",
      "offset": [
        9284,
        9352
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4166": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 36,
      "value": "0x40"
    },
    "4168": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4169": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4170": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x140"
    },
    "4173": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4174": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "ADD",
      "path": "11"
    },
    "4175": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4176": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4183": {
      "op": "SHL"
    },
    "4184": {
      "op": "SUB"
    },
    "4185": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "4186": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP9",
      "path": "11"
    },
    "4187": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "AND",
      "path": "11"
    },
    "4188": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4189": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4190": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4192": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4193": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "ADD",
      "path": "11"
    },
    "4194": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "4195": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP10",
      "path": "11"
    },
    "4196": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4197": {
      "fn": "StakeLab.add",
      "offset": [
        9384,
        9386
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1E"
    },
    "4199": {
      "fn": "StakeLab.add",
      "offset": [
        9384,
        9408
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4200": {
      "fn": "StakeLab.add",
      "offset": [
        9384,
        9408
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4201": {
      "fn": "StakeLab.add",
      "offset": [
        9384,
        9408
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4202": {
      "fn": "StakeLab.add",
      "offset": [
        9384,
        9408
      ],
      "op": "SUB",
      "path": "11"
    },
    "4203": {
      "fn": "StakeLab.add",
      "offset": [
        9379,
        9381
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "4205": {
      "fn": "StakeLab.add",
      "offset": [
        9379,
        9409
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4206": {
      "fn": "StakeLab.add",
      "offset": [
        9379,
        9409
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4207": {
      "fn": "StakeLab.add",
      "offset": [
        9379,
        9409
      ],
      "op": "EXP",
      "path": "11"
    },
    "4208": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4209": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4210": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "ADD",
      "path": "11"
    },
    "4211": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4212": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4213": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4214": {
      "fn": "StakeLab.add",
      "offset": [
        9362,
        9376
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4216": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "4218": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP5",
      "path": "11"
    },
    "4219": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "ADD",
      "path": "11"
    },
    "4220": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4221": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4222": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4223": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "4225": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP6",
      "path": "11"
    },
    "4226": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "ADD",
      "path": "11"
    },
    "4227": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4228": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4229": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4230": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "4232": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4233": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "ADD",
      "path": "11"
    },
    "4234": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4235": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4236": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4237": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "4239": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP8",
      "path": "11"
    },
    "4240": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "ADD",
      "path": "11"
    },
    "4241": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "SWAP10",
      "path": "11"
    },
    "4242": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP11",
      "path": "11"
    },
    "4243": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4244": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "4246": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP8",
      "path": "11"
    },
    "4247": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "ADD",
      "path": "11"
    },
    "4248": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "SWAP11",
      "path": "11"
    },
    "4249": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP12",
      "path": "11"
    },
    "4250": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4251": {
      "fn": "StakeLab.add",
      "offset": [
        9844,
        9861
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4253": {
      "fn": "StakeLab.add",
      "offset": [
        9844,
        9861
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4254": {
      "fn": "StakeLab.add",
      "offset": [
        9844,
        9861
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4255": {
      "fn": "StakeLab.add",
      "offset": [
        9827,
        9861
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4256": {
      "fn": "StakeLab.add",
      "offset": [
        9827,
        9861
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "4257": {
      "fn": "StakeLab.add",
      "offset": [
        9827,
        9861
      ],
      "op": "ADD",
      "path": "11"
    },
    "4258": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "4261": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP9",
      "path": "11"
    },
    "4262": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "ADD",
      "path": "11"
    },
    "4263": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4264": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4265": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4266": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "4267": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP13",
      "path": "11"
    },
    "4268": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "AND",
      "path": "11"
    },
    "4269": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x120"
    },
    "4272": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP9",
      "path": "11"
    },
    "4273": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "ADD",
      "path": "11"
    },
    "4274": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4275": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4276": {
      "fn": "StakeLab.add",
      "offset": [
        9434,
        9872
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4277": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "4279": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4280": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4281": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP10",
      "path": "11"
    },
    "4282": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP11",
      "path": "11"
    },
    "4283": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "ADD",
      "path": "11"
    },
    "4284": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4285": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4286": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4287": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "4288": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4289": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "4290": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4291": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "4292": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4293": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4294": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "MUL",
      "path": "11"
    },
    "4295": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "4328": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4329": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "ADD",
      "path": "11"
    },
    "4330": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4331": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4332": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "4333": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP13",
      "path": "11"
    },
    "4334": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "AND",
      "path": "11"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4341": {
      "op": "SHL"
    },
    "4342": {
      "op": "SUB"
    },
    "4343": {
      "op": "NOT"
    },
    "4344": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "4345": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP10",
      "path": "11"
    },
    "4346": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "AND",
      "path": "11"
    },
    "4347": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "OR",
      "path": "11"
    },
    "4348": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4349": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4350": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP11",
      "path": "11"
    },
    "4351": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4352": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C"
    },
    "4385": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP13",
      "path": "11"
    },
    "4386": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "ADD",
      "path": "11"
    },
    "4387": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4388": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4389": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4390": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85D"
    },
    "4423": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP12",
      "path": "11"
    },
    "4424": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "ADD",
      "path": "11"
    },
    "4425": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4426": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4427": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4428": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85E"
    },
    "4461": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP11",
      "path": "11"
    },
    "4462": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "ADD",
      "path": "11"
    },
    "4463": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4464": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4465": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85F"
    },
    "4498": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP10",
      "path": "11"
    },
    "4499": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "ADD",
      "path": "11"
    },
    "4500": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4501": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4502": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4503": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F860"
    },
    "4536": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP9",
      "path": "11"
    },
    "4537": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "ADD",
      "path": "11"
    },
    "4538": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4539": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4540": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4541": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F861"
    },
    "4574": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP8",
      "path": "11"
    },
    "4575": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "ADD",
      "path": "11"
    },
    "4576": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4577": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4578": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4579": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F862"
    },
    "4612": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4613": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "ADD",
      "path": "11"
    },
    "4614": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4615": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4616": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F863"
    },
    "4649": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP6",
      "path": "11"
    },
    "4650": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "ADD",
      "path": "11"
    },
    "4651": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4652": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4653": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F864"
    },
    "4686": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4687": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4688": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "ADD",
      "path": "11"
    },
    "4689": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4690": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4691": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4692": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4693": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4694": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "AND",
      "path": "11"
    },
    "4695": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4696": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "AND",
      "path": "11"
    },
    "4697": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4698": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4699": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4700": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "OR",
      "path": "11"
    },
    "4701": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4702": {
      "fn": "StakeLab.add",
      "offset": [
        9420,
        9873
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4703": {
      "fn": "StakeLab.add",
      "jump": "o",
      "offset": [
        8928,
        9880
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4704": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4705": {
      "fn": "StakeLab.deposit",
      "offset": [
        4827,
        4848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4707": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4859
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "4709": {
      "fn": "StakeLab.deposit",
      "offset": [
        4860,
        4864
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4710": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4711": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4712": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4713": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "LT",
      "path": "11"
    },
    "4714": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x126F"
    },
    "4717": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4718": {
      "dev": "Index out of range",
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "INVALID",
      "path": "11"
    },
    "4719": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4720": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4722": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4723": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4724": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4725": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4727": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4728": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4729": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4730": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4913
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4731": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4913
      ],
      "op": "DUP5",
      "path": "11"
    },
    "4732": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4913
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4733": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4907
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4735": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4913
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4736": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4913
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4737": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4913
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4739": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4913
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4740": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4913
      ],
      "op": "DUP6",
      "path": "11"
    },
    "4741": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4913
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4742": {
      "fn": "StakeLab.deposit",
      "offset": [
        4914,
        4924
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4743": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4925
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4744": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4925
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4745": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4925
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4746": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4925
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4747": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4925
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4748": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4925
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4749": {
      "fn": "StakeLab.deposit",
      "offset": [
        4899,
        4925
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4750": {
      "fn": "StakeLab.deposit",
      "offset": [
        4939,
        4952
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "4752": {
      "fn": "StakeLab.deposit",
      "offset": [
        4939,
        4952
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4753": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "4755": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4756": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4757": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "MUL",
      "path": "11"
    },
    "4758": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4759": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4760": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "ADD",
      "path": "11"
    },
    "4761": {
      "fn": "StakeLab.deposit",
      "offset": [
        4851,
        4865
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4762": {
      "op": "POP"
    },
    "4763": {
      "fn": "StakeLab.deposit",
      "offset": [
        4939,
        4956
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4764": {
      "fn": "StakeLab.deposit",
      "offset": [
        4939,
        4956
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4765": {
      "fn": "StakeLab.deposit",
      "offset": [
        4939,
        4956
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4766": {
      "branch": 79,
      "fn": "StakeLab.deposit",
      "offset": [
        4939,
        4956
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4767": {
      "fn": "StakeLab.deposit",
      "offset": [
        4939,
        4999
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12AB"
    },
    "4770": {
      "branch": 79,
      "fn": "StakeLab.deposit",
      "offset": [
        4939,
        4999
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4771": {
      "fn": "StakeLab.deposit",
      "offset": [
        4939,
        4999
      ],
      "op": "POP",
      "path": "11"
    },
    "4772": {
      "fn": "StakeLab.deposit",
      "offset": [
        4978,
        4982
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4773": {
      "fn": "StakeLab.deposit",
      "offset": [
        4978,
        4999
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "4775": {
      "fn": "StakeLab.deposit",
      "offset": [
        4978,
        4999
      ],
      "op": "ADD",
      "path": "11"
    },
    "4776": {
      "fn": "StakeLab.deposit",
      "offset": [
        4978,
        4999
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4777": {
      "fn": "StakeLab.deposit",
      "offset": [
        4960,
        4975
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "4778": {
      "branch": 80,
      "fn": "StakeLab.deposit",
      "offset": [
        4960,
        4999
      ],
      "op": "LT",
      "path": "11"
    },
    "4779": {
      "fn": "StakeLab.deposit",
      "offset": [
        4939,
        4999
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4780": {
      "fn": "StakeLab.deposit",
      "offset": [
        4936,
        5110
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4781": {
      "fn": "StakeLab.deposit",
      "offset": [
        4936,
        5110
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12F4"
    },
    "4784": {
      "branch": 80,
      "fn": "StakeLab.deposit",
      "offset": [
        4936,
        5110
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4785": {
      "fn": "StakeLab.deposit",
      "offset": [
        5048,
        5061
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 37,
      "value": "0x2"
    },
    "4787": {
      "fn": "StakeLab.deposit",
      "offset": [
        5048,
        5061
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4788": {
      "fn": "StakeLab.deposit",
      "offset": [
        5023,
        5034
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4789": {
      "fn": "StakeLab.deposit",
      "offset": [
        5023,
        5034
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4790": {
      "fn": "StakeLab.deposit",
      "offset": [
        5023,
        5044
      ],
      "op": "DUP5",
      "path": "11"
    },
    "4791": {
      "fn": "StakeLab.deposit",
      "offset": [
        5023,
        5044
      ],
      "op": "ADD",
      "path": "11"
    },
    "4792": {
      "fn": "StakeLab.deposit",
      "offset": [
        5023,
        5061
      ],
      "op": "GT",
      "path": "11"
    },
    "4793": {
      "branch": 81,
      "fn": "StakeLab.deposit",
      "offset": [
        5023,
        5061
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4794": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12F4"
    },
    "4797": {
      "branch": 81,
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4798": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4800": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4801": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4807": {
      "op": "SHL"
    },
    "4808": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4809": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4810": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4812": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "ADD",
      "path": "11"
    },
    "4813": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4814": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4815": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4817": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "ADD",
      "path": "11"
    },
    "4818": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4819": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4820": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "SUB",
      "path": "11"
    },
    "4821": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4822": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4823": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x21"
    },
    "4825": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4826": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4827": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4829": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "ADD",
      "path": "11"
    },
    "4830": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4831": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BCE"
    },
    "4834": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x21"
    },
    "4836": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4837": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "CODECOPY",
      "path": "11"
    },
    "4838": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4840": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "ADD",
      "path": "11"
    },
    "4841": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4842": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "POP",
      "path": "11"
    },
    "4843": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "POP",
      "path": "11"
    },
    "4844": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4846": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4847": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4848": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4849": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "SUB",
      "path": "11"
    },
    "4850": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4851": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "REVERT",
      "path": "11"
    },
    "4852": {
      "fn": "StakeLab.deposit",
      "offset": [
        5015,
        5099
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4853": {
      "fn": "StakeLab.deposit",
      "offset": [
        5120,
        5136
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 38,
      "value": "0x12FD"
    },
    "4856": {
      "fn": "StakeLab.deposit",
      "offset": [
        5131,
        5135
      ],
      "op": "DUP5",
      "path": "11"
    },
    "4857": {
      "fn": "StakeLab.deposit",
      "offset": [
        5120,
        5130
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1531"
    },
    "4860": {
      "fn": "StakeLab.deposit",
      "jump": "i",
      "offset": [
        5120,
        5136
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4861": {
      "fn": "StakeLab.deposit",
      "offset": [
        5120,
        5136
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4862": {
      "fn": "StakeLab.deposit",
      "offset": [
        5147,
        5162
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4864": {
      "fn": "StakeLab.deposit",
      "offset": [
        5228,
        5232
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4865": {
      "fn": "StakeLab.deposit",
      "offset": [
        5228,
        5243
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4867": {
      "fn": "StakeLab.deposit",
      "offset": [
        5228,
        5243
      ],
      "op": "ADD",
      "path": "11"
    },
    "4868": {
      "fn": "StakeLab.deposit",
      "offset": [
        5228,
        5243
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4869": {
      "fn": "StakeLab.deposit",
      "offset": [
        5205,
        5209
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4870": {
      "fn": "StakeLab.deposit",
      "offset": [
        5205,
        5224
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "4872": {
      "fn": "StakeLab.deposit",
      "offset": [
        5205,
        5224
      ],
      "op": "ADD",
      "path": "11"
    },
    "4873": {
      "fn": "StakeLab.deposit",
      "offset": [
        5205,
        5224
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4874": {
      "fn": "StakeLab.deposit",
      "offset": [
        5180,
        5184
      ],
      "op": "DUP5",
      "path": "11"
    },
    "4875": {
      "fn": "StakeLab.deposit",
      "offset": [
        5180,
        5202
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "4877": {
      "fn": "StakeLab.deposit",
      "offset": [
        5180,
        5202
      ],
      "op": "ADD",
      "path": "11"
    },
    "4878": {
      "fn": "StakeLab.deposit",
      "offset": [
        5180,
        5202
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4879": {
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5170
      ],
      "op": "DUP5",
      "path": "11"
    },
    "4880": {
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5177
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4882": {
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5177
      ],
      "op": "ADD",
      "path": "11"
    },
    "4883": {
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5177
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4884": {
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5202
      ],
      "op": "MUL",
      "path": "11"
    },
    "4885": {
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5224
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4886": {
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5224
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x131B"
    },
    "4889": {
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5224
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4890": {
      "dev": "Division by zero",
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5224
      ],
      "op": "INVALID",
      "path": "11"
    },
    "4891": {
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5224
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4892": {
      "fn": "StakeLab.deposit",
      "offset": [
        5254,
        5276
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 39
    },
    "4893": {
      "fn": "StakeLab.deposit",
      "offset": [
        5254,
        5276
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4894": {
      "fn": "StakeLab.deposit",
      "offset": [
        5254,
        5276
      ],
      "op": "DUP8",
      "path": "11"
    },
    "4895": {
      "fn": "StakeLab.deposit",
      "offset": [
        5254,
        5276
      ],
      "op": "ADD",
      "path": "11"
    },
    "4896": {
      "fn": "StakeLab.deposit",
      "offset": [
        5254,
        5276
      ],
      "op": "DUP6",
      "path": "11"
    },
    "4897": {
      "fn": "StakeLab.deposit",
      "offset": [
        5254,
        5276
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4898": {
      "fn": "StakeLab.deposit",
      "offset": [
        5286,
        5313
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 40,
      "value": "0x3"
    },
    "4900": {
      "fn": "StakeLab.deposit",
      "offset": [
        5286,
        5313
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4901": {
      "fn": "StakeLab.deposit",
      "offset": [
        5286,
        5313
      ],
      "op": "ADD",
      "path": "11"
    },
    "4902": {
      "fn": "StakeLab.deposit",
      "offset": [
        5286,
        5324
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4903": {
      "fn": "StakeLab.deposit",
      "offset": [
        5286,
        5324
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4904": {
      "fn": "StakeLab.deposit",
      "offset": [
        5286,
        5324
      ],
      "op": "DUP9",
      "path": "11"
    },
    "4905": {
      "fn": "StakeLab.deposit",
      "offset": [
        5286,
        5324
      ],
      "op": "ADD",
      "path": "11"
    },
    "4906": {
      "fn": "StakeLab.deposit",
      "offset": [
        5286,
        5324
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4907": {
      "fn": "StakeLab.deposit",
      "offset": [
        5286,
        5324
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4908": {
      "fn": "StakeLab.deposit",
      "offset": [
        5391,
        5410
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 41,
      "value": "0x2"
    },
    "4910": {
      "fn": "StakeLab.deposit",
      "offset": [
        5391,
        5410
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4911": {
      "fn": "StakeLab.deposit",
      "offset": [
        5391,
        5410
      ],
      "op": "ADD",
      "path": "11"
    },
    "4912": {
      "fn": "StakeLab.deposit",
      "offset": [
        5391,
        5410
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4913": {
      "fn": "StakeLab.deposit",
      "offset": [
        5366,
        5388
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "4915": {
      "fn": "StakeLab.deposit",
      "offset": [
        5366,
        5388
      ],
      "op": "DUP8",
      "path": "11"
    },
    "4916": {
      "fn": "StakeLab.deposit",
      "offset": [
        5366,
        5388
      ],
      "op": "ADD",
      "path": "11"
    },
    "4917": {
      "fn": "StakeLab.deposit",
      "offset": [
        5366,
        5388
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4918": {
      "fn": "StakeLab.deposit",
      "offset": [
        5352,
        5363
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4919": {
      "fn": "StakeLab.deposit",
      "offset": [
        5352,
        5363
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4920": {
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5224
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4921": {
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5224
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4922": {
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5224
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "4923": {
      "fn": "StakeLab.deposit",
      "offset": [
        5166,
        5224
      ],
      "op": "DIV",
      "path": "11"
    },
    "4924": {
      "fn": "StakeLab.deposit",
      "offset": [
        5165,
        5243
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4925": {
      "fn": "StakeLab.deposit",
      "offset": [
        5165,
        5243
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4926": {
      "fn": "StakeLab.deposit",
      "offset": [
        5165,
        5243
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4927": {
      "fn": "StakeLab.deposit",
      "offset": [
        5165,
        5243
      ],
      "op": "SUB",
      "path": "11"
    },
    "4928": {
      "fn": "StakeLab.deposit",
      "offset": [
        5165,
        5243
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "4929": {
      "op": "POP"
    },
    "4930": {
      "fn": "StakeLab.deposit",
      "offset": [
        5352,
        5388
      ],
      "op": "MUL",
      "path": "11"
    },
    "4931": {
      "fn": "StakeLab.deposit",
      "offset": [
        5391,
        5410
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4932": {
      "fn": "StakeLab.deposit",
      "offset": [
        5352,
        5410
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1349"
    },
    "4935": {
      "fn": "StakeLab.deposit",
      "offset": [
        5352,
        5410
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4936": {
      "dev": "Division by zero",
      "fn": "StakeLab.deposit",
      "offset": [
        5352,
        5410
      ],
      "op": "INVALID",
      "path": "11"
    },
    "4937": {
      "fn": "StakeLab.deposit",
      "offset": [
        5352,
        5410
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4938": {
      "fn": "StakeLab.deposit",
      "offset": [
        5352,
        5410
      ],
      "op": "DIV",
      "path": "11"
    },
    "4939": {
      "fn": "StakeLab.deposit",
      "offset": [
        5334,
        5349
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4941": {
      "fn": "StakeLab.deposit",
      "offset": [
        5334,
        5349
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4942": {
      "fn": "StakeLab.deposit",
      "offset": [
        5334,
        5349
      ],
      "op": "ADD",
      "path": "11"
    },
    "4943": {
      "fn": "StakeLab.deposit",
      "offset": [
        5334,
        5410
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4944": {
      "fn": "StakeLab.deposit",
      "offset": [
        5424,
        5435
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4945": {
      "branch": 82,
      "fn": "StakeLab.deposit",
      "offset": [
        5424,
        5435
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4946": {
      "fn": "StakeLab.deposit",
      "offset": [
        5421,
        5513
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x136B"
    },
    "4949": {
      "branch": 82,
      "fn": "StakeLab.deposit",
      "offset": [
        5421,
        5513
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4950": {
      "fn": "StakeLab.deposit",
      "offset": [
        5464,
        5480
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 42
    },
    "4951": {
      "fn": "StakeLab.deposit",
      "offset": [
        5464,
        5480
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4952": {
      "fn": "StakeLab.deposit",
      "offset": [
        5451,
        5502
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x136B"
    },
    "4955": {
      "fn": "StakeLab.deposit",
      "offset": [
        5451,
        5502
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4962": {
      "op": "SHL"
    },
    "4963": {
      "op": "SUB"
    },
    "4964": {
      "fn": "StakeLab.deposit",
      "offset": [
        5464,
        5480
      ],
      "op": "AND",
      "path": "11"
    },
    "4965": {
      "fn": "StakeLab.deposit",
      "offset": [
        5482,
        5492
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4966": {
      "fn": "StakeLab.deposit",
      "offset": [
        5494,
        5501
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4967": {
      "fn": "StakeLab.deposit",
      "offset": [
        5451,
        5463
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x163D"
    },
    "4970": {
      "fn": "StakeLab.deposit",
      "jump": "i",
      "offset": [
        5451,
        5502
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4971": {
      "fn": "StakeLab.deposit",
      "offset": [
        5451,
        5502
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4972": {
      "fn": "StakeLab.deposit",
      "offset": [
        5522,
        5594
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 43,
      "value": "0x13A0"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4981": {
      "op": "SHL"
    },
    "4982": {
      "op": "SUB"
    },
    "4983": {
      "fn": "StakeLab.deposit",
      "offset": [
        5522,
        5532
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x0"
    },
    "5016": {
      "fn": "StakeLab.deposit",
      "offset": [
        5522,
        5549
      ],
      "op": "AND",
      "path": "11"
    },
    "5017": {
      "fn": "StakeLab.deposit",
      "offset": [
        5558,
        5568
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5018": {
      "fn": "StakeLab.deposit",
      "offset": [
        5579,
        5583
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "5019": {
      "fn": "StakeLab.deposit",
      "offset": [
        5586,
        5593
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5020": {
      "fn": "StakeLab.deposit",
      "offset": [
        5522,
        5549
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17DC"
    },
    "5023": {
      "fn": "StakeLab.deposit",
      "jump": "i",
      "offset": [
        5522,
        5594
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5024": {
      "fn": "StakeLab.deposit",
      "offset": [
        5522,
        5594
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5025": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 44,
      "value": "0x40"
    },
    "5027": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5028": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5029": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5030": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5031": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5032": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5033": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5034": {
      "fn": "StakeLab.deposit",
      "offset": [
        5630,
        5634
      ],
      "op": "DUP7",
      "path": "11"
    },
    "5035": {
      "fn": "StakeLab.deposit",
      "offset": [
        5630,
        5634
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5036": {
      "fn": "StakeLab.deposit",
      "offset": [
        5618,
        5628
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5037": {
      "fn": "StakeLab.deposit",
      "offset": [
        5618,
        5628
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5038": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
    },
    "5071": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5072": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5073": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5074": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "SUB",
      "path": "11"
    },
    "5075": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5077": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "ADD",
      "path": "11"
    },
    "5078": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5079": {
      "fn": "StakeLab.deposit",
      "offset": [
        5610,
        5644
      ],
      "op": "LOG3",
      "path": "11"
    },
    "5080": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "POP",
      "path": "11"
    },
    "5081": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "POP",
      "path": "11"
    },
    "5082": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "POP",
      "path": "11"
    },
    "5083": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "POP",
      "path": "11"
    },
    "5084": {
      "fn": "StakeLab.deposit",
      "offset": [
        4759,
        5651
      ],
      "op": "POP",
      "path": "11"
    },
    "5085": {
      "fn": "StakeLab.deposit",
      "jump": "o",
      "offset": [
        4759,
        5651
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5086": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5087": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13E6"
    },
    "5090": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D6"
    },
    "5093": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5094": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5095": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5097": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5104": {
      "op": "SHL"
    },
    "5105": {
      "op": "SUB"
    },
    "5106": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5107": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5108": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "5109": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5110": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "5111": {
      "branch": 94,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "5112": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1436"
    },
    "5115": {
      "branch": 94,
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5116": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5119": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5120": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5126": {
      "op": "SHL"
    },
    "5127": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5128": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5129": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5131": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5134": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "5135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5136": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5137": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "5140": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5141": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "5142": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5145": {
      "op": "DUP1"
    },
    "5146": {
      "op": "MLOAD"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5149": {
      "op": "PUSH2",
      "value": "0x1C39"
    },
    "5152": {
      "op": "DUP4"
    },
    "5153": {
      "op": "CODECOPY"
    },
    "5154": {
      "op": "DUP2"
    },
    "5155": {
      "op": "MLOAD"
    },
    "5156": {
      "op": "SWAP2"
    },
    "5157": {
      "op": "MSTORE"
    },
    "5158": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "5160": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5161": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "5162": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5163": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5164": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5165": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5166": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5167": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5168": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "5169": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "5171": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "5172": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5173": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5174": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5181": {
      "op": "SHL"
    },
    "5182": {
      "op": "SUB"
    },
    "5183": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2088,
        2110
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 45
    },
    "5184": {
      "branch": 95,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2088,
        2110
      ],
      "op": "AND",
      "path": "1"
    },
    "5185": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x147B"
    },
    "5188": {
      "branch": 95,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5189": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5191": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5192": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5198": {
      "op": "SHL"
    },
    "5199": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5200": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5201": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5203": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "5204": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5205": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5206": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5208": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "5209": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5210": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5211": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SUB",
      "path": "1"
    },
    "5212": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5213": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x26"
    },
    "5216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5217": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "5221": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BA8"
    },
    "5225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x26"
    },
    "5227": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5228": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "5229": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5231": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "5232": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "POP",
      "path": "1"
    },
    "5234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "POP",
      "path": "1"
    },
    "5235": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5237": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5239": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5240": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SUB",
      "path": "1"
    },
    "5241": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5242": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5243": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5244": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 46,
      "value": "0x0"
    },
    "5246": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5247": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5250": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5257": {
      "op": "SHL"
    },
    "5258": {
      "op": "SUB"
    },
    "5259": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5260": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "AND",
      "path": "1"
    },
    "5262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5263": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "AND",
      "path": "1"
    },
    "5265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5266": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5299": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5300": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "LOG3",
      "path": "1"
    },
    "5301": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2222
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 47,
      "value": "0x0"
    },
    "5303": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5304": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5311": {
      "op": "SHL"
    },
    "5312": {
      "op": "SUB"
    },
    "5313": {
      "op": "NOT"
    },
    "5314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "AND",
      "path": "1"
    },
    "5315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5321": {
      "op": "SHL"
    },
    "5322": {
      "op": "SUB"
    },
    "5323": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5324": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5325": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5326": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "AND",
      "path": "1"
    },
    "5327": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5328": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5329": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5330": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "OR",
      "path": "1"
    },
    "5331": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5332": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5333": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5334": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5335": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 48
    },
    "5336": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5337": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5338": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        704,
        879
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5339": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 49,
      "value": "0x40"
    },
    "5341": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5342": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5349": {
      "op": "SHL"
    },
    "5350": {
      "op": "SUB"
    },
    "5351": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5352": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "AND",
      "path": "5"
    },
    "5353": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "5355": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5356": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "5"
    },
    "5357": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5358": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "5360": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5361": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5362": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "5"
    },
    "5363": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5364": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5365": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5366": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5367": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5368": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5369": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5370": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SUB",
      "path": "5"
    },
    "5371": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5372": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5373": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "5"
    },
    "5374": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5375": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5376": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "5378": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5379": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5380": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "5"
    },
    "5381": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5382": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5383": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5384": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5386": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5387": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "5"
    },
    "5388": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5389": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5396": {
      "op": "SHL"
    },
    "5397": {
      "op": "SUB"
    },
    "5398": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "AND",
      "path": "5"
    },
    "5399": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5406": {
      "op": "SHL"
    },
    "5407": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "OR",
      "path": "5"
    },
    "5408": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5409": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5410": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        872
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x152C"
    },
    "5413": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        872
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5414": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        806,
        811
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5415": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        806,
        811
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5416": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        805
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1832"
    },
    "5419": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        786,
        872
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5420": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        872
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5421": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        704,
        879
      ],
      "op": "POP",
      "path": "5"
    },
    "5422": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        704,
        879
      ],
      "op": "POP",
      "path": "5"
    },
    "5423": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        704,
        879
      ],
      "op": "POP",
      "path": "5"
    },
    "5424": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        704,
        879
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5425": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4128,
        4730
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5426": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4181,
        4202
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5428": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4213
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5430": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4214,
        4218
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5431": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5432": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5433": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5434": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "LT",
      "path": "11"
    },
    "5435": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1540"
    },
    "5438": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5439": {
      "dev": "Index out of range",
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "INVALID",
      "path": "11"
    },
    "5440": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5441": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5442": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5444": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5445": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5447": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5449": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5450": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5451": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "5453": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "MUL",
      "path": "11"
    },
    "5454": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4205,
        4219
      ],
      "op": "ADD",
      "path": "11"
    },
    "5455": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4181,
        4219
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5456": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4181,
        4219
      ],
      "op": "POP",
      "path": "11"
    },
    "5457": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4252,
        4256
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5458": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4252,
        4271
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5460": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4252,
        4271
      ],
      "op": "ADD",
      "path": "11"
    },
    "5461": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4252,
        4271
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5462": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4233,
        4248
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "5463": {
      "branch": 83,
      "fn": "StakeLab.updatePool",
      "offset": [
        4233,
        4271
      ],
      "op": "GT",
      "path": "11"
    },
    "5464": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4229,
        4304
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1561"
    },
    "5467": {
      "branch": 83,
      "fn": "StakeLab.updatePool",
      "offset": [
        4229,
        4304
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5468": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4287,
        4294
      ],
      "op": "POP",
      "path": "11",
      "statement": 50
    },
    "5469": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4287,
        4294
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x163A"
    },
    "5472": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4287,
        4294
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5473": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4229,
        4304
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5474": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4318,
        4345
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5476": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4318,
        4345
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5477": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4318,
        4345
      ],
      "op": "ADD",
      "path": "11"
    },
    "5478": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4318,
        4345
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5479": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4314,
        4434
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1576"
    },
    "5482": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4314,
        4434
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5483": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4388,
        4403
      ],
      "op": "TIMESTAMP",
      "path": "11",
      "statement": 51
    },
    "5484": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4366,
        4385
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5486": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4366,
        4385
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5487": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4366,
        4385
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5488": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4366,
        4385
      ],
      "op": "ADD",
      "path": "11"
    },
    "5489": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4366,
        4403
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "5490": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4417,
        4424
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 52,
      "value": "0x163A"
    },
    "5493": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4417,
        4424
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5494": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4314,
        4434
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5495": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4478,
        4497
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5497": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4478,
        4497
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5498": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4478,
        4497
      ],
      "op": "ADD",
      "path": "11"
    },
    "5499": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4478,
        4497
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5500": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5502": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5503": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5504": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x140"
    },
    "5507": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5508": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5509": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5510": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5511": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5512": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5519": {
      "op": "SHL"
    },
    "5520": {
      "op": "SUB"
    },
    "5521": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5522": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5523": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "AND",
      "path": "11"
    },
    "5524": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5525": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5526": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "5528": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5529": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5530": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5531": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5533": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5534": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5535": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5536": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "5538": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5539": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5540": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5541": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5542": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5543": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5544": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5545": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5546": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5547": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5548": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5550": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5551": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5552": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5553": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "5555": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5556": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5557": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5558": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "5560": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5561": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5562": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5563": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5564": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5565": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "5567": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5568": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5569": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5570": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA0"
    },
    "5572": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5573": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5574": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5575": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "5577": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5578": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5579": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5580": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "5582": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5583": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5584": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5585": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "5587": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5588": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5589": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5590": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "5592": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5593": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5594": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5595": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x8"
    },
    "5597": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5598": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5599": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5600": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "5603": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5604": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5605": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5606": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x9"
    },
    "5608": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5609": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5610": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5611": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5612": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5613": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "AND",
      "path": "11"
    },
    "5614": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x120"
    },
    "5617": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5618": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "ADD",
      "path": "11"
    },
    "5619": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5620": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4443,
        4461
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5622": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4443,
        4461
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5623": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1601"
    },
    "5626": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5627": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4499,
        4514
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "5628": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4499,
        4514
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5629": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4477
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1779"
    },
    "5632": {
      "fn": "StakeLab.updatePool",
      "jump": "i",
      "offset": [
        4464,
        4521
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5633": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4464,
        4521
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5634": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4443,
        4521
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5635": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4443,
        4521
      ],
      "op": "POP",
      "path": "11"
    },
    "5636": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4531,
        4545
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5638": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4561,
        4565
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5639": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4561,
        4581
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "5641": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4561,
        4581
      ],
      "op": "ADD",
      "path": "11"
    },
    "5642": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4561,
        4581
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5643": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4548,
        4558
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5644": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4548,
        4581
      ],
      "op": "MUL",
      "path": "11"
    },
    "5645": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4531,
        4581
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5646": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4531,
        4581
      ],
      "op": "POP",
      "path": "11"
    },
    "5647": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4649,
        4653
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 53
    },
    "5648": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4649,
        4676
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5650": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4649,
        4676
      ],
      "op": "ADD",
      "path": "11"
    },
    "5651": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4649,
        4676
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5652": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4627,
        4631
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5653": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4627,
        4646
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "5655": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4627,
        4646
      ],
      "op": "ADD",
      "path": "11"
    },
    "5656": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4627,
        4646
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5657": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4618,
        4624
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5658": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4618,
        4646
      ],
      "op": "MUL",
      "path": "11"
    },
    "5659": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4618,
        4676
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5660": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4618,
        4676
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1621"
    },
    "5663": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4618,
        4676
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5664": {
      "dev": "Division by zero",
      "fn": "StakeLab.updatePool",
      "offset": [
        4618,
        4676
      ],
      "op": "INVALID",
      "path": "11"
    },
    "5665": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4618,
        4676
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5666": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4592,
        4614
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "5668": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4592,
        4614
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5669": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4592,
        4614
      ],
      "op": "ADD",
      "path": "11"
    },
    "5670": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4592,
        4676
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5671": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4592,
        4676
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5672": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4618,
        4676
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5673": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4618,
        4676
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5674": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4618,
        4676
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5675": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4618,
        4676
      ],
      "op": "DIV",
      "path": "11"
    },
    "5676": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4592,
        4676
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5677": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4592,
        4676
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5678": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4592,
        4676
      ],
      "op": "ADD",
      "path": "11"
    },
    "5679": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4592,
        4676
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5680": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4592,
        4676
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "5681": {
      "op": "POP"
    },
    "5682": {
      "op": "POP"
    },
    "5683": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4708,
        4723
      ],
      "op": "TIMESTAMP",
      "path": "11",
      "statement": 54
    },
    "5684": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4686,
        4705
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5686": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4686,
        4705
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5687": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4686,
        4705
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5688": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4686,
        4705
      ],
      "op": "ADD",
      "path": "11"
    },
    "5689": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4686,
        4723
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "5690": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4128,
        4730
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5691": {
      "fn": "StakeLab.updatePool",
      "offset": [
        4128,
        4730
      ],
      "op": "POP",
      "path": "11"
    },
    "5692": {
      "fn": "StakeLab.updatePool",
      "jump": "o",
      "offset": [
        4128,
        4730
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5693": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7075,
        7355
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5694": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7160,
        7171
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5696": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7179
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5703": {
      "op": "SHL"
    },
    "5704": {
      "op": "SUB"
    },
    "5705": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7189
      ],
      "op": "AND",
      "path": "11"
    },
    "5706": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7189
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "5711": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7198,
        7202
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "5712": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5714": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5715": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5716": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "5721": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "AND",
      "path": "11"
    },
    "5722": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "5724": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "SHL",
      "path": "11"
    },
    "5725": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5726": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5727": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5729": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "ADD",
      "path": "11"
    },
    "5730": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5731": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5738": {
      "op": "SHL"
    },
    "5739": {
      "op": "SUB"
    },
    "5740": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "AND",
      "path": "11"
    },
    "5741": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5742": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5743": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5745": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "ADD",
      "path": "11"
    },
    "5746": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5747": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "POP",
      "path": "11"
    },
    "5748": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "POP",
      "path": "11"
    },
    "5749": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5751": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5753": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5754": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5755": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5756": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "SUB",
      "path": "11"
    },
    "5757": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5758": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP7",
      "path": "11"
    },
    "5759": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5760": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "5761": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5762": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5763": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5764": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x168C"
    },
    "5767": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5768": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5770": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5771": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5772": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5773": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "POP",
      "path": "11"
    },
    "5774": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "GAS",
      "path": "11"
    },
    "5775": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "5776": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5777": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5778": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5779": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16A0"
    },
    "5782": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5783": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5784": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5786": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5787": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "5788": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5789": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5791": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5792": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5793": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "POP",
      "path": "11"
    },
    "5794": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "POP",
      "path": "11"
    },
    "5795": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "POP",
      "path": "11"
    },
    "5796": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "POP",
      "path": "11"
    },
    "5797": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5799": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5800": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5801": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5803": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5804": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "LT",
      "path": "11"
    },
    "5805": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5806": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16B6"
    },
    "5809": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5810": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5812": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5813": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5814": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5815": {
      "op": "POP"
    },
    "5816": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5817": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7174,
        7204
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5818": {
      "op": "POP"
    },
    "5819": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7218,
        7231
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5820": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7218,
        7231
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5821": {
      "branch": 84,
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7218,
        7231
      ],
      "op": "GT",
      "path": "11"
    },
    "5822": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7214,
        7349
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5823": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7214,
        7349
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16DB"
    },
    "5826": {
      "branch": 84,
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7214,
        7349
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5827": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7247,
        7275
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 55,
      "value": "0x16D6"
    },
    "5830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5836": {
      "op": "SHL"
    },
    "5837": {
      "op": "SUB"
    },
    "5838": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7247,
        7265
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5839": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7247,
        7265
      ],
      "op": "AND",
      "path": "11"
    },
    "5840": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7266,
        7269
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5841": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7271,
        7274
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5842": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7247,
        7265
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14DA"
    },
    "5845": {
      "fn": "StakeLab.safeTransfer",
      "jump": "i",
      "offset": [
        7247,
        7275
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5846": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7247,
        7275
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5847": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7214,
        7349
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16EF"
    },
    "5850": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7214,
        7349
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5851": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7214,
        7349
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5852": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7306,
        7338
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 56,
      "value": "0x16EF"
    },
    "5855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5861": {
      "op": "SHL"
    },
    "5862": {
      "op": "SUB"
    },
    "5863": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7306,
        7324
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5864": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7306,
        7324
      ],
      "op": "AND",
      "path": "11"
    },
    "5865": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7325,
        7328
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5866": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7330,
        7337
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5867": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7306,
        7324
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14DA"
    },
    "5870": {
      "fn": "StakeLab.safeTransfer",
      "jump": "i",
      "offset": [
        7306,
        7338
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5871": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7306,
        7338
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5872": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7075,
        7355
      ],
      "op": "POP",
      "path": "11"
    },
    "5873": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7075,
        7355
      ],
      "op": "POP",
      "path": "11"
    },
    "5874": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7075,
        7355
      ],
      "op": "POP",
      "path": "11"
    },
    "5875": {
      "fn": "StakeLab.safeTransfer",
      "offset": [
        7075,
        7355
      ],
      "op": "POP",
      "path": "11"
    },
    "5876": {
      "fn": "StakeLab.safeTransfer",
      "jump": "o",
      "offset": [
        7075,
        7355
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5877": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        7980,
        8245
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5878": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8058,
        8066
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5880": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8058,
        8073
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5881": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8041,
        8055
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5883": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8083,
        8239
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5884": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8113,
        8119
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5885": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8106,
        8110
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5886": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8106,
        8119
      ],
      "op": "LT",
      "path": "11"
    },
    "5887": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8083,
        8239
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5888": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8083,
        8239
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x152C"
    },
    "5891": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8083,
        8239
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5892": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8181,
        8187
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 57
    },
    "5893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5899": {
      "op": "SHL"
    },
    "5900": {
      "op": "SUB"
    },
    "5901": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8187
      ],
      "op": "AND",
      "path": "11"
    },
    "5902": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5904": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8160,
        8164
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5905": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5906": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5907": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5908": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "LT",
      "path": "11"
    },
    "5909": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x171A"
    },
    "5912": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5913": {
      "dev": "Index out of range",
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "INVALID",
      "path": "11"
    },
    "5914": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5915": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5917": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5918": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5919": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5920": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5922": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5923": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5924": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5925": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xA"
    },
    "5927": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5928": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5929": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "MUL",
      "path": "11"
    },
    "5930": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8165
      ],
      "op": "ADD",
      "path": "11"
    },
    "5931": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8177
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5938": {
      "op": "SHL"
    },
    "5939": {
      "op": "SUB"
    },
    "5940": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8177
      ],
      "op": "AND",
      "path": "11"
    },
    "5941": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8187
      ],
      "op": "EQ",
      "path": "11"
    },
    "5942": {
      "branch": 85,
      "fn": "StakeLab.checkForToken",
      "offset": [
        8151,
        8187
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5943": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1771"
    },
    "5946": {
      "branch": 85,
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5947": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5949": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5950": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5954": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5956": {
      "op": "SHL"
    },
    "5957": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5958": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5959": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5961": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "ADD",
      "path": "11"
    },
    "5962": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5963": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5964": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5966": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "ADD",
      "path": "11"
    },
    "5967": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5968": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5969": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "SUB",
      "path": "11"
    },
    "5970": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5971": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5972": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "5974": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5975": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5976": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5978": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "ADD",
      "path": "11"
    },
    "5979": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5980": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C15"
    },
    "5983": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "5985": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5986": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "CODECOPY",
      "path": "11"
    },
    "5987": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5989": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "ADD",
      "path": "11"
    },
    "5990": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5991": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "POP",
      "path": "11"
    },
    "5992": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "POP",
      "path": "11"
    },
    "5993": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5995": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5996": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5997": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5998": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "SUB",
      "path": "11"
    },
    "5999": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6000": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6001": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8143,
        8228
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6002": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8121,
        8127
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 58,
      "value": "0x1"
    },
    "6004": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8121,
        8127
      ],
      "op": "ADD",
      "path": "11"
    },
    "6005": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8083,
        8239
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16FB"
    },
    "6008": {
      "fn": "StakeLab.checkForToken",
      "offset": [
        8083,
        8239
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6009": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2665,
        3047
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6010": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2761,
        2768
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6012": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2796,
        2800
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 59
    },
    "6013": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2796,
        2810
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "6015": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2796,
        2810
      ],
      "op": "ADD",
      "path": "11"
    },
    "6016": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2796,
        2810
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6017": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2788,
        2793
      ],
      "op": "DUP5",
      "path": "11"
    },
    "6018": {
      "branch": 86,
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2788,
        2810
      ],
      "op": "GT",
      "path": "11"
    },
    "6019": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2788,
        2835
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1790"
    },
    "6022": {
      "branch": 86,
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2788,
        2835
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6023": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2821,
        2825
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6024": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2821,
        2835
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "6026": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2821,
        2835
      ],
      "op": "ADD",
      "path": "11"
    },
    "6027": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2821,
        2835
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6028": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2788,
        2835
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1792"
    },
    "6031": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2788,
        2835
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6032": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2788,
        2835
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6033": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2813,
        2818
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6034": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2788,
        2835
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6035": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2780,
        2835
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "6036": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2780,
        2835
      ],
      "op": "POP",
      "path": "11"
    },
    "6037": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2857,
        2861
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6038": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2857,
        2869
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "6040": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2857,
        2869
      ],
      "op": "ADD",
      "path": "11"
    },
    "6041": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2857,
        2869
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6042": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2849,
        2854
      ],
      "op": "DUP5",
      "path": "11"
    },
    "6043": {
      "branch": 87,
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2849,
        2869
      ],
      "op": "GT",
      "path": "11"
    },
    "6044": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2849,
        2893
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6045": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2849,
        2893
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17A9"
    },
    "6048": {
      "branch": 87,
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2849,
        2893
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6049": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2849,
        2893
      ],
      "op": "POP",
      "path": "11"
    },
    "6050": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2879,
        2883
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6051": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2879,
        2893
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "6053": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2879,
        2893
      ],
      "op": "ADD",
      "path": "11"
    },
    "6054": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2879,
        2893
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6055": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2873,
        2876
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6056": {
      "branch": 88,
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2873,
        2893
      ],
      "op": "LT",
      "path": "11"
    },
    "6057": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2849,
        2893
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6058": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2845,
        2928
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6059": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2845,
        2928
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17B6"
    },
    "6062": {
      "branch": 88,
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2845,
        2928
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6063": {
      "op": "POP"
    },
    "6064": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2916,
        2917
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 60,
      "value": "0x0"
    },
    "6066": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2909,
        2917
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17D5"
    },
    "6069": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2909,
        2917
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6070": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2845,
        2928
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6071": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2947,
        2951
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6072": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2947,
        2959
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "6074": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2947,
        2959
      ],
      "op": "ADD",
      "path": "11"
    },
    "6075": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2947,
        2959
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6076": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2941,
        2944
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6077": {
      "branch": 89,
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2941,
        2959
      ],
      "op": "GT",
      "path": "11"
    },
    "6078": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2937,
        3013
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6079": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2937,
        3013
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17D0"
    },
    "6082": {
      "branch": 89,
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2937,
        3013
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6083": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2997,
        3002
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 61
    },
    "6084": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2982,
        2986
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6085": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2982,
        2994
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC0"
    },
    "6087": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2982,
        2994
      ],
      "op": "ADD",
      "path": "11"
    },
    "6088": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2982,
        2994
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6089": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2982,
        3002
      ],
      "op": "SUB",
      "path": "11"
    },
    "6090": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2975,
        3002
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6091": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2975,
        3002
      ],
      "op": "POP",
      "path": "11"
    },
    "6092": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2975,
        3002
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17D5"
    },
    "6095": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2975,
        3002
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6096": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2937,
        3013
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6097": {
      "op": "POP"
    },
    "6098": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        3029,
        3040
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 62
    },
    "6099": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        3029,
        3040
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6100": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        3029,
        3040
      ],
      "op": "SUB",
      "path": "11"
    },
    "6101": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2665,
        3047
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6102": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2665,
        3047
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "6103": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2665,
        3047
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "6104": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2665,
        3047
      ],
      "op": "POP",
      "path": "11"
    },
    "6105": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2665,
        3047
      ],
      "op": "POP",
      "path": "11"
    },
    "6106": {
      "fn": "StakeLab.getMultiplier",
      "offset": [
        2665,
        3047
      ],
      "op": "POP",
      "path": "11"
    },
    "6107": {
      "fn": "StakeLab.getMultiplier",
      "jump": "o",
      "offset": [
        2665,
        3047
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6108": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6109": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 63,
      "value": "0x40"
    },
    "6111": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6112": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6119": {
      "op": "SHL"
    },
    "6120": {
      "op": "SUB"
    },
    "6121": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6122": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6123": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "5"
    },
    "6124": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "6126": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6127": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "5"
    },
    "6128": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6129": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6130": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "5"
    },
    "6131": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "6133": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6134": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "5"
    },
    "6135": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6136": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "6138": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6139": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6140": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "5"
    },
    "6141": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6142": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6143": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6144": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6145": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6146": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6147": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6148": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SUB",
      "path": "5"
    },
    "6149": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6150": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6151": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "5"
    },
    "6152": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6153": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6154": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x84"
    },
    "6156": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6157": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6158": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "5"
    },
    "6159": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6160": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6161": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6162": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6164": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6165": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "5"
    },
    "6166": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6167": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6172": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6174": {
      "op": "SHL"
    },
    "6175": {
      "op": "SUB"
    },
    "6176": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "5"
    },
    "6177": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6184": {
      "op": "SHL"
    },
    "6185": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "OR",
      "path": "5"
    },
    "6186": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6187": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6188": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16EF"
    },
    "6191": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6192": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1005,
        1010
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6193": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1005,
        1010
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6194": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2967,
        3718
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6195": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3409
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6197": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1887"
    },
    "6200": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3440,
        3444
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6201": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6203": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6204": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6205": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6207": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "5"
    },
    "6208": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6210": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6211": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6212": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6214": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6215": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6216": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6218": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "5"
    },
    "6219": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "6252": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6253": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6254": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "POP",
      "path": "5"
    },
    "6255": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3420,
        3425
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6262": {
      "op": "SHL"
    },
    "6263": {
      "op": "SUB"
    },
    "6264": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "AND",
      "path": "5"
    },
    "6265": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18E3"
    },
    "6268": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6269": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6270": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6271": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6272": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "6277": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "AND",
      "path": "5"
    },
    "6278": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6279": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6280": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6281": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6282": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6283": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6284": {
      "op": "POP"
    },
    "6285": {
      "branch": 96,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3516
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6286": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x152C"
    },
    "6289": {
      "branch": 96,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6290": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3635,
        3645
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 64
    },
    "6291": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6292": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6294": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ADD",
      "path": "5"
    },
    "6295": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6296": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6297": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6299": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6300": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "LT",
      "path": "5"
    },
    "6301": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6302": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18A6"
    },
    "6305": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6306": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6308": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6309": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6310": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6311": {
      "op": "POP"
    },
    "6312": {
      "branch": 97,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6313": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x152C"
    },
    "6316": {
      "branch": 97,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6317": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6319": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6326": {
      "op": "SHL"
    },
    "6327": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6328": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6329": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6331": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "5"
    },
    "6332": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6333": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6334": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6336": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "5"
    },
    "6337": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6338": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6339": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "5"
    },
    "6340": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6341": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6342": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "6344": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6345": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6346": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6348": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "5"
    },
    "6349": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6350": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C59"
    },
    "6353": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2A"
    },
    "6355": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6356": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "6357": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6359": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "5"
    },
    "6360": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6361": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "5"
    },
    "6362": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "5"
    },
    "6363": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6365": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6366": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6367": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6368": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "5"
    },
    "6369": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6370": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6371": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6372": {
      "fn": "Address.functionCall",
      "offset": [
        3684,
        3696
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6374": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 65,
      "value": "0x18F2"
    },
    "6377": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3743
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6378": {
      "fn": "Address.functionCall",
      "offset": [
        3745,
        3749
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6379": {
      "fn": "Address.functionCall",
      "offset": [
        3751,
        3752
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6381": {
      "fn": "Address.functionCall",
      "offset": [
        3754,
        3766
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6382": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3736
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18FA"
    },
    "6385": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6386": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6387": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3767
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "6388": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "6389": {
      "op": "POP"
    },
    "6390": {
      "op": "POP"
    },
    "6391": {
      "op": "POP"
    },
    "6392": {
      "op": "POP"
    },
    "6393": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6394": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6395": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6397": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4792,
        4797
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 66
    },
    "6398": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4788
      ],
      "op": "SELFBALANCE",
      "path": "6"
    },
    "6399": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "LT",
      "path": "6"
    },
    "6400": {
      "branch": 90,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6401": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x193B"
    },
    "6404": {
      "branch": 90,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6405": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6407": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6414": {
      "op": "SHL"
    },
    "6415": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6416": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6417": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6419": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "6"
    },
    "6420": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6421": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6422": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6424": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "6"
    },
    "6425": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6426": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6427": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "6"
    },
    "6428": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6429": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6430": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x26"
    },
    "6432": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6433": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6434": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6436": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "6"
    },
    "6437": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6438": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BEF"
    },
    "6441": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x26"
    },
    "6443": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6444": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "6445": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6447": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "6"
    },
    "6448": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6449": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "6"
    },
    "6450": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "6"
    },
    "6451": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6453": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6454": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6455": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6456": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "6"
    },
    "6457": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6458": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6459": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6460": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 67,
      "value": "0x1944"
    },
    "6463": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4869,
        4875
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6464": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4868
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A56"
    },
    "6467": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6468": {
      "branch": 91,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6469": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1995"
    },
    "6472": {
      "branch": 91,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6473": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6475": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6476": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6477": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6481": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6483": {
      "op": "SHL"
    },
    "6484": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6485": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6486": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6490": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6491": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "6"
    },
    "6492": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6493": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1D"
    },
    "6495": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "6497": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6498": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "6"
    },
    "6499": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6500": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "6533": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "6535": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "6"
    },
    "6537": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6538": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6539": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6540": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6541": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6543": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SUB",
      "path": "6"
    },
    "6544": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "6546": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "6"
    },
    "6547": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6548": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6549": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6550": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4981,
        4993
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6552": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6554": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5028
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6561": {
      "op": "SHL"
    },
    "6562": {
      "op": "SUB"
    },
    "6563": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5033
      ],
      "op": "AND",
      "path": "6"
    },
    "6564": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5047
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6565": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5050,
        5054
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6566": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6568": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6569": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6570": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6571": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6572": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6573": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6574": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6576": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "6"
    },
    "6577": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6578": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6579": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6580": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6581": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6582": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6584": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6585": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "LT",
      "path": "6"
    },
    "6586": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19D4"
    },
    "6589": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6590": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6591": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6592": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6593": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6594": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6596": {
      "op": "NOT"
    },
    "6597": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6598": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6599": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "6"
    },
    "6600": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6601": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6603": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6604": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6605": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "6"
    },
    "6606": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6607": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "6"
    },
    "6608": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19B5"
    },
    "6611": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6612": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6613": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6615": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6616": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6618": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "6"
    },
    "6619": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "6622": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EXP",
      "path": "6"
    },
    "6623": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "6"
    },
    "6624": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6625": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "6"
    },
    "6626": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6627": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6628": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "6"
    },
    "6629": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6630": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6631": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6632": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "6"
    },
    "6633": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6634": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6635": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "OR",
      "path": "6"
    },
    "6636": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6637": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6638": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6639": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6640": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6641": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6642": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6643": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6644": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6645": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6646": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "6"
    },
    "6647": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6648": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6649": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6650": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6652": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6654": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6655": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6656": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6657": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "6"
    },
    "6658": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6659": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6660": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6661": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "GAS",
      "path": "6"
    },
    "6662": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "CALL",
      "path": "6"
    },
    "6663": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6664": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6665": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6666": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6667": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6668": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6669": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6671": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6672": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EQ",
      "path": "6"
    },
    "6673": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A36"
    },
    "6676": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6677": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6679": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6680": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6681": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6682": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "6684": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "6"
    },
    "6685": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "6687": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6688": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "6"
    },
    "6689": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "6"
    },
    "6690": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6691": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "6"
    },
    "6692": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6694": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6695": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6696": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6697": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "6699": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6701": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6703": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6704": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "6"
    },
    "6705": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "6706": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A3B"
    },
    "6709": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6710": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6711": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6713": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6714": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6715": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6716": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6717": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6718": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6719": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6720": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "6"
    },
    "6721": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 68,
      "value": "0x1A4B"
    },
    "6724": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5090,
        5097
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6725": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5099,
        5109
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6726": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5111,
        5123
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5089
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A5C"
    },
    "6730": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6731": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6732": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5065,
        5124
      ],
      "op": "SWAP8",
      "path": "6"
    },
    "6733": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "SWAP7",
      "path": "6"
    },
    "6734": {
      "op": "POP"
    },
    "6735": {
      "op": "POP"
    },
    "6736": {
      "op": "POP"
    },
    "6737": {
      "op": "POP"
    },
    "6738": {
      "op": "POP"
    },
    "6739": {
      "op": "POP"
    },
    "6740": {
      "op": "POP"
    },
    "6741": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6742": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6743": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "6744": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "6",
      "statement": 69
    },
    "6745": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6746": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6747": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6748": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6111,
        6836
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6749": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6226,
        6238
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "6751": {
      "branch": 92,
      "fn": "Address._verifyCallResult",
      "offset": [
        6254,
        6261
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6752": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6250,
        6830
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6753": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6250,
        6830
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A6B"
    },
    "6756": {
      "branch": 92,
      "fn": "Address._verifyCallResult",
      "offset": [
        6250,
        6830
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6757": {
      "op": "POP"
    },
    "6758": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6284,
        6294
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 70
    },
    "6759": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6277,
        6294
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D5"
    },
    "6762": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6277,
        6294
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6763": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6250,
        6830
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6764": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6395,
        6412
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6765": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6395,
        6412
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6766": {
      "branch": 93,
      "fn": "Address._verifyCallResult",
      "offset": [
        6395,
        6416
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6767": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6391,
        6820
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A7B"
    },
    "6770": {
      "branch": 93,
      "fn": "Address._verifyCallResult",
      "offset": [
        6391,
        6820
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6771": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6653,
        6663
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6772": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6647,
        6664
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6773": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6713,
        6728
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6774": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6700,
        6710
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6775": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6696,
        6698
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6777": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6692,
        6711
      ],
      "op": "ADD",
      "path": "6"
    },
    "6778": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6685,
        6729
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6779": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6602,
        6747
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6780": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6792,
        6804
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 71
    },
    "6781": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6783": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6784": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6788": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6790": {
      "op": "SHL"
    },
    "6791": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6792": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6793": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6795": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "ADD",
      "path": "6"
    },
    "6796": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6797": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6798": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6800": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "ADD",
      "path": "6"
    },
    "6801": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6802": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6803": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SUB",
      "path": "6"
    },
    "6804": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6805": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6806": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6807": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6808": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6809": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6810": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6811": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6812": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6814": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "ADD",
      "path": "6"
    },
    "6815": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6816": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "POP",
      "path": "6"
    },
    "6817": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6818": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6819": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6820": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6822": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "ADD",
      "path": "6"
    },
    "6823": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6824": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6825": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6826": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6827": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6829": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6830": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6831": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6832": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "LT",
      "path": "6"
    },
    "6833": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6834": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AC5"
    },
    "6837": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6838": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6839": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6840": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "ADD",
      "path": "6"
    },
    "6841": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6842": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6843": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6844": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "ADD",
      "path": "6"
    },
    "6845": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6846": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6848": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "ADD",
      "path": "6"
    },
    "6849": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AAD"
    },
    "6852": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6853": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6854": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "POP",
      "path": "6"
    },
    "6855": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "POP",
      "path": "6"
    },
    "6856": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "POP",
      "path": "6"
    },
    "6857": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "POP",
      "path": "6"
    },
    "6858": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6859": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "POP",
      "path": "6"
    },
    "6860": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6861": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6862": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "ADD",
      "path": "6"
    },
    "6863": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6864": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "6866": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "AND",
      "path": "6"
    },
    "6867": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6868": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6869": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AF2"
    },
    "6872": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6873": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6874": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6875": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SUB",
      "path": "6"
    },
    "6876": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6877": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6878": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "6880": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6881": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6883": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SUB",
      "path": "6"
    },
    "6884": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "6887": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "EXP",
      "path": "6"
    },
    "6888": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SUB",
      "path": "6"
    },
    "6889": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "NOT",
      "path": "6"
    },
    "6890": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "AND",
      "path": "6"
    },
    "6891": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6892": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6893": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6895": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "ADD",
      "path": "6"
    },
    "6896": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6897": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "POP",
      "path": "6"
    },
    "6898": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6899": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "POP",
      "path": "6"
    },
    "6900": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6901": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "POP",
      "path": "6"
    },
    "6902": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "POP",
      "path": "6"
    },
    "6903": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "POP",
      "path": "6"
    },
    "6904": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6906": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6907": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6908": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6909": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SUB",
      "path": "6"
    },
    "6910": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6911": {
      "fn": "Address._verifyCallResult",
      "offset": [
        6785,
        6805
      ],
      "op": "REVERT",
      "path": "6"
    },
    "6912": {
      "op": "JUMPDEST"
    },
    "6913": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6915": {
      "op": "MLOAD"
    },
    "6916": {
      "op": "DUP1"
    },
    "6917": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "6920": {
      "op": "ADD"
    },
    "6921": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6923": {
      "op": "MSTORE"
    },
    "6924": {
      "op": "DUP1"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6933": {
      "op": "SHL"
    },
    "6934": {
      "op": "SUB"
    },
    "6935": {
      "op": "AND"
    },
    "6936": {
      "op": "DUP2"
    },
    "6937": {
      "op": "MSTORE"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6940": {
      "op": "ADD"
    },
    "6941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6943": {
      "op": "DUP2"
    },
    "6944": {
      "op": "MSTORE"
    },
    "6945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6947": {
      "op": "ADD"
    },
    "6948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6950": {
      "op": "DUP2"
    },
    "6951": {
      "op": "MSTORE"
    },
    "6952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6954": {
      "op": "ADD"
    },
    "6955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6957": {
      "op": "DUP2"
    },
    "6958": {
      "op": "MSTORE"
    },
    "6959": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6961": {
      "op": "ADD"
    },
    "6962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6964": {
      "op": "DUP2"
    },
    "6965": {
      "op": "MSTORE"
    },
    "6966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6968": {
      "op": "ADD"
    },
    "6969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6971": {
      "op": "DUP2"
    },
    "6972": {
      "op": "MSTORE"
    },
    "6973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6975": {
      "op": "ADD"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6978": {
      "op": "DUP2"
    },
    "6979": {
      "op": "MSTORE"
    },
    "6980": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6982": {
      "op": "ADD"
    },
    "6983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6985": {
      "op": "DUP2"
    },
    "6986": {
      "op": "MSTORE"
    },
    "6987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6989": {
      "op": "ADD"
    },
    "6990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6992": {
      "op": "DUP2"
    },
    "6993": {
      "op": "MSTORE"
    },
    "6994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6996": {
      "op": "ADD"
    },
    "6997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7005": {
      "op": "SHL"
    },
    "7006": {
      "op": "SUB"
    },
    "7007": {
      "op": "AND"
    },
    "7008": {
      "op": "DUP2"
    },
    "7009": {
      "op": "MSTORE"
    },
    "7010": {
      "op": "POP"
    },
    "7011": {
      "op": "SWAP1"
    },
    "7012": {
      "op": "JUMP"
    },
    "7013": {
      "op": "JUMPDEST"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7016": {
      "op": "MLOAD"
    },
    "7017": {
      "op": "DUP1"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7020": {
      "op": "ADD"
    },
    "7021": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7023": {
      "op": "MSTORE"
    },
    "7024": {
      "op": "DUP1"
    },
    "7025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7027": {
      "op": "DUP2"
    },
    "7028": {
      "op": "MSTORE"
    },
    "7029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7031": {
      "op": "ADD"
    },
    "7032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7034": {
      "op": "DUP2"
    },
    "7035": {
      "op": "MSTORE"
    },
    "7036": {
      "op": "POP"
    },
    "7037": {
      "op": "SWAP1"
    },
    "7038": {
      "op": "JUMP"
    }
  },
  "sha1": "edc834f19ca469ccc74b7b5c9d860734ec101333",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\nimport '@openzeppelin/contracts/token/ERC20/SafeERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\ninterface IERC20Ext is IERC20 {\n    function decimals() external returns (uint);\n}\n\n// The goal of this farm is to allow a stake dummyToken earn anything model\n// In a flip of a traditional farm, this contract only accepts dummyToken as the staking token\n// Each new pool added is a new reward token, each with its own start times\n// end times, and rewards per second.\ncontract StakeLab is Ownable {\n    using SafeERC20 for IERC20;\n\n    // Info of each user.\n    struct UserInfo {\n        uint256 amount;     // How many tokens the user has provided.\n        uint256 rewardDebt; // Reward debt. See explanation below.\n    }\n\n    // Info of each pool.\n    struct PoolInfo {\n        IERC20 RewardToken;       // Address of reward token contract.\n        uint256 RewardPerSecond;   // reward token per second for this pool\n        uint256 TokenPrecision; // The precision factor used for calculations, dependent on a tokens decimals\n        uint256 dummyTokenStakedAmount; // # of dummyToken allocated to this pool\n        uint256 lastRewardTime;  // Last block time that reward distribution occurs.\n        uint256 accRewardPerShare; // Accumulated reward per share, times the pools token precision. See below.\n        uint256 endTime; // end time of pool\n        uint256 startTime; // start time of pool\n        uint256 userLimitEndTime;\n        address protocolOwnerAddress; // this address is the owner of the protocol corresponding to the reward token, used for emergency withdraw to them only\n    }\n\n    IERC20 public immutable dummyToken;\n    uint public baseUserLimitTime = 2 days;\n    uint public baseUserLimit = 0;\n\n    // Info of each pool.\n    PoolInfo[] public poolInfo;\n    // Info of each user that stakes tokens.\n    mapping (uint256 => mapping (address => UserInfo)) public userInfo;\n\n    event AdminTokenRecovery(address tokenRecovered, uint256 amount);\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event SetRewardPerSecond(uint _pid, uint256 _gemsPerSecond);\n\n    constructor(IERC20 _dummyToken) public {\n        dummyToken = _dummyToken;\n    }\n\n\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    // Return reward multiplier over the given _from to _to block.\n    function getMultiplier(uint256 _from, uint256 _to, PoolInfo memory pool) internal pure returns (uint256) {\n        _from = _from > pool.startTime ? _from : pool.startTime;\n        if (_from > pool.endTime || _to < pool.startTime) {\n            return 0;\n        }\n        if (_to > pool.endTime) {\n            return pool.endTime - _from;\n        }\n        return _to - _from;\n    }\n\n    // View function to see pending BOOs on frontend.\n    function pendingReward(uint256 _pid, address _user) external view returns (uint256) {\n        PoolInfo memory pool = poolInfo[_pid];\n        UserInfo memory user = userInfo[_pid][_user];\n        uint256 accRewardPerShare = pool.accRewardPerShare;\n\n        if (block.timestamp > pool.lastRewardTime && pool.dummyTokenStakedAmount != 0) {\n            uint256 multiplier = getMultiplier(pool.lastRewardTime, block.timestamp, pool);\n            uint256 reward = multiplier * pool.RewardPerSecond;\n            accRewardPerShare += (reward * pool.TokenPrecision) / pool.dummyTokenStakedAmount;\n        }\n        return (user.amount * accRewardPerShare / pool.TokenPrecision) - user.rewardDebt;\n    }\n\n    // Update reward variables for all pools. Be careful of gas spending!\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function updatePool(uint256 _pid) internal {\n        PoolInfo storage pool = poolInfo[_pid];\n        if (block.timestamp <= pool.lastRewardTime) {\n            return;\n        }\n\n        if (pool.dummyTokenStakedAmount == 0) {\n            pool.lastRewardTime = block.timestamp;\n            return;\n        }\n        uint256 multiplier = getMultiplier(pool.lastRewardTime, block.timestamp, pool);\n        uint256 reward = multiplier * pool.RewardPerSecond;\n\n        pool.accRewardPerShare += reward * pool.TokenPrecision / pool.dummyTokenStakedAmount;\n        pool.lastRewardTime = block.timestamp;\n    }\n\n    // Deposit tokens.\n    function deposit(uint256 _pid, uint256 _amount) external {\n\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        if(baseUserLimit > 0 && block.timestamp < pool.userLimitEndTime) {\n            require(user.amount + _amount <= baseUserLimit, \"deposit: user has hit deposit cap\");\n        }\n\n        updatePool(_pid);\n\n        uint256 pending = (user.amount * pool.accRewardPerShare / pool.TokenPrecision) - user.rewardDebt;\n\n        user.amount += _amount;\n        pool.dummyTokenStakedAmount += _amount;\n        user.rewardDebt = user.amount * pool.accRewardPerShare / pool.TokenPrecision;\n\n        if(pending > 0) {\n            safeTransfer(pool.RewardToken, msg.sender, pending);\n        }\n        dummyToken.safeTransferFrom(address(msg.sender), address(this), _amount);\n\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw tokens.\n    function withdraw(uint256 _pid, uint256 _amount) external {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        require(user.amount >= _amount, \"withdraw: not good\");\n\n        updatePool(_pid);\n\n        uint256 pending = (user.amount * pool.accRewardPerShare / pool.TokenPrecision) - user.rewardDebt;\n\n        user.amount -= _amount;\n        pool.dummyTokenStakedAmount -= _amount;\n        user.rewardDebt = user.amount * pool.accRewardPerShare / pool.TokenPrecision;\n\n        if(pending > 0) {\n            safeTransfer(pool.RewardToken, msg.sender, pending);\n        }\n\n        safeTransfer(dummyToken, address(msg.sender), _amount);\n\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) external {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        uint oldUserAmount = user.amount;\n        pool.dummyTokenStakedAmount -= user.amount;\n        user.amount = 0;\n        user.rewardDebt = 0;\n\n        dummyToken.safeTransfer(address(msg.sender), oldUserAmount);\n        emit EmergencyWithdraw(msg.sender, _pid, oldUserAmount);\n\n    }\n\n    // Safe erc20 transfer function, just in case if rounding error causes pool to not have enough reward tokens.\n    function safeTransfer(IERC20 token, address _to, uint256 _amount) internal {\n        uint256 bal = token.balanceOf(address(this));\n        if (_amount > bal) {\n            token.safeTransfer(_to, bal);\n        } else {\n            token.safeTransfer(_to, _amount);\n        }\n    }\n\n    // Admin functions\n\n    function changeEndTime(uint _pid, uint32 addSeconds) external onlyOwner {\n        poolInfo[_pid].endTime += addSeconds;\n    }\n\n    function stopReward(uint _pid) external onlyOwner {\n        poolInfo[_pid].endTime = block.number;\n    }\n\n    function changePoolUserLimitEndTime(uint _pid, uint _time) external onlyOwner {\n        poolInfo[_pid].userLimitEndTime = _time;\n    }\n\n    function changeUserLimit(uint _limit) external onlyOwner {\n        baseUserLimit = _limit;\n    }\n\n    function changeBaseUserLimitTime(uint _time) external onlyOwner {\n        baseUserLimitTime = _time;\n    }\n\n    function checkForToken(IERC20 _Token) private view {\n        uint256 length = poolInfo.length;\n        for (uint256 _pid = 0; _pid < length; _pid++) {\n            require(poolInfo[_pid].RewardToken != _Token, \"checkForToken: reward token provided\");\n        }\n    }\n\n    function recoverWrongTokens(address _tokenAddress) external onlyOwner {\n        require(_tokenAddress != address(dummyToken), \"recoverWrongTokens: Cannot be dummyToken\");\n        checkForToken(IERC20(_tokenAddress));\n\n        uint bal = IERC20(_tokenAddress).balanceOf(address(this));\n        IERC20(_tokenAddress).safeTransfer(address(msg.sender), bal);\n\n        emit AdminTokenRecovery(_tokenAddress, bal);\n    }\n\n    function emergencyRewardWithdraw(uint _pid, uint256 _amount) external onlyOwner {\n        poolInfo[_pid].RewardToken.safeTransfer(poolInfo[_pid].protocolOwnerAddress, _amount);\n    }\n\n    // Add a new token to the pool. Can only be called by the owner.\n    function add(uint _rewardPerSecond, IERC20Ext _Token, uint _startTime, uint _endTime, address _protocolOwner) external onlyOwner {\n\n        checkForToken(_Token); // ensure you cant add duplicate pools\n\n        uint lastRewardTime = block.timestamp > _startTime ? block.timestamp : _startTime;\n        uint decimalsRewardToken = _Token.decimals();\n        require(decimalsRewardToken < 30, \"Token has way too many decimals\");\n        uint precision = 10**(30 - decimalsRewardToken);\n\n        poolInfo.push(PoolInfo({\n            RewardToken: _Token,\n            RewardPerSecond: _rewardPerSecond,\n            TokenPrecision: precision,\n            dummyTokenStakedAmount: 0,\n            startTime: _startTime,\n            endTime: _endTime,\n            lastRewardTime: lastRewardTime,\n            accRewardPerShare: 0,\n            protocolOwnerAddress: _protocolOwner,\n            userLimitEndTime: lastRewardTime + baseUserLimitTime\n        }));\n    }\n\n    // Update the given pool's reward per second. Can only be called by the owner.\n    function setRewardPerSecond(uint256 _pid, uint256 _rewardPerSecond) external onlyOwner {\n\n        updatePool(_pid);\n\n        poolInfo[_pid].RewardPerSecond = _rewardPerSecond;\n\n        emit SetRewardPerSecond(_pid, _rewardPerSecond);\n    }\n\n}\n",
  "sourceMap": "597:9614:11:-:0;;;1807:6;1775:38;;1847:1;1819:29;;2412:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2412:80:11;882:17:1;902:12;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:1;-1:-1:-1;;;;;924:18:1;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:1;957:43;;924:6;;957:43;-1:-1:-1;2461:24:11;;-1:-1:-1;;;;;;2461:24:11;;;597:9614;;598:104:0;685:10;598:104;:::o;597:9614:11:-;;;;;;;;;;;;",
  "sourcePath": "contracts/StakeLab.sol",
  "type": "contract"
}