{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_endBlock",
          "type": "uint256"
        }
      ],
      "name": "EndBlock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "addReferral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "getInvitees",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "getReferrals",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "mySquad",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "refMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardEndBlock",
          "type": "uint256"
        }
      ],
      "name": "setEnd",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewardCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/GSN/Context.sol",
    "1": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol",
    "10": "contracts/HopeNobt.sol",
    "2": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/math/SafeMath.sol",
    "3": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/ERC20.sol",
    "4": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/HopeNobt.sol",
    "exportedSymbols": {
      "HopeNobt": [
        4133
      ]
    },
    "id": 4134,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3584,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:10"
      },
      {
        "absolutePath": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3585,
        "nodeType": "ImportDirective",
        "scope": 4134,
        "sourceUnit": 5779,
        "src": "59:55:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/seins/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3586,
        "nodeType": "ImportDirective",
        "scope": 4134,
        "sourceUnit": 5198,
        "src": "115:52:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "486f7065204e6f6274",
                "id": 3588,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "197:11:10",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_e5cb52ac6a8ff26e36a4bc7eb1dcccc2324ee9773a8865df186b146bdc39a71b",
                  "typeString": "literal_string \"Hope Nobt\""
                },
                "value": "Hope Nobt"
              },
              {
                "argumentTypes": null,
                "hexValue": "684e4f4254",
                "id": 3589,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "210:7:10",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_55917a769c870c8b94cfdc5277bf03e0fdcac5309d5f571e3ae69f8933230dea",
                  "typeString": "literal_string \"hNOBT\""
                },
                "value": "hNOBT"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 3587,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5778,
              "src": "191:5:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$5778",
                "typeString": "contract ERC20"
              }
            },
            "id": 3590,
            "nodeType": "InheritanceSpecifier",
            "src": "191:27:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3591,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5197,
              "src": "220:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$5197",
                "typeString": "contract Ownable"
              }
            },
            "id": 3592,
            "nodeType": "InheritanceSpecifier",
            "src": "220:7:10"
          }
        ],
        "contractDependencies": [
          5197,
          5275,
          5778,
          6014
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4133,
        "linearizedBaseContracts": [
          4133,
          5197,
          5778,
          5275,
          6014
        ],
        "name": "HopeNobt",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3594,
            "mutability": "mutable",
            "name": "transferRewardBase",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4133,
            "src": "234:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3593,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "234:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3596,
            "mutability": "mutable",
            "name": "maxReward",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4133,
            "src": "266:17:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3595,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3598,
            "mutability": "mutable",
            "name": "maxRewardCount",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4133,
            "src": "289:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3597,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "289:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3600,
            "mutability": "mutable",
            "name": "rewardEndBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4133,
            "src": "317:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3599,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "317:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3602,
            "mutability": "mutable",
            "name": "rewardAmount",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4133,
            "src": "345:20:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3601,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "345:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3604,
            "mutability": "mutable",
            "name": "maxRefLevel",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4133,
            "src": "371:19:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3603,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "371:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3608,
            "name": "EndBlock",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3606,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_endBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3608,
                  "src": "412:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "411:19:10"
            },
            "src": "397:34:10"
          },
          {
            "canonicalName": "HopeNobt.UserInfo",
            "id": 3621,
            "members": [
              {
                "constant": false,
                "id": 3612,
                "mutability": "mutable",
                "name": "rewards",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 3621,
                "src": "464:35:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 3611,
                  "keyType": {
                    "id": 3609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "472:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "464:27:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueType": {
                    "id": 3610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3614,
                "mutability": "mutable",
                "name": "rewardCount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 3621,
                "src": "509:19:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3613,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "509:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3617,
                "mutability": "mutable",
                "name": "invitees",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 3621,
                "src": "538:18:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 3615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3616,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "538:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3620,
                "mutability": "mutable",
                "name": "referrals",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 3621,
                "src": "566:19:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 3618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3619,
                  "length": null,
                  "nodeType": "ArrayTypeName",
                  "src": "566:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nodeType": "StructDefinition",
            "scope": 4133,
            "src": "438:154:10",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2643dd22",
            "id": 3625,
            "mutability": "mutable",
            "name": "uInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4133,
            "src": "598:41:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$3621_storage_$",
              "typeString": "mapping(address => struct HopeNobt.UserInfo)"
            },
            "typeName": {
              "id": 3624,
              "keyType": {
                "id": 3622,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "606:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "598:28:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$3621_storage_$",
                "typeString": "mapping(address => struct HopeNobt.UserInfo)"
              },
              "valueType": {
                "contractScope": null,
                "id": 3623,
                "name": "UserInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 3621,
                "src": "617:8:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserInfo_$3621_storage_ptr",
                  "typeString": "struct HopeNobt.UserInfo"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "64d713e2",
            "id": 3629,
            "mutability": "mutable",
            "name": "refMap",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4133,
            "src": "645:41:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 3628,
              "keyType": {
                "id": 3626,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "653:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "645:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 3627,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "664:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3681,
              "nodeType": "Block",
              "src": "719:252:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3632,
                      "name": "transferRewardBase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3594,
                      "src": "729:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 3633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "750:3:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 3634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "757:2:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 3637,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5354,
                                    "src": "771:8:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 3638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "771:10:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 3636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "763:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 3635,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "763:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "763:19:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "757:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3641,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "756:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "750:33:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "729:54:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3644,
                  "nodeType": "ExpressionStatement",
                  "src": "729:54:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3645,
                      "name": "maxReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3596,
                      "src": "793:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3230303030303030",
                        "id": 3646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "805:8:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000_by_1",
                          "typeString": "int_const 20000000"
                        },
                        "value": "20000000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 3647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "817:2:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 3650,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5354,
                                    "src": "831:8:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 3651,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "831:10:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 3649,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "823:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 3648,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "823:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 3652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "823:19:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "817:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3654,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "816:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "805:38:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "793:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3657,
                  "nodeType": "ExpressionStatement",
                  "src": "793:50:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3658,
                      "name": "maxRewardCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3598,
                      "src": "853:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 3659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "870:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "853:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3661,
                  "nodeType": "ExpressionStatement",
                  "src": "853:18:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3662,
                      "name": "maxRefLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3604,
                      "src": "881:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3132",
                      "id": 3663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "895:2:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "881:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3665,
                  "nodeType": "ExpressionStatement",
                  "src": "881:16:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3667,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "913:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "913:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3135303030303030",
                          "id": 3669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "925:8:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15000000_by_1",
                            "typeString": "int_const 15000000"
                          },
                          "value": "15000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 3670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "937:2:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 3673,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5354,
                                      "src": "951:8:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                        "typeString": "function () view returns (uint8)"
                                      }
                                    },
                                    "id": 3674,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "951:10:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 3672,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "943:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 3671,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "943:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 3675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "943:19:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "937:25:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3677,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "936:27:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "925:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3666,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5654,
                      "src": "907:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "907:57:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3680,
                  "nodeType": "ExpressionStatement",
                  "src": "907:57:10"
                }
              ]
            },
            "documentation": null,
            "id": 3682,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "704:7:10"
            },
            "returnParameters": {
              "id": 3631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:0:10"
            },
            "scope": 4133,
            "src": "693:278:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3697,
              "nodeType": "Block",
              "src": "1122:36:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3693,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3685,
                        "src": "1138:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3694,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3687,
                        "src": "1143:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3692,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5654,
                      "src": "1132:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:19:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3696,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:19:10"
                }
              ]
            },
            "documentation": {
              "id": 3683,
              "nodeType": "StructuredDocumentation",
              "src": "977:79:10",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner."
            },
            "functionSelector": "40c10f19",
            "id": 3698,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3690,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3689,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5146,
                  "src": "1112:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1112:9:10"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3685,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3698,
                  "src": "1075:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3687,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3698,
                  "src": "1088:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1088:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1074:30:10"
            },
            "returnParameters": {
              "id": 3691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1122:0:10"
            },
            "scope": 4133,
            "src": "1061:97:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5399
            ],
            "body": {
              "id": 3730,
              "nodeType": "Block",
              "src": "1256:189:10",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3710,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3700,
                        "src": "1285:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3711,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3702,
                        "src": "1296:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3708,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5778,
                        "src": "1270:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$5778_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 3709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5399,
                      "src": "1270:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1270:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3727,
                  "nodeType": "IfStatement",
                  "src": "1266:152:10",
                  "trueBody": {
                    "id": 3726,
                    "nodeType": "Block",
                    "src": "1305:113:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3714,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6002,
                                "src": "1330:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 3715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1330:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3716,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3700,
                              "src": "1344:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3717,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3702,
                              "src": "1355:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3713,
                            "name": "sendReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4038,
                            "src": "1319:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 3718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1319:43:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3719,
                        "nodeType": "ExpressionStatement",
                        "src": "1319:43:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3721,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6002,
                                "src": "1383:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 3722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1383:12:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3723,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3700,
                              "src": "1397:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3720,
                            "name": "setRef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4132,
                            "src": "1376:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 3724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1376:31:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3725,
                        "nodeType": "ExpressionStatement",
                        "src": "1376:31:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1434:4:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3707,
                  "id": 3729,
                  "nodeType": "Return",
                  "src": "1427:11:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a9059cbb",
            "id": 3731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3704,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1232:8:10"
            },
            "parameters": {
              "id": 3703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3700,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3731,
                  "src": "1182:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3702,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3731,
                  "src": "1201:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1181:35:10"
            },
            "returnParameters": {
              "id": 3707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3706,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3731,
                  "src": "1250:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3705,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1249:6:10"
            },
            "scope": 4133,
            "src": "1164:281:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5476
            ],
            "body": {
              "id": 3764,
              "nodeType": "Block",
              "src": "1563:189:10",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3745,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3733,
                        "src": "1596:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3746,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3735,
                        "src": "1604:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3747,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3737,
                        "src": "1615:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3743,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5778,
                        "src": "1577:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$5778_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 3744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5476,
                      "src": "1577:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 3748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1577:45:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3761,
                  "nodeType": "IfStatement",
                  "src": "1573:152:10",
                  "trueBody": {
                    "id": 3760,
                    "nodeType": "Block",
                    "src": "1624:101:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3750,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3733,
                              "src": "1649:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3751,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "1657:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3752,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3737,
                              "src": "1668:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3749,
                            "name": "sendReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4038,
                            "src": "1638:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) returns (bool)"
                            }
                          },
                          "id": 3753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1638:37:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3754,
                        "nodeType": "ExpressionStatement",
                        "src": "1638:37:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3756,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3733,
                              "src": "1696:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3757,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3735,
                              "src": "1704:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3755,
                            "name": "setRef",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4132,
                            "src": "1689:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 3758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1689:25:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3759,
                        "nodeType": "ExpressionStatement",
                        "src": "1689:25:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1741:4:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3742,
                  "id": 3763,
                  "nodeType": "Return",
                  "src": "1734:11:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "23b872dd",
            "id": 3765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3739,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1539:8:10"
            },
            "parameters": {
              "id": 3738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3733,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3765,
                  "src": "1473:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3735,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3765,
                  "src": "1489:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1489:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3737,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3765,
                  "src": "1508:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1472:51:10"
            },
            "returnParameters": {
              "id": 3742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3741,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3765,
                  "src": "1557:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3740,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1556:6:10"
            },
            "scope": 4133,
            "src": "1451:301:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3780,
              "nodeType": "Block",
              "src": "1816:89:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3772,
                      "name": "rewardEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3600,
                      "src": "1826:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3773,
                      "name": "_rewardEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3767,
                      "src": "1843:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1826:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3775,
                  "nodeType": "ExpressionStatement",
                  "src": "1826:32:10"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3777,
                        "name": "_rewardEndBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3767,
                        "src": "1882:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3776,
                      "name": "EndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3608,
                      "src": "1873:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1873:25:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3779,
                  "nodeType": "EmitStatement",
                  "src": "1868:30:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7f498ffc",
            "id": 3781,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3770,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3769,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5146,
                  "src": "1806:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1806:9:10"
              }
            ],
            "name": "setEnd",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3767,
                  "mutability": "mutable",
                  "name": "_rewardEndBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3781,
                  "src": "1774:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1774:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1773:25:10"
            },
            "returnParameters": {
              "id": 3771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1816:0:10"
            },
            "scope": 4133,
            "src": "1758:147:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3795,
              "nodeType": "Block",
              "src": "1986:44:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3791,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3783,
                        "src": "2003:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3792,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3785,
                        "src": "2012:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3790,
                      "name": "setRef",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4132,
                      "src": "1996:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:27:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3794,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:27:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0b5c3f87",
            "id": 3796,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3788,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3787,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5146,
                  "src": "1976:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1976:9:10"
              }
            ],
            "name": "addReferral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3783,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3796,
                  "src": "1932:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1932:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3785,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3796,
                  "src": "1949:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1931:37:10"
            },
            "returnParameters": {
              "id": 3789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1986:0:10"
            },
            "scope": 4133,
            "src": "1911:119:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3809,
              "nodeType": "Block",
              "src": "2111:46:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3804,
                        "name": "uInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3625,
                        "src": "2128:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$3621_storage_$",
                          "typeString": "mapping(address => struct HopeNobt.UserInfo storage ref)"
                        }
                      },
                      "id": 3806,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3805,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3798,
                        "src": "2134:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2128:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$3621_storage",
                        "typeString": "struct HopeNobt.UserInfo storage ref"
                      }
                    },
                    "id": 3807,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "referrals",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3620,
                    "src": "2128:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3803,
                  "id": 3808,
                  "nodeType": "Return",
                  "src": "2121:29:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "41a0894d",
            "id": 3810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReferrals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3798,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3810,
                  "src": "2058:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2057:15:10"
            },
            "returnParameters": {
              "id": 3803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3802,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3810,
                  "src": "2094:16:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3800,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2094:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3801,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2094:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2093:18:10"
            },
            "scope": 4133,
            "src": "2036:121:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3823,
              "nodeType": "Block",
              "src": "2237:45:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3818,
                        "name": "uInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3625,
                        "src": "2254:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$3621_storage_$",
                          "typeString": "mapping(address => struct HopeNobt.UserInfo storage ref)"
                        }
                      },
                      "id": 3820,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3819,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "2260:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2254:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$3621_storage",
                        "typeString": "struct HopeNobt.UserInfo storage ref"
                      }
                    },
                    "id": 3821,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "invitees",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3617,
                    "src": "2254:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3817,
                  "id": 3822,
                  "nodeType": "Return",
                  "src": "2247:28:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e9881a5e",
            "id": 3824,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInvitees",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3812,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3824,
                  "src": "2184:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2184:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2183:15:10"
            },
            "returnParameters": {
              "id": 3817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3816,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3824,
                  "src": "2220:16:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3814,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2220:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3815,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2220:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2219:18:10"
            },
            "scope": 4133,
            "src": "2163:119:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3837,
              "nodeType": "Block",
              "src": "2382:45:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3834,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3826,
                        "src": "2414:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3833,
                      "name": "selectInvitees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3922,
                      "src": "2399:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 3835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2399:21:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 3832,
                  "id": 3836,
                  "nodeType": "Return",
                  "src": "2392:28:10"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "90a634aa",
            "id": 3838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mySquad",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3826,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3838,
                  "src": "2305:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2304:15:10"
            },
            "returnParameters": {
              "id": 3832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3829,
                  "mutability": "mutable",
                  "name": "totalCount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3838,
                  "src": "2341:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2341:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3831,
                  "mutability": "mutable",
                  "name": "totalAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3838,
                  "src": "2361:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2361:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2340:41:10"
            },
            "scope": 4133,
            "src": "2288:139:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3921,
              "nodeType": "Block",
              "src": "2536:577:10",
              "statements": [
                {
                  "assignments": [
                    3851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3851,
                      "mutability": "mutable",
                      "name": "_invitees",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3921,
                      "src": "2546:26:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3849,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2546:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3850,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2546:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3856,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3852,
                        "name": "uInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3625,
                        "src": "2575:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$3621_storage_$",
                          "typeString": "mapping(address => struct HopeNobt.UserInfo storage ref)"
                        }
                      },
                      "id": 3854,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3853,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3840,
                        "src": "2581:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2575:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$3621_storage",
                        "typeString": "struct HopeNobt.UserInfo storage ref"
                      }
                    },
                    "id": 3855,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "invitees",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3617,
                    "src": "2575:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2546:50:10"
                },
                {
                  "assignments": [
                    3858
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3858,
                      "mutability": "mutable",
                      "name": "_total_count",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3921,
                      "src": "2606:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3857,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2606:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3859,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2606:20:10"
                },
                {
                  "assignments": [
                    3861
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3861,
                      "mutability": "mutable",
                      "name": "_total_amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3921,
                      "src": "2636:21:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3860,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2636:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3862,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2636:21:10"
                },
                {
                  "body": {
                    "id": 3915,
                    "nodeType": "Block",
                    "src": "2721:340:10",
                    "statements": [
                      {
                        "assignments": [
                          3875
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3875,
                            "mutability": "mutable",
                            "name": "u",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 3915,
                            "src": "2735:9:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3874,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2735:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 3879,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3876,
                            "name": "_invitees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3851,
                            "src": "2747:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 3878,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3877,
                            "name": "idx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3864,
                            "src": "2757:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2747:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2735:26:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3880,
                            "name": "_total_count",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3858,
                            "src": "2775:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 3881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2791:1:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2775:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3883,
                        "nodeType": "ExpressionStatement",
                        "src": "2775:17:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 3884,
                            "name": "_total_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3861,
                            "src": "2806:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3886,
                                "name": "u",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3875,
                                "src": "2833:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3885,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5378,
                              "src": "2823:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 3887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2823:12:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2806:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3889,
                        "nodeType": "ExpressionStatement",
                        "src": "2806:29:10"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 3890,
                                  "name": "uInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3625,
                                  "src": "2853:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$3621_storage_$",
                                    "typeString": "mapping(address => struct HopeNobt.UserInfo storage ref)"
                                  }
                                },
                                "id": 3892,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 3891,
                                  "name": "u",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3875,
                                  "src": "2859:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2853:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$3621_storage",
                                  "typeString": "struct HopeNobt.UserInfo storage ref"
                                }
                              },
                              "id": 3893,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "invitees",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3617,
                              "src": "2853:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2853:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2880:1:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2853:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 3914,
                        "nodeType": "IfStatement",
                        "src": "2849:202:10",
                        "trueBody": {
                          "id": 3913,
                          "nodeType": "Block",
                          "src": "2883:168:10",
                          "statements": [
                            {
                              "assignments": [
                                3898,
                                3900
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3898,
                                  "mutability": "mutable",
                                  "name": "_count",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 3913,
                                  "src": "2902:14:10",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3897,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2902:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 3900,
                                  "mutability": "mutable",
                                  "name": "_amount",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 3913,
                                  "src": "2918:15:10",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3899,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2918:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3904,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3902,
                                    "name": "u",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3875,
                                    "src": "2952:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3901,
                                  "name": "selectInvitees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3922,
                                  "src": "2937:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256,uint256)"
                                  }
                                },
                                "id": 3903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2937:17:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                                  "typeString": "tuple(uint256,uint256)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2901:53:10"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 3905,
                                  "name": "_total_count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3858,
                                  "src": "2972:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 3906,
                                  "name": "_count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3898,
                                  "src": "2988:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2972:22:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3908,
                              "nodeType": "ExpressionStatement",
                              "src": "2972:22:10"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 3911,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 3909,
                                  "name": "_total_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3861,
                                  "src": "3012:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 3910,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3900,
                                  "src": "3029:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3012:24:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3912,
                              "nodeType": "ExpressionStatement",
                              "src": "3012:24:10"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3867,
                      "name": "idx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3864,
                      "src": "2689:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3868,
                        "name": "_invitees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3851,
                        "src": "2695:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 3869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2695:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2689:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3916,
                  "initializationExpression": {
                    "assignments": [
                      3864
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3864,
                        "mutability": "mutable",
                        "name": "idx",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 3916,
                        "src": "2672:11:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3863,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2672:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 3866,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2686:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2672:15:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 3872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2713:6:10",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 3871,
                        "name": "idx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3864,
                        "src": "2713:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3873,
                    "nodeType": "ExpressionStatement",
                    "src": "2713:6:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "2667:394:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 3917,
                        "name": "_total_count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3858,
                        "src": "3078:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3918,
                        "name": "_total_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3861,
                        "src": "3092:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 3919,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3077:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 3846,
                  "id": 3920,
                  "nodeType": "Return",
                  "src": "3070:36:10"
                }
              ]
            },
            "documentation": null,
            "id": 3922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selectInvitees",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3840,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3922,
                  "src": "2457:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2457:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2456:15:10"
            },
            "returnParameters": {
              "id": 3846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3843,
                  "mutability": "mutable",
                  "name": "totalCount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3922,
                  "src": "2495:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2495:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3845,
                  "mutability": "mutable",
                  "name": "totalAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3922,
                  "src": "2515:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2515:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2494:41:10"
            },
            "scope": 4133,
            "src": "2433:680:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4037,
              "nodeType": "Block",
              "src": "3213:802:10",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 3933,
                              "name": "rewardEndBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3600,
                              "src": "3228:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3245:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3228:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3936,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3250:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3250:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 3938,
                              "name": "rewardEndBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3600,
                              "src": "3266:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3250:30:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3228:52:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 3941,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3227:54:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3942,
                        "name": "rewardAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3602,
                        "src": "3285:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 3943,
                        "name": "maxReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3596,
                        "src": "3301:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3285:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3227:83:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3949,
                  "nodeType": "IfStatement",
                  "src": "3223:126:10",
                  "trueBody": {
                    "id": 3948,
                    "nodeType": "Block",
                    "src": "3312:37:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 3946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3333:5:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 3932,
                        "id": 3947,
                        "nodeType": "Return",
                        "src": "3326:12:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3950,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3928,
                        "src": "3362:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 3951,
                        "name": "transferRewardBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3594,
                        "src": "3371:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3362:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3953,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3924,
                        "src": "3393:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 3954,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3926,
                        "src": "3403:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3393:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3362:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3960,
                  "nodeType": "IfStatement",
                  "src": "3358:93:10",
                  "trueBody": {
                    "id": 3959,
                    "nodeType": "Block",
                    "src": "3414:37:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 3957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3435:5:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 3932,
                        "id": 3958,
                        "nodeType": "Return",
                        "src": "3428:12:10"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3962
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3962,
                      "mutability": "mutable",
                      "name": "_rewardCount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4037,
                      "src": "3460:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3961,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3460:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3967,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3963,
                        "name": "uInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3625,
                        "src": "3483:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$3621_storage_$",
                          "typeString": "mapping(address => struct HopeNobt.UserInfo storage ref)"
                        }
                      },
                      "id": 3965,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3964,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3924,
                        "src": "3489:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3483:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$3621_storage",
                        "typeString": "struct HopeNobt.UserInfo storage ref"
                      }
                    },
                    "id": 3966,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rewardCount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3614,
                    "src": "3483:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3460:48:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 3968,
                        "name": "_rewardCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3962,
                        "src": "3522:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 3969,
                        "name": "maxRewardCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3598,
                        "src": "3538:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3522:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3971,
                              "name": "uInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3625,
                              "src": "3556:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$3621_storage_$",
                                "typeString": "mapping(address => struct HopeNobt.UserInfo storage ref)"
                              }
                            },
                            "id": 3973,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3972,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3924,
                              "src": "3562:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3556:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$3621_storage",
                              "typeString": "struct HopeNobt.UserInfo storage ref"
                            }
                          },
                          "id": 3974,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3612,
                          "src": "3556:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 3976,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3975,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3926,
                          "src": "3578:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3556:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 3977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3591:1:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3556:36:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3522:70:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3983,
                  "nodeType": "IfStatement",
                  "src": "3518:113:10",
                  "trueBody": {
                    "id": 3982,
                    "nodeType": "Block",
                    "src": "3594:37:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 3980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3615:5:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 3932,
                        "id": 3981,
                        "nodeType": "Return",
                        "src": "3608:12:10"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3985,
                      "mutability": "mutable",
                      "name": "_reward",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4037,
                      "src": "3640:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3984,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3640:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3993,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3991,
                        "name": "transferRewardBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3594,
                        "src": "3682:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 3988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3675:1:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3986,
                            "name": "_rewardCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3962,
                            "src": "3658:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6043,
                          "src": "3658:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3658:19:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6123,
                      "src": "3658:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3658:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3640:61:10"
                },
                {
                  "assignments": [
                    3995
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3995,
                      "mutability": "mutable",
                      "name": "_remainReward",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4037,
                      "src": "3711:21:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3994,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3711:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3999,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 3996,
                      "name": "maxReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3596,
                      "src": "3735:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3997,
                      "name": "rewardAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3602,
                      "src": "3747:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3735:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3711:48:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4000,
                      "name": "_reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3985,
                      "src": "3769:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 4001,
                              "name": "_remainReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3995,
                              "src": "3780:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 4002,
                              "name": "_reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3985,
                              "src": "3796:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3780:23:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "argumentTypes": null,
                            "id": 4005,
                            "name": "_remainReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3995,
                            "src": "3816:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "3780:49:10",
                          "trueExpression": {
                            "argumentTypes": null,
                            "id": 4004,
                            "name": "_reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3985,
                            "src": "3806:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4007,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3779:51:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3769:61:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4009,
                  "nodeType": "ExpressionStatement",
                  "src": "3769:61:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4011,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3924,
                        "src": "3846:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4012,
                        "name": "_reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3985,
                        "src": "3854:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4010,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5654,
                      "src": "3840:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3840:22:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4014,
                  "nodeType": "ExpressionStatement",
                  "src": "3840:22:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4015,
                            "name": "uInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3625,
                            "src": "3872:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$3621_storage_$",
                              "typeString": "mapping(address => struct HopeNobt.UserInfo storage ref)"
                            }
                          },
                          "id": 4017,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 4016,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3924,
                            "src": "3878:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3872:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$3621_storage",
                            "typeString": "struct HopeNobt.UserInfo storage ref"
                          }
                        },
                        "id": 4018,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewards",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3612,
                        "src": "3872:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4020,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4019,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3926,
                        "src": "3894:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3872:32:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4021,
                      "name": "_reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3985,
                      "src": "3907:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3872:42:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4023,
                  "nodeType": "ExpressionStatement",
                  "src": "3872:42:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4024,
                          "name": "uInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3625,
                          "src": "3924:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$3621_storage_$",
                            "typeString": "mapping(address => struct HopeNobt.UserInfo storage ref)"
                          }
                        },
                        "id": 4026,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4025,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3924,
                          "src": "3930:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3924:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$3621_storage",
                          "typeString": "struct HopeNobt.UserInfo storage ref"
                        }
                      },
                      "id": 4027,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3614,
                      "src": "3924:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 4028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3953:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3924:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4030,
                  "nodeType": "ExpressionStatement",
                  "src": "3924:30:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4031,
                      "name": "rewardAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3602,
                      "src": "3964:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4032,
                      "name": "_reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3985,
                      "src": "3980:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3964:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4034,
                  "nodeType": "ExpressionStatement",
                  "src": "3964:23:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4004:4:10",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3932,
                  "id": 4036,
                  "nodeType": "Return",
                  "src": "3997:11:10"
                }
              ]
            },
            "documentation": null,
            "id": 4038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendReward",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3924,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4038,
                  "src": "3139:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3139:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3926,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4038,
                  "src": "3155:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3928,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4038,
                  "src": "3174:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3174:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3138:51:10"
            },
            "returnParameters": {
              "id": 3932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3931,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4038,
                  "src": "3208:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3930,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3208:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3207:6:10"
            },
            "scope": 4133,
            "src": "3119:896:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4131,
              "nodeType": "Block",
              "src": "4081:537:10",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 4052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4045,
                          "name": "refMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3629,
                          "src": "4095:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                            "typeString": "mapping(address => address)"
                          }
                        },
                        "id": 4047,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4046,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4042,
                          "src": "4102:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4095:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 4050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4124:1:10",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4116:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4048,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4116:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 4051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4116:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "4095:31:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 4053,
                              "name": "uInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3625,
                              "src": "4130:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$3621_storage_$",
                                "typeString": "mapping(address => struct HopeNobt.UserInfo storage ref)"
                              }
                            },
                            "id": 4055,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 4054,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4042,
                              "src": "4136:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4130:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$3621_storage",
                              "typeString": "struct HopeNobt.UserInfo storage ref"
                            }
                          },
                          "id": 4056,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "invitees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3617,
                          "src": "4130:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 4057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4130:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 4058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4165:1:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4130:36:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4095:71:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4063,
                  "nodeType": "IfStatement",
                  "src": "4091:108:10",
                  "trueBody": {
                    "id": 4062,
                    "nodeType": "Block",
                    "src": "4168:31:10",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 4044,
                        "id": 4061,
                        "nodeType": "Return",
                        "src": "4182:7:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4069,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4042,
                        "src": "4236:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 4064,
                            "name": "uInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3625,
                            "src": "4208:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$3621_storage_$",
                              "typeString": "mapping(address => struct HopeNobt.UserInfo storage ref)"
                            }
                          },
                          "id": 4066,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 4065,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4040,
                            "src": "4214:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4208:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$3621_storage",
                            "typeString": "struct HopeNobt.UserInfo storage ref"
                          }
                        },
                        "id": 4067,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "invitees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3617,
                        "src": "4208:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 4068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4208:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4208:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4071,
                  "nodeType": "ExpressionStatement",
                  "src": "4208:38:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4072,
                        "name": "refMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3629,
                        "src": "4256:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 4074,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4073,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4042,
                        "src": "4263:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4256:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4075,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4040,
                      "src": "4276:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4256:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4077,
                  "nodeType": "ExpressionStatement",
                  "src": "4256:26:10"
                },
                {
                  "assignments": [
                    4082
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4082,
                      "mutability": "mutable",
                      "name": "refs",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4131,
                      "src": "4292:22:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 4080,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4292:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4081,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "4292:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4087,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4083,
                        "name": "uInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3625,
                        "src": "4317:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$3621_storage_$",
                          "typeString": "mapping(address => struct HopeNobt.UserInfo storage ref)"
                        }
                      },
                      "id": 4085,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4084,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4042,
                        "src": "4323:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4317:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$3621_storage",
                        "typeString": "struct HopeNobt.UserInfo storage ref"
                      }
                    },
                    "id": 4086,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "referrals",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3620,
                    "src": "4317:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4292:51:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4091,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4040,
                        "src": "4363:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4088,
                        "name": "refs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4082,
                        "src": "4353:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 4090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4353:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4353:17:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4093,
                  "nodeType": "ExpressionStatement",
                  "src": "4353:17:10"
                },
                {
                  "assignments": [
                    4095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4095,
                      "mutability": "mutable",
                      "name": "_ref",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4131,
                      "src": "4380:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4094,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4380:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4097,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 4096,
                    "name": "sender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4040,
                    "src": "4395:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4380:21:10"
                },
                {
                  "body": {
                    "id": 4129,
                    "nodeType": "Block",
                    "src": "4463:149:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 4108,
                            "name": "_ref",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4095,
                            "src": "4477:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 4109,
                              "name": "refMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3629,
                              "src": "4484:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 4111,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 4110,
                              "name": "_ref",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4095,
                              "src": "4491:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4484:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4477:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4113,
                        "nodeType": "ExpressionStatement",
                        "src": "4477:19:10"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 4114,
                            "name": "_ref",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4095,
                            "src": "4514:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 4117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4530:1:10",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4522:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4115,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4522:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 4118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4522:10:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "4514:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 4122,
                        "nodeType": "IfStatement",
                        "src": "4510:63:10",
                        "trueBody": {
                          "id": 4121,
                          "nodeType": "Block",
                          "src": "4534:39:10",
                          "statements": [
                            {
                              "expression": null,
                              "functionReturnParameters": 4044,
                              "id": 4120,
                              "nodeType": "Return",
                              "src": "4552:7:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4126,
                              "name": "_ref",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4095,
                              "src": "4596:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 4123,
                              "name": "refs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4082,
                              "src": "4586:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[] storage pointer"
                              }
                            },
                            "id": 4125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4586:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 4127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4586:15:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4128,
                        "nodeType": "ExpressionStatement",
                        "src": "4586:15:10"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4102,
                      "name": "level",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4099,
                      "src": "4432:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4103,
                      "name": "maxRefLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3604,
                      "src": "4440:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4432:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4130,
                  "initializationExpression": {
                    "assignments": [
                      4099
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4099,
                        "mutability": "mutable",
                        "name": "level",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 4130,
                        "src": "4416:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4098,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4416:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 4101,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4429:1:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4416:14:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 4106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4453:8:10",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 4105,
                        "name": "level",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4099,
                        "src": "4453:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4107,
                    "nodeType": "ExpressionStatement",
                    "src": "4453:8:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "4411:201:10"
                }
              ]
            },
            "documentation": null,
            "id": 4132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRef",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4040,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4132,
                  "src": "4037:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4037:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4042,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4132,
                  "src": "4053:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4053:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4036:35:10"
            },
            "returnParameters": {
              "id": 4044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4081:0:10"
            },
            "scope": 4133,
            "src": "4021:597:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4134,
        "src": "170:4450:10"
      }
    ],
    "src": "33:4588:10"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040805180820182526009815268121bdc1948139bd89d60ba1b6020808301918252835180850190945260058452641a1393d09560da1b9084015281519192916200006091600391620002d0565b50805162000076906004906020840190620002d0565b50506005805460ff19166012179055506000620000926200014d565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350620000f262000151565b60ff16600a0a6064026006556200010862000151565b60ff16600a0a6301312d00026007556003600855600c600b5562000147336200013062000151565b60ff16600a0a62e4e1c0026200015a60201b60201c565b6200036c565b3390565b60055460ff1690565b6001600160a01b038216620001b6576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b620001c46000838362000269565b620001e0816002546200026e60201b62000c3a1790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200021391839062000c3a6200026e821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b600082820183811015620002c9576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200031357805160ff191683800117855562000343565b8280016001018555821562000343579182015b828111156200034357825182559160200191906001019062000326565b506200035192915062000355565b5090565b5b8082111562000351576000815560010162000356565b61166d806200037c6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b411461046a578063a457c2d714610472578063a9059cbb1461049e578063dd62ed3e146104ca578063e9881a5e146104f8578063f2fde38b1461051e57610142565b806370a08231146103d8578063715018a6146103fe5780637f498ffc146104065780638da5cb5b1461042357806390a634aa1461042b57610142565b80632643dd221161010a5780632643dd2214610284578063313ce567146102aa57806339509351146102c857806340c10f19146102f457806341a0894d1461032057806364d713e21461039657610142565b806306fdde0314610147578063095ea7b3146101c45780630b5c3f871461020457806318160ddd1461023457806323b872dd1461024e575b600080fd5b61014f610544565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610189578181015183820152602001610171565b50505050905090810190601f1680156101b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f0600480360360408110156101da57600080fd5b506001600160a01b0381351690602001356105da565b604080519115158252519081900360200190f35b6102326004803603604081101561021a57600080fd5b506001600160a01b03813581169160200135166105f8565b005b61023c610663565b60408051918252519081900360200190f35b6101f06004803603606081101561026457600080fd5b506001600160a01b03813581169160208101359091169060400135610669565b61023c6004803603602081101561029a57600080fd5b50356001600160a01b031661069c565b6102b26106b1565b6040805160ff9092168252519081900360200190f35b6101f0600480360360408110156102de57600080fd5b506001600160a01b0381351690602001356106ba565b6102326004803603604081101561030a57600080fd5b506001600160a01b03813516906020013561070d565b6103466004803603602081101561033657600080fd5b50356001600160a01b0316610774565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561038257818101518382015260200161036a565b505050509050019250505060405180910390f35b6103bc600480360360208110156103ac57600080fd5b50356001600160a01b03166107ed565b604080516001600160a01b039092168252519081900360200190f35b61023c600480360360208110156103ee57600080fd5b50356001600160a01b0316610808565b610232610823565b6102326004803603602081101561041c57600080fd5b50356108d0565b6103bc610968565b6104516004803603602081101561044157600080fd5b50356001600160a01b031661097c565b6040805192835260208301919091528051918290030190f35b61014f610991565b6101f06004803603604081101561048857600080fd5b506001600160a01b0381351690602001356109f2565b6101f0600480360360408110156104b457600080fd5b506001600160a01b038135169060200135610a5a565b61023c600480360360408110156104e057600080fd5b506001600160a01b0381358116916020013516610a8f565b6103466004803603602081101561050e57600080fd5b50356001600160a01b0316610aba565b6102326004803603602081101561053457600080fd5b50356001600160a01b0316610b31565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105d05780601f106105a5576101008083540402835291602001916105d0565b820191906000526020600020905b8154815290600101906020018083116105b357829003601f168201915b5050505050905090565b60006105ee6105e7610c94565b8484610c98565b5060015b92915050565b610600610c94565b60055461010090046001600160a01b03908116911614610655576040805162461bcd60e51b815260206004820181905260248201526000805160206115aa833981519152604482015290519081900360640190fd5b61065f8282610d84565b5050565b60025490565b6000610676848484610ebd565b1561069157610686848484610f35565b506106918484610d84565b5060015b9392505050565b600c6020526000908152604090206001015481565b60055460ff1690565b60006105ee6106c7610c94565b8461070885600160006106d8610c94565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610c3a565b610c98565b610715610c94565b60055461010090046001600160a01b0390811691161461076a576040805162461bcd60e51b815260206004820181905260248201526000805160206115aa833981519152604482015290519081900360640190fd5b61065f8282611082565b6001600160a01b0381166000908152600c60209081526040918290206003018054835181840281018401909452808452606093928301828280156107e157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107c3575b50505050509050919050565b600d602052600090815260409020546001600160a01b031681565b6001600160a01b031660009081526020819052604090205490565b61082b610c94565b60055461010090046001600160a01b03908116911614610880576040805162461bcd60e51b815260206004820181905260248201526000805160206115aa833981519152604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b6108d8610c94565b60055461010090046001600160a01b0390811691161461092d576040805162461bcd60e51b815260206004820181905260248201526000805160206115aa833981519152604482015290519081900360640190fd5b60098190556040805182815290517f2e20f3ba2581cffa5b994facd646056498993a84a4452367b91a3be061b2ea9f9181900360200190a150565b60055461010090046001600160a01b031690565b60008061098883611172565b91509150915091565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105d05780601f106105a5576101008083540402835291602001916105d0565b60006105ee6109ff610c94565b84610708856040518060600160405280602581526020016116136025913960016000610a29610c94565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061126f565b6000610a668383611306565b156105ee57610a7d610a76610c94565b8484610f35565b506105ee610a89610c94565b84610d84565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0381166000908152600c60209081526040918290206002018054835181840281018401909452808452606093928301828280156107e1576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116107c35750505050509050919050565b610b39610c94565b60055461010090046001600160a01b03908116911614610b8e576040805162461bcd60e51b815260206004820181905260248201526000805160206115aa833981519152604482015290519081900360640190fd5b6001600160a01b038116610bd35760405162461bcd60e51b81526004018080602001828103825260268152602001806114f36026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b600082820183811015610695576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6001600160a01b038316610cdd5760405162461bcd60e51b81526004018080602001828103825260248152602001806115ef6024913960400191505060405180910390fd5b6001600160a01b038216610d225760405162461bcd60e51b81526004018080602001828103825260228152602001806115196022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038181166000908152600d602052604090205416151580610dc657506001600160a01b0381166000908152600c602052604090206002015415155b15610dd05761065f565b6001600160a01b038083166000818152600c602081815260408084206002018054600181810183559186528386200180549789166001600160a01b031998891681179091558552600d8352818520805488168717905592825283206003018054928301815580845290832090910180549094169092179092559083905b600b54811015610eb6576001600160a01b039182166000908152600d60205260409020549091169081610e825750505061065f565b82546001808201855560008581526020902090910180546001600160a01b0319166001600160a01b03851617905501610e4d565b5050505050565b6000610eca848484611316565b61069184610ed6610c94565b61070885604051806060016040528060288152602001611582602891396001600160a01b038a16600090815260016020526040812090610f14610c94565b6001600160a01b03168152602081019190915260400160002054919061126f565b600080600954118015610f4a57506009544310155b80610f595750600754600a5410155b15610f6657506000610695565b600654821080610f875750826001600160a01b0316846001600160a01b0316145b15610f9457506000610695565b6001600160a01b0384166000908152600c602052604090206001015460085481101580610fe557506001600160a01b038086166000908152600c602090815260408083209388168352929052205415155b15610ff4576000915050610695565b60065460009061100f90611009846002610c3a565b90611471565b600a5460075491925090038181116110275780611029565b815b91506110358783611082565b506001600160a01b039586166000818152600c6020818152604080842099909a1683528881529882208490559190529095525050506001908101805482019055600a805490920190915590565b6001600160a01b0382166110dd576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6110e9600083836114ca565b6002546110f69082610c3a565b6002556001600160a01b03821660009081526020819052604090205461111c9082610c3a565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b0381166000908152600c60209081526040808320600201805482518185028101850190935280835284936060939291908301828280156111e257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111c4575b5050505050905060008060005b835181101561126357600084828151811061120657fe5b6020026020010151905060018401935061121f81610808565b6001600160a01b0382166000908152600c60205260409020600201549301921561125a5760008061124f83611172565b960195949094019350505b506001016111ef565b50909350915050915091565b600081848411156112fe5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112c35781810151838201526020016112ab565b50505050905090810190601f1680156112f05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60006105ee611313610c94565b84845b6001600160a01b03831661135b5760405162461bcd60e51b81526004018080602001828103825260258152602001806115ca6025913960400191505060405180910390fd5b6001600160a01b0382166113a05760405162461bcd60e51b81526004018080602001828103825260238152602001806114d06023913960400191505060405180910390fd5b6113ab8383836114ca565b6113e88160405180606001604052806026815260200161153b602691396001600160a01b038616600090815260208190526040902054919061126f565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546114179082610c3a565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082611480575060006105f2565b8282028284828161148d57fe5b04146106955760405162461bcd60e51b81526004018080602001828103825260218152602001806115616021913960400191505060405180910390fd5b50505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220debfcada92a48a8d8ba02c2b632815b250231e48e1ecb010d92c35a08e52d14864736f6c634300060c0033",
  "bytecodeSha1": "dc230ef1a9acad3cb1bc04f51118886228c40f64",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "HopeNobt",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "Ownable.transferOwnership": {
          "92": [
            1287,
            1309,
            true
          ],
          "93": [
            2088,
            2110,
            true
          ]
        }
      },
      "10": {
        "HopeNobt.selectInvitees": {
          "86": [
            2853,
            2881,
            false
          ]
        },
        "HopeNobt.sendReward": {
          "78": [
            3228,
            3246,
            false
          ],
          "79": [
            3250,
            3280,
            true
          ],
          "80": [
            3285,
            3310,
            false
          ],
          "81": [
            3362,
            3389,
            true
          ],
          "82": [
            3393,
            3412,
            false
          ],
          "83": [
            3522,
            3552,
            true
          ],
          "84": [
            3556,
            3592,
            false
          ],
          "85": [
            3780,
            3803,
            true
          ]
        },
        "HopeNobt.setRef": {
          "75": [
            4095,
            4126,
            true
          ],
          "76": [
            4130,
            4166,
            false
          ],
          "77": [
            4514,
            4532,
            false
          ]
        },
        "HopeNobt.transfer": {
          "74": [
            1270,
            1303,
            false
          ]
        },
        "HopeNobt.transferFrom": {
          "73": [
            1577,
            1622,
            false
          ]
        }
      },
      "2": {
        "SafeMath.add": {
          "94": [
            994,
            1000,
            true
          ]
        },
        "SafeMath.mul": {
          "96": [
            2487,
            2493,
            false
          ],
          "97": [
            2573,
            2583,
            true
          ]
        },
        "SafeMath.sub": {
          "95": [
            1867,
            1873,
            true
          ]
        }
      },
      "3": {
        "ERC20._approve": {
          "87": [
            9414,
            9433,
            true
          ],
          "88": [
            9492,
            9513,
            true
          ]
        },
        "ERC20._mint": {
          "89": [
            7873,
            7894,
            true
          ]
        },
        "ERC20._transfer": {
          "90": [
            7094,
            7114,
            true
          ],
          "91": [
            7174,
            7197,
            true
          ]
        }
      },
      "4": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "29": [
            678,
            695
          ]
        }
      },
      "1": {
        "Ownable.owner": {
          "17": [
            1140,
            1153
          ]
        },
        "Ownable.renounceOwnership": {
          "13": [
            1770,
            1815
          ],
          "14": [
            1825,
            1844
          ]
        },
        "Ownable.transferOwnership": {
          "25": [
            2080,
            2153
          ],
          "26": [
            2163,
            2206
          ],
          "27": [
            2216,
            2233
          ]
        }
      },
      "10": {
        "HopeNobt.addReferral": {
          "3": [
            1996,
            2023
          ]
        },
        "HopeNobt.getInvitees": {
          "24": [
            2247,
            2275
          ]
        },
        "HopeNobt.getReferrals": {
          "11": [
            2121,
            2150
          ]
        },
        "HopeNobt.mint": {
          "10": [
            1132,
            1151
          ]
        },
        "HopeNobt.mySquad": {
          "18": [
            2392,
            2420
          ]
        },
        "HopeNobt.selectInvitees": {
          "57": [
            2775,
            2792
          ],
          "58": [
            2806,
            2835
          ],
          "59": [
            2972,
            2994
          ],
          "60": [
            3012,
            3036
          ],
          "61": [
            2713,
            2719
          ],
          "62": [
            3070,
            3106
          ]
        },
        "HopeNobt.sendReward": {
          "44": [
            3326,
            3338
          ],
          "45": [
            3428,
            3440
          ],
          "46": [
            3608,
            3620
          ],
          "47": [
            3769,
            3830
          ],
          "48": [
            3840,
            3862
          ],
          "49": [
            3872,
            3914
          ],
          "50": [
            3924,
            3954
          ],
          "51": [
            3964,
            3987
          ]
        },
        "HopeNobt.setEnd": {
          "15": [
            1826,
            1858
          ],
          "16": [
            1868,
            1898
          ]
        },
        "HopeNobt.setRef": {
          "34": [
            4182,
            4189
          ],
          "35": [
            4208,
            4246
          ],
          "36": [
            4256,
            4282
          ],
          "37": [
            4353,
            4370
          ],
          "38": [
            4477,
            4496
          ],
          "39": [
            4552,
            4559
          ],
          "40": [
            4586,
            4601
          ],
          "41": [
            4453,
            4461
          ]
        },
        "HopeNobt.transfer": {
          "21": [
            1319,
            1362
          ],
          "22": [
            1376,
            1407
          ]
        },
        "HopeNobt.transferFrom": {
          "5": [
            1638,
            1675
          ],
          "6": [
            1689,
            1714
          ],
          "7": [
            1734,
            1745
          ]
        }
      },
      "2": {
        "SafeMath.add": {
          "28": [
            986,
            1032
          ]
        },
        "SafeMath.mul": {
          "71": [
            2509,
            2517
          ],
          "72": [
            2565,
            2621
          ]
        },
        "SafeMath.sub": {
          "63": [
            1859,
            1888
          ]
        }
      },
      "3": {
        "ERC20._approve": {
          "30": [
            9406,
            9474
          ],
          "31": [
            9484,
            9552
          ],
          "32": [
            9563,
            9599
          ],
          "33": [
            9609,
            9646
          ]
        },
        "ERC20._mint": {
          "52": [
            7865,
            7930
          ],
          "53": [
            7941,
            7990
          ],
          "54": [
            8001,
            8040
          ],
          "55": [
            8050,
            8101
          ],
          "56": [
            8111,
            8153
          ]
        },
        "ERC20._transfer": {
          "65": [
            7086,
            7156
          ],
          "66": [
            7166,
            7237
          ],
          "67": [
            7248,
            7295
          ],
          "68": [
            7306,
            7397
          ],
          "69": [
            7407,
            7462
          ],
          "70": [
            7472,
            7512
          ]
        },
        "ERC20.allowance": {
          "23": [
            4023,
            4057
          ]
        },
        "ERC20.approve": {
          "1": [
            4301,
            4340
          ],
          "2": [
            4350,
            4361
          ]
        },
        "ERC20.balanceOf": {
          "12": [
            3450,
            3475
          ]
        },
        "ERC20.decimals": {
          "8": [
            3126,
            3142
          ]
        },
        "ERC20.decreaseAllowance": {
          "20": [
            6358,
            6487
          ]
        },
        "ERC20.increaseAllowance": {
          "9": [
            5651,
            5734
          ]
        },
        "ERC20.name": {
          "0": [
            2228,
            2240
          ]
        },
        "ERC20.symbol": {
          "19": [
            2424,
            2438
          ]
        },
        "ERC20.totalSupply": {
          "4": [
            3281,
            3300
          ]
        },
        "ERC20.transfer": {
          "64": [
            3787,
            3829
          ]
        },
        "ERC20.transferFrom": {
          "42": [
            4957,
            4993
          ],
          "43": [
            5003,
            5124
          ]
        }
      },
      "4": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@3.3.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b411461046a578063a457c2d714610472578063a9059cbb1461049e578063dd62ed3e146104ca578063e9881a5e146104f8578063f2fde38b1461051e57610142565b806370a08231146103d8578063715018a6146103fe5780637f498ffc146104065780638da5cb5b1461042357806390a634aa1461042b57610142565b80632643dd221161010a5780632643dd2214610284578063313ce567146102aa57806339509351146102c857806340c10f19146102f457806341a0894d1461032057806364d713e21461039657610142565b806306fdde0314610147578063095ea7b3146101c45780630b5c3f871461020457806318160ddd1461023457806323b872dd1461024e575b600080fd5b61014f610544565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610189578181015183820152602001610171565b50505050905090810190601f1680156101b65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101f0600480360360408110156101da57600080fd5b506001600160a01b0381351690602001356105da565b604080519115158252519081900360200190f35b6102326004803603604081101561021a57600080fd5b506001600160a01b03813581169160200135166105f8565b005b61023c610663565b60408051918252519081900360200190f35b6101f06004803603606081101561026457600080fd5b506001600160a01b03813581169160208101359091169060400135610669565b61023c6004803603602081101561029a57600080fd5b50356001600160a01b031661069c565b6102b26106b1565b6040805160ff9092168252519081900360200190f35b6101f0600480360360408110156102de57600080fd5b506001600160a01b0381351690602001356106ba565b6102326004803603604081101561030a57600080fd5b506001600160a01b03813516906020013561070d565b6103466004803603602081101561033657600080fd5b50356001600160a01b0316610774565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561038257818101518382015260200161036a565b505050509050019250505060405180910390f35b6103bc600480360360208110156103ac57600080fd5b50356001600160a01b03166107ed565b604080516001600160a01b039092168252519081900360200190f35b61023c600480360360208110156103ee57600080fd5b50356001600160a01b0316610808565b610232610823565b6102326004803603602081101561041c57600080fd5b50356108d0565b6103bc610968565b6104516004803603602081101561044157600080fd5b50356001600160a01b031661097c565b6040805192835260208301919091528051918290030190f35b61014f610991565b6101f06004803603604081101561048857600080fd5b506001600160a01b0381351690602001356109f2565b6101f0600480360360408110156104b457600080fd5b506001600160a01b038135169060200135610a5a565b61023c600480360360408110156104e057600080fd5b506001600160a01b0381358116916020013516610a8f565b6103466004803603602081101561050e57600080fd5b50356001600160a01b0316610aba565b6102326004803603602081101561053457600080fd5b50356001600160a01b0316610b31565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105d05780601f106105a5576101008083540402835291602001916105d0565b820191906000526020600020905b8154815290600101906020018083116105b357829003601f168201915b5050505050905090565b60006105ee6105e7610c94565b8484610c98565b5060015b92915050565b610600610c94565b60055461010090046001600160a01b03908116911614610655576040805162461bcd60e51b815260206004820181905260248201526000805160206115aa833981519152604482015290519081900360640190fd5b61065f8282610d84565b5050565b60025490565b6000610676848484610ebd565b1561069157610686848484610f35565b506106918484610d84565b5060015b9392505050565b600c6020526000908152604090206001015481565b60055460ff1690565b60006105ee6106c7610c94565b8461070885600160006106d8610c94565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610c3a565b610c98565b610715610c94565b60055461010090046001600160a01b0390811691161461076a576040805162461bcd60e51b815260206004820181905260248201526000805160206115aa833981519152604482015290519081900360640190fd5b61065f8282611082565b6001600160a01b0381166000908152600c60209081526040918290206003018054835181840281018401909452808452606093928301828280156107e157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107c3575b50505050509050919050565b600d602052600090815260409020546001600160a01b031681565b6001600160a01b031660009081526020819052604090205490565b61082b610c94565b60055461010090046001600160a01b03908116911614610880576040805162461bcd60e51b815260206004820181905260248201526000805160206115aa833981519152604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b6108d8610c94565b60055461010090046001600160a01b0390811691161461092d576040805162461bcd60e51b815260206004820181905260248201526000805160206115aa833981519152604482015290519081900360640190fd5b60098190556040805182815290517f2e20f3ba2581cffa5b994facd646056498993a84a4452367b91a3be061b2ea9f9181900360200190a150565b60055461010090046001600160a01b031690565b60008061098883611172565b91509150915091565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105d05780601f106105a5576101008083540402835291602001916105d0565b60006105ee6109ff610c94565b84610708856040518060600160405280602581526020016116136025913960016000610a29610c94565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061126f565b6000610a668383611306565b156105ee57610a7d610a76610c94565b8484610f35565b506105ee610a89610c94565b84610d84565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0381166000908152600c60209081526040918290206002018054835181840281018401909452808452606093928301828280156107e1576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116107c35750505050509050919050565b610b39610c94565b60055461010090046001600160a01b03908116911614610b8e576040805162461bcd60e51b815260206004820181905260248201526000805160206115aa833981519152604482015290519081900360640190fd5b6001600160a01b038116610bd35760405162461bcd60e51b81526004018080602001828103825260268152602001806114f36026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b600082820183811015610695576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6001600160a01b038316610cdd5760405162461bcd60e51b81526004018080602001828103825260248152602001806115ef6024913960400191505060405180910390fd5b6001600160a01b038216610d225760405162461bcd60e51b81526004018080602001828103825260228152602001806115196022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038181166000908152600d602052604090205416151580610dc657506001600160a01b0381166000908152600c602052604090206002015415155b15610dd05761065f565b6001600160a01b038083166000818152600c602081815260408084206002018054600181810183559186528386200180549789166001600160a01b031998891681179091558552600d8352818520805488168717905592825283206003018054928301815580845290832090910180549094169092179092559083905b600b54811015610eb6576001600160a01b039182166000908152600d60205260409020549091169081610e825750505061065f565b82546001808201855560008581526020902090910180546001600160a01b0319166001600160a01b03851617905501610e4d565b5050505050565b6000610eca848484611316565b61069184610ed6610c94565b61070885604051806060016040528060288152602001611582602891396001600160a01b038a16600090815260016020526040812090610f14610c94565b6001600160a01b03168152602081019190915260400160002054919061126f565b600080600954118015610f4a57506009544310155b80610f595750600754600a5410155b15610f6657506000610695565b600654821080610f875750826001600160a01b0316846001600160a01b0316145b15610f9457506000610695565b6001600160a01b0384166000908152600c602052604090206001015460085481101580610fe557506001600160a01b038086166000908152600c602090815260408083209388168352929052205415155b15610ff4576000915050610695565b60065460009061100f90611009846002610c3a565b90611471565b600a5460075491925090038181116110275780611029565b815b91506110358783611082565b506001600160a01b039586166000818152600c6020818152604080842099909a1683528881529882208490559190529095525050506001908101805482019055600a805490920190915590565b6001600160a01b0382166110dd576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6110e9600083836114ca565b6002546110f69082610c3a565b6002556001600160a01b03821660009081526020819052604090205461111c9082610c3a565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b0381166000908152600c60209081526040808320600201805482518185028101850190935280835284936060939291908301828280156111e257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116111c4575b5050505050905060008060005b835181101561126357600084828151811061120657fe5b6020026020010151905060018401935061121f81610808565b6001600160a01b0382166000908152600c60205260409020600201549301921561125a5760008061124f83611172565b960195949094019350505b506001016111ef565b50909350915050915091565b600081848411156112fe5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112c35781810151838201526020016112ab565b50505050905090810190601f1680156112f05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60006105ee611313610c94565b84845b6001600160a01b03831661135b5760405162461bcd60e51b81526004018080602001828103825260258152602001806115ca6025913960400191505060405180910390fd5b6001600160a01b0382166113a05760405162461bcd60e51b81526004018080602001828103825260238152602001806114d06023913960400191505060405180910390fd5b6113ab8383836114ca565b6113e88160405180606001604052806026815260200161153b602691396001600160a01b038616600090815260208190526040902054919061126f565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546114179082610c3a565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082611480575060006105f2565b8282028284828161148d57fe5b04146106955760405162461bcd60e51b81526004018080602001828103825260218152602001806115616021913960400191505060405180910390fd5b50505056fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220debfcada92a48a8d8ba02c2b632815b250231e48e1ecb010d92c35a08e52d14864736f6c634300060c0033",
  "deployedSourceMap": "170:4450:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:81:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4202:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4202:166:3;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1911:119:10;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1911:119:10;;;;;;;;;;:::i;:::-;;3209:98:3;;;:::i;:::-;;;;;;;;;;;;;;;;1451:301:10;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1451:301:10;;;;;;;;;;;;;;;;;:::i;598:41::-;;;;;;;;;;;;;;;;-1:-1:-1;598:41:10;-1:-1:-1;;;;;598:41:10;;:::i;3068:81:3:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5547:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5547:215:3;;;;;;;;:::i;1061:97:10:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1061:97:10;;;;;;;;:::i;2036:121::-;;;;;;;;;;;;;;;;-1:-1:-1;2036:121:10;-1:-1:-1;;;;;2036:121:10;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:41;;;;;;;;;;;;;;;;-1:-1:-1;645:41:10;-1:-1:-1;;;;;645:41:10;;:::i;:::-;;;;-1:-1:-1;;;;;645:41:10;;;;;;;;;;;;;;3365:117:3;;;;;;;;;;;;;;;;-1:-1:-1;3365:117:3;-1:-1:-1;;;;;3365:117:3;;:::i;1706:145:1:-;;;:::i;1758:147:10:-;;;;;;;;;;;;;;;;-1:-1:-1;1758:147:10;;:::i;1083:77:1:-;;;:::i;2288:139:10:-;;;;;;;;;;;;;;;;-1:-1:-1;2288:139:10;-1:-1:-1;;;;;2288:139:10;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2360:85:3;;;:::i;6249:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6249:266:3;;;;;;;;:::i;1164:281:10:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1164:281:10;;;;;;;;:::i;3915:149:3:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3915:149:3;;;;;;;;;;:::i;2163:119:10:-;;;;;;;;;;;;;;;;-1:-1:-1;2163:119:10;-1:-1:-1;;;;;2163:119:10;;:::i;2000:240:1:-;;;;;;;;;;;;;;;;-1:-1:-1;2000:240:1;-1:-1:-1;;;;;2000:240:1;;:::i;2166:81:3:-;2235:5;2228:12;;;;;;;;-1:-1:-1;;2228:12:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:13;;2228:12;;2235:5;;2228:12;;2235:5;2228:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:81;:::o;4202:166::-;4285:4;4301:39;4310:12;:10;:12::i;:::-;4324:7;4333:6;4301:8;:39::i;:::-;-1:-1:-1;4357:4:3;4202:166;;;;;:::o;1911:119:10:-;1297:12:1;:10;:12::i;:::-;1287:6;;;;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;1996:27:10::1;2003:7;2012:10;1996:6;:27::i;:::-;1911:119:::0;;:::o;3209:98:3:-;3288:12;;3209:98;:::o;1451:301:10:-;1557:4;1577:45;1596:6;1604:9;1615:6;1577:18;:45::i;:::-;1573:152;;;1638:37;1649:6;1657:9;1668:6;1638:10;:37::i;:::-;;1689:25;1696:6;1704:9;1689:6;:25::i;:::-;-1:-1:-1;1741:4:10;1451:301;;;;;;:::o;598:41::-;;;;;;;;;;;;;;;:::o;3068:81:3:-;3133:9;;;;3068:81;:::o;5547:215::-;5635:4;5651:83;5660:12;:10;:12::i;:::-;5674:7;5683:50;5722:10;5683:11;:25;5695:12;:10;:12::i;:::-;-1:-1:-1;;;;;5683:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;5683:25:3;;;:34;;;;;;;;;;;:38;:50::i;:::-;5651:8;:83::i;1061:97:10:-;1297:12:1;:10;:12::i;:::-;1287:6;;;;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;1132:19:10::1;1138:3;1143:7;1132:5;:19::i;2036:121::-:0;-1:-1:-1;;;;;2128:12:10;;;;;;:5;:12;;;;;;;;;:22;;2121:29;;;;;;;;;;;;;;;;;2094:16;;2121:29;;;2128:22;2121:29;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2121:29:10;;;;;;;;;;;;;;;;;;;;;;;2036:121;;;:::o;645:41::-;;;;;;;;;;;;-1:-1:-1;;;;;645:41:10;;:::o;3365:117:3:-;-1:-1:-1;;;;;3457:18:3;3431:7;3457:18;;;;;;;;;;;;3365:117::o;1706:145:1:-;1297:12;:10;:12::i;:::-;1287:6;;;;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;1796:6:::1;::::0;1775:40:::1;::::0;1812:1:::1;::::0;1796:6:::1;::::0;::::1;-1:-1:-1::0;;;;;1796:6:1::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1825:6;:19:::0;;-1:-1:-1;;;;;;1825:19:1::1;::::0;;1706:145::o;1758:147:10:-;1297:12:1;:10;:12::i;:::-;1287:6;;;;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;1826:14:10::1;:32:::0;;;1873:25:::1;::::0;;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;1758:147:::0;:::o;1083:77:1:-;1147:6;;;;;-1:-1:-1;;;;;1147:6:1;;1083:77::o;2288:139:10:-;2341:18;2361:19;2399:21;2414:5;2399:14;:21::i;:::-;2392:28;;;;2288:139;;;:::o;2360:85:3:-;2431:7;2424:14;;;;;;;;-1:-1:-1;;2424:14:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2399:13;;2424:14;;2431:7;;2424:14;;2431:7;2424:14;;;;;;;;;;;;;;;;;;;;;;;;6249:266;6342:4;6358:129;6367:12;:10;:12::i;:::-;6381:7;6390:96;6429:15;6390:96;;;;;;;;;;;;;;;;;:11;:25;6402:12;:10;:12::i;:::-;-1:-1:-1;;;;;6390:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;6390:25:3;;;:34;;;;;;;;;;;:96;:38;:96::i;1164:281:10:-;1250:4;1270:33;1285:9;1296:6;1270:14;:33::i;:::-;1266:152;;;1319:43;1330:12;:10;:12::i;:::-;1344:9;1355:6;1319:10;:43::i;:::-;;1376:31;1383:12;:10;:12::i;:::-;1397:9;1376:6;:31::i;3915:149:3:-;-1:-1:-1;;;;;4030:18:3;;;4004:7;4030:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3915:149::o;2163:119:10:-;-1:-1:-1;;;;;2254:12:10;;;;;;:5;:12;;;;;;;;;:21;;2247:28;;;;;;;;;;;;;;;;;2220:16;;2247:28;;;2254:21;2247:28;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2247:28:10;;;;;;;;;;;;;;;;;;;;;;2163:119;;;:::o;2000:240:1:-;1297:12;:10;:12::i;:::-;1287:6;;;;;-1:-1:-1;;;;;1287:6:1;;;:22;;;1279:67;;;;;-1:-1:-1;;;1279:67:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1279:67:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;2088:22:1;::::1;2080:73;;;;-1:-1:-1::0;;;2080:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:6;::::0;2168:38:::1;::::0;-1:-1:-1;;;;;2168:38:1;;::::1;::::0;2189:6:::1;::::0;::::1;;::::0;2168:38:::1;::::0;;;::::1;2216:6;:17:::0;;-1:-1:-1;;;;;2216:17:1;;::::1;;;-1:-1:-1::0;;;;;;2216:17:1;;::::1;::::0;;;::::1;::::0;;2000:240::o;882:176:2:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;598:104:0;685:10;598:104;:::o;9313:340:3:-;-1:-1:-1;;;;;9414:19:3;;9406:68;;;;-1:-1:-1;;;9406:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9492:21:3;;9484:68;;;;-1:-1:-1;;;9484:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9563:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9614:32;;;;;;;;;;;;;;;;;9313:340;;;:::o;4021:597:10:-;-1:-1:-1;;;;;4095:17:10;;;4124:1;4095:17;;;:6;:17;;;;;;;:31;;;:71;;-1:-1:-1;;;;;;4130:16:10;;4165:1;4130:16;;;:5;:16;;;;;:25;;:32;:36;;4095:71;4091:108;;;4182:7;;4091:108;-1:-1:-1;;;;;4208:13:10;;;;;;;:5;:13;;;;;;;;:22;;:38;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4208:38:10;;;;;;;;4256:17;;:6;:17;;;;;:26;;;;;;;;4317:16;;;;;:26;;4353:17;;;;;;;;;;;;;;;;;;;;;;;;;;;4317:26;4214:6;;4411:201;4440:11;;4432:5;:19;4411:201;;;-1:-1:-1;;;;;4484:12:10;;;;;;;:6;:12;;;;;;;;;;4514:18;4510:63;;4552:7;;;;;4510:63;4586:15;;;;;;;;-1:-1:-1;4586:15:10;;;;;;;;;;;-1:-1:-1;;;;;;4586:15:10;-1:-1:-1;;;;;4586:15:10;;;;;4453:8;4411:201;;;;4021:597;;;;:::o;4835:317:3:-;4941:4;4957:36;4967:6;4975:9;4986:6;4957:9;:36::i;:::-;5003:121;5012:6;5020:12;:10;:12::i;:::-;5034:89;5072:6;5034:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5034:19:3;;;;;;:11;:19;;;;;;5054:12;:10;:12::i;:::-;-1:-1:-1;;;;;5034:33:3;;;;;;;;;;;;-1:-1:-1;5034:33:3;;;:89;:37;:89::i;3119:896:10:-;3208:4;3245:1;3228:14;;:18;:52;;;;;3266:14;;3250:12;:30;;3228:52;3227:83;;;;3301:9;;3285:12;;:25;;3227:83;3223:126;;;-1:-1:-1;3333:5:10;3326:12;;3223:126;3371:18;;3362:6;:27;:50;;;;3403:9;-1:-1:-1;;;;;3393:19:10;:6;-1:-1:-1;;;;;3393:19:10;;3362:50;3358:93;;;-1:-1:-1;3435:5:10;3428:12;;3358:93;-1:-1:-1;;;;;3483:13:10;;3460:20;3483:13;;;:5;:13;;;;;:25;;;3538:14;;3522:30;;;;:70;;-1:-1:-1;;;;;;3556:13:10;;;3591:1;3556:13;;;:5;:13;;;;;;;;:32;;;;;;;;;;:36;;3522:70;3518:113;;;3615:5;3608:12;;;;;3518:113;3682:18;;3640:15;;3658:43;;:19;:12;3675:1;3658:16;:19::i;:::-;:23;;:43::i;:::-;3747:12;;3735:9;;3640:61;;-1:-1:-1;3735:24:10;;3780:23;;;:49;;3816:13;3780:49;;;3806:7;3780:49;3769:61;;3840:22;3846:6;3854:7;3840:5;:22::i;:::-;-1:-1:-1;;;;;;3872:13:10;;;;;;;:5;:13;;;;;;;;:32;;;;;;;;;;;;:42;;;3924:13;;;;;;-1:-1:-1;;;3953:1:10;3924:25;;;:30;;;;;;3964:12;:23;;;;;;;;3953:1;3119:896::o;7790:370:3:-;-1:-1:-1;;;;;7873:21:3;;7865:65;;;;;-1:-1:-1;;;7865:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;7941:49;7970:1;7974:7;7983:6;7941:20;:49::i;:::-;8016:12;;:24;;8033:6;8016:16;:24::i;:::-;8001:12;:39;-1:-1:-1;;;;;8071:18:3;;:9;:18;;;;;;;;;;;:30;;8094:6;8071:22;:30::i;:::-;-1:-1:-1;;;;;8050:18:3;;:9;:18;;;;;;;;;;;:51;;;;8116:37;;;;;;;8050:18;;:9;;8116:37;;;;;;;;;;7790:370;;:::o;2433:680:10:-;-1:-1:-1;;;;;2575:12:10;;2495:18;2575:12;;;:5;:12;;;;;;;;:21;;2546:50;;;;;;;;;;;;;;;;;2495:18;;2546:26;;:50;2575:21;2546:50;;;2575:21;2546:50;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2546:50:10;;;;;;;;;;;;;;;;;;;;;;;2606:20;2636:21;2672:11;2667:394;2695:9;:16;2689:3;:22;2667:394;;;2735:9;2747;2757:3;2747:14;;;;;;;;;;;;;;2735:26;;2791:1;2775:17;;;;2823:12;2833:1;2823:9;:12::i;:::-;-1:-1:-1;;;;;2853:8:10;;2880:1;2853:8;;;:5;:8;;;;;:17;;:24;2806:29;;;2853:28;2849:202;;2902:14;2918:15;2937:17;2952:1;2937:14;:17::i;:::-;2972:22;;;3012:24;;;;;-1:-1:-1;;2849:202:10;-1:-1:-1;2713:6:10;;2667:394;;;-1:-1:-1;3078:12:10;;-1:-1:-1;3092:13:10;-1:-1:-1;;2433:680:10;;;:::o;1754:187:2:-;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:2;;;1754:187::o;3685:172:3:-;3771:4;3787:42;3797:12;:10;:12::i;:::-;3811:9;3822:6;6989:530;-1:-1:-1;;;;;7094:20:3;;7086:70;;;;-1:-1:-1;;;7086:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7174:23:3;;7166:71;;;;-1:-1:-1;;;7166:71:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7248:47;7269:6;7277:9;7288:6;7248:20;:47::i;:::-;7326:71;7348:6;7326:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7326:17:3;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7306:17:3;;;:9;:17;;;;;;;;;;;:91;;;;7430:20;;;;;;;:32;;7455:6;7430:24;:32::i;:::-;-1:-1:-1;;;;;7407:20:3;;;:9;:20;;;;;;;;;;;;:55;;;;7477:35;;;;;;;7407:20;;7477:35;;;;;;;;;;;;;6989:530;;;:::o;2188:459:2:-;2246:7;2487:6;2483:45;;-1:-1:-1;2516:1:2;2509:8;;2483:45;2550:5;;;2554:1;2550;:5;:1;2573:5;;;;;:10;2565:56;;;;-1:-1:-1;;;2565:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10651:92:3;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "notice": "Creates `_amount` token to `_to`. Must only be called by the owner."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    170,
    4620
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xE9881A5E EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x51E JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x7F498FFC EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0x90A634AA EQ PUSH2 0x42B JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x2643DD22 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x2643DD22 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x41A0894D EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x64D713E2 EQ PUSH2 0x396 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xB5C3F87 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x544 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x189 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1B6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x5F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23C PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x669 JUMP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x69C JUMP JUMPDEST PUSH2 0x2B2 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x70D JUMP JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x382 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x36A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x808 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x823 JUMP JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0x968 JUMP JUMPDEST PUSH2 0x451 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH2 0x991 JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x9F2 JUMP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xABA JUMP JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EE PUSH2 0x5E7 PUSH2 0xC94 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xC98 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x600 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x655 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15AA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x65F DUP3 DUP3 PUSH2 0xD84 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x676 DUP5 DUP5 DUP5 PUSH2 0xEBD JUMP JUMPDEST ISZERO PUSH2 0x691 JUMPI PUSH2 0x686 DUP5 DUP5 DUP5 PUSH2 0xF35 JUMP JUMPDEST POP PUSH2 0x691 DUP5 DUP5 PUSH2 0xD84 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EE PUSH2 0x6C7 PUSH2 0xC94 JUMP JUMPDEST DUP5 PUSH2 0x708 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6D8 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xC3A JUMP JUMPDEST PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x715 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x76A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15AA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x65F DUP3 DUP3 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x82B PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x880 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15AA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x8D8 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x92D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15AA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH32 0x2E20F3BA2581CFFA5B994FACD646056498993A84A4452367B91A3BE061B2EA9F SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x988 DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EE PUSH2 0x9FF PUSH2 0xC94 JUMP JUMPDEST DUP5 PUSH2 0x708 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1613 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xA29 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA66 DUP4 DUP4 PUSH2 0x1306 JUMP JUMPDEST ISZERO PUSH2 0x5EE JUMPI PUSH2 0xA7D PUSH2 0xA76 PUSH2 0xC94 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xF35 JUMP JUMPDEST POP PUSH2 0x5EE PUSH2 0xA89 PUSH2 0xC94 JUMP JUMPDEST DUP5 PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7C3 JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB39 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB8E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x15AA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x695 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15EF PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1519 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO ISZERO DUP1 PUSH2 0xDC6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDD0 JUMPI PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP7 MSTORE DUP4 DUP7 KECCAK256 ADD DUP1 SLOAD SWAP8 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP9 DUP10 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP6 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP1 SLOAD DUP9 AND DUP8 OR SWAP1 SSTORE SWAP3 DUP3 MSTORE DUP4 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP1 DUP5 MSTORE SWAP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP5 AND SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE SWAP1 DUP4 SWAP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 AND SWAP1 DUP2 PUSH2 0xE82 JUMPI POP POP POP PUSH2 0x65F JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP6 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE ADD PUSH2 0xE4D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECA DUP5 DUP5 DUP5 PUSH2 0x1316 JUMP JUMPDEST PUSH2 0x691 DUP5 PUSH2 0xED6 PUSH2 0xC94 JUMP JUMPDEST PUSH2 0x708 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1582 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xF14 PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 SLOAD GT DUP1 ISZERO PUSH2 0xF4A JUMPI POP PUSH1 0x9 SLOAD NUMBER LT ISZERO JUMPDEST DUP1 PUSH2 0xF59 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0xA SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0xF66 JUMPI POP PUSH1 0x0 PUSH2 0x695 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP3 LT DUP1 PUSH2 0xF87 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0xF94 JUMPI POP PUSH1 0x0 PUSH2 0x695 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD DUP2 LT ISZERO DUP1 PUSH2 0xFE5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xFF4 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x695 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100F SWAP1 PUSH2 0x1009 DUP5 PUSH1 0x2 PUSH2 0xC3A JUMP JUMPDEST SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x7 SLOAD SWAP2 SWAP3 POP SWAP1 SUB DUP2 DUP2 GT PUSH2 0x1027 JUMPI DUP1 PUSH2 0x1029 JUMP JUMPDEST DUP2 JUMPDEST SWAP2 POP PUSH2 0x1035 DUP8 DUP4 PUSH2 0x1082 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP10 SWAP1 SWAP11 AND DUP4 MSTORE DUP9 DUP2 MSTORE SWAP9 DUP3 KECCAK256 DUP5 SWAP1 SSTORE SWAP2 SWAP1 MSTORE SWAP1 SWAP6 MSTORE POP POP POP PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD SWAP1 SWAP3 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10DD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x10E9 PUSH1 0x0 DUP4 DUP4 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x10F6 SWAP1 DUP3 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x111C SWAP1 DUP3 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 PUSH1 0x60 SWAP4 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x11E2 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11C4 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1206 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH2 0x121F DUP2 PUSH2 0x808 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP4 ADD SWAP3 ISZERO PUSH2 0x125A JUMPI PUSH1 0x0 DUP1 PUSH2 0x124F DUP4 PUSH2 0x1172 JUMP JUMPDEST SWAP7 ADD SWAP6 SWAP5 SWAP1 SWAP5 ADD SWAP4 POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x11EF JUMP JUMPDEST POP SWAP1 SWAP4 POP SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x12FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12C3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12AB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x12F0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EE PUSH2 0x1313 PUSH2 0xC94 JUMP JUMPDEST DUP5 DUP5 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x135B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15CA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14D0 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13AB DUP4 DUP4 DUP4 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x13E8 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x153B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1417 SWAP1 DUP3 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1480 JUMPI POP PUSH1 0x0 PUSH2 0x5F2 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x148D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1561 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65536166 PUSH6 0x4D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x4F776E61626C PUSH6 0x3A2063616C6C PUSH6 0x72206973206E PUSH16 0x7420746865206F776E65724552433230 GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220DEBF 0xCA 0xDA SWAP3 LOG4 DUP11 DUP14 DUP12 LOG0 0x2C 0x2B PUSH4 0x2815B250 0x23 0x1E 0x48 0xE1 0xEC 0xB0 LT 0xD9 0x2C CALLDATALOAD LOG0 DUP15 MSTORE 0xD1 0x48 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        170,
        4620
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x142"
    },
    "25": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB8"
    },
    "42": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95D89B41"
    },
    "49": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "GT",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95D89B41"
    },
    "60": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x46A"
    },
    "64": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA457C2D7"
    },
    "71": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x472"
    },
    "75": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x49E"
    },
    "86": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4CA"
    },
    "97": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "99": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xE9881A5E"
    },
    "104": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "105": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4F8"
    },
    "108": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "109": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "110": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF2FDE38B"
    },
    "115": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "116": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x51E"
    },
    "119": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "120": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x142"
    },
    "123": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMP",
      "path": "10"
    },
    "124": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "131": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3D8"
    },
    "135": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "137": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x715018A6"
    },
    "142": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "143": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3FE"
    },
    "146": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "147": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "148": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7F498FFC"
    },
    "153": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "154": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x406"
    },
    "157": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "158": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "159": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8DA5CB5B"
    },
    "164": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "165": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x423"
    },
    "168": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "169": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "170": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x90A634AA"
    },
    "175": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "176": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x42B"
    },
    "179": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "180": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x142"
    },
    "183": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMP",
      "path": "10"
    },
    "184": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "185": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "186": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2643DD22"
    },
    "191": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "GT",
      "path": "10"
    },
    "192": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10A"
    },
    "195": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "196": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "197": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2643DD22"
    },
    "202": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "203": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x284"
    },
    "206": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "207": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "208": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x313CE567"
    },
    "213": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "214": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2AA"
    },
    "217": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "218": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "219": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x39509351"
    },
    "224": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "225": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C8"
    },
    "228": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "229": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "230": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x40C10F19"
    },
    "235": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "236": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F4"
    },
    "239": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "240": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "241": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x41A0894D"
    },
    "246": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "247": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x320"
    },
    "250": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "251": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "252": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x64D713E2"
    },
    "257": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "258": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x396"
    },
    "261": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "262": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x142"
    },
    "265": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMP",
      "path": "10"
    },
    "266": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "267": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "268": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6FDDE03"
    },
    "273": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "274": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x147"
    },
    "277": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "278": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "279": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95EA7B3"
    },
    "284": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "285": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C4"
    },
    "288": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "289": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "290": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB5C3F87"
    },
    "295": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "296": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x204"
    },
    "299": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "300": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "301": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x18160DDD"
    },
    "306": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "307": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x234"
    },
    "310": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "311": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "312": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x23B872DD"
    },
    "317": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "EQ",
      "path": "10"
    },
    "318": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24E"
    },
    "321": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "322": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "323": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "325": {
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "DUP1",
      "path": "10"
    },
    "326": {
      "first_revert": true,
      "fn": null,
      "offset": [
        170,
        4620
      ],
      "op": "REVERT",
      "path": "10"
    },
    "327": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "328": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "331": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x544"
    },
    "334": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMP",
      "path": "3"
    },
    "335": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "336": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "338": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "339": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "340": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "342": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "343": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP3",
      "path": "3"
    },
    "344": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "345": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "346": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "347": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "348": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "349": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "350": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "351": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "352": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "353": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "354": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "355": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "356": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "357": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "358": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "359": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "360": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "361": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP6",
      "path": "3"
    },
    "362": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "363": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "364": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "365": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "366": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "367": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "369": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "370": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "371": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "372": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "LT",
      "path": "3"
    },
    "373": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "374": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x189"
    },
    "377": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "378": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "379": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "380": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "381": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "382": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "383": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP3",
      "path": "3"
    },
    "384": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "385": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "386": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "388": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "389": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x171"
    },
    "392": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMP",
      "path": "3"
    },
    "393": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "394": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "395": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "396": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "397": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "398": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "399": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "400": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "401": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "402": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "403": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "404": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "406": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "AND",
      "path": "3"
    },
    "407": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "408": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "409": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B6"
    },
    "412": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "413": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "414": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP3",
      "path": "3"
    },
    "415": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SUB",
      "path": "3"
    },
    "416": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "417": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "418": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "420": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "421": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "423": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SUB",
      "path": "3"
    },
    "424": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "427": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "EXP",
      "path": "3"
    },
    "428": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SUB",
      "path": "3"
    },
    "429": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "NOT",
      "path": "3"
    },
    "430": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "AND",
      "path": "3"
    },
    "431": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "432": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "433": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "435": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "ADD",
      "path": "3"
    },
    "436": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "437": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "438": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "439": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "440": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "441": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "442": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "443": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "POP",
      "path": "3"
    },
    "444": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "446": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "447": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "448": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "449": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SUB",
      "path": "3"
    },
    "450": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "451": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "RETURN",
      "path": "3"
    },
    "452": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "453": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F0"
    },
    "456": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "458": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP1",
      "path": "3"
    },
    "459": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "460": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SUB",
      "path": "3"
    },
    "461": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "463": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP2",
      "path": "3"
    },
    "464": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "LT",
      "path": "3"
    },
    "465": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "466": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DA"
    },
    "469": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "470": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "472": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP1",
      "path": "3"
    },
    "473": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "REVERT",
      "path": "3"
    },
    "474": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "475": {
      "op": "POP"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "482": {
      "op": "SHL"
    },
    "483": {
      "op": "SUB"
    },
    "484": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP2",
      "path": "3"
    },
    "485": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "486": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "AND",
      "path": "3"
    },
    "487": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "488": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "490": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "ADD",
      "path": "3"
    },
    "491": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "492": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5DA"
    },
    "495": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMP",
      "path": "3"
    },
    "496": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "497": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "499": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP1",
      "path": "3"
    },
    "500": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "501": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "502": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "503": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "504": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP3",
      "path": "3"
    },
    "505": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "506": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "507": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "508": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "DUP2",
      "path": "3"
    },
    "509": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "510": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SUB",
      "path": "3"
    },
    "511": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "513": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "ADD",
      "path": "3"
    },
    "514": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "515": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "RETURN",
      "path": "3"
    },
    "516": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "517": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x232"
    },
    "520": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "522": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "DUP1",
      "path": "10"
    },
    "523": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "524": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "SUB",
      "path": "10"
    },
    "525": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "527": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "DUP2",
      "path": "10"
    },
    "528": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "LT",
      "path": "10"
    },
    "529": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "530": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21A"
    },
    "533": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "534": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "536": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "DUP1",
      "path": "10"
    },
    "537": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "REVERT",
      "path": "10"
    },
    "538": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "539": {
      "op": "POP"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "546": {
      "op": "SHL"
    },
    "547": {
      "op": "SUB"
    },
    "548": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "DUP2",
      "path": "10"
    },
    "549": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "550": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "DUP2",
      "path": "10"
    },
    "551": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "AND",
      "path": "10"
    },
    "552": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "553": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "555": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "ADD",
      "path": "10"
    },
    "556": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "557": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "AND",
      "path": "10"
    },
    "558": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5F8"
    },
    "561": {
      "fn": "HopeNobt.addReferral",
      "jump": "i",
      "offset": [
        1911,
        2030
      ],
      "op": "JUMP",
      "path": "10"
    },
    "562": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "563": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "STOP",
      "path": "10"
    },
    "564": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "565": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23C"
    },
    "568": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x663"
    },
    "571": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3209,
        3307
      ],
      "op": "JUMP",
      "path": "3"
    },
    "572": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "573": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "575": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "DUP1",
      "path": "3"
    },
    "576": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "577": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "578": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "DUP3",
      "path": "3"
    },
    "579": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "580": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "581": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "582": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "DUP2",
      "path": "3"
    },
    "583": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "584": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "SUB",
      "path": "3"
    },
    "585": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "587": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "ADD",
      "path": "3"
    },
    "588": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "589": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "RETURN",
      "path": "3"
    },
    "590": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "591": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F0"
    },
    "594": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "596": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "DUP1",
      "path": "10"
    },
    "597": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "598": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "SUB",
      "path": "10"
    },
    "599": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "601": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "DUP2",
      "path": "10"
    },
    "602": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "LT",
      "path": "10"
    },
    "603": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "604": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x264"
    },
    "607": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "608": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "610": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "DUP1",
      "path": "10"
    },
    "611": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "REVERT",
      "path": "10"
    },
    "612": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "613": {
      "op": "POP"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "620": {
      "op": "SHL"
    },
    "621": {
      "op": "SUB"
    },
    "622": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "DUP2",
      "path": "10"
    },
    "623": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "624": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "DUP2",
      "path": "10"
    },
    "625": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "AND",
      "path": "10"
    },
    "626": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "627": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "629": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "DUP2",
      "path": "10"
    },
    "630": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "ADD",
      "path": "10"
    },
    "631": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "632": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "633": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "634": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "AND",
      "path": "10"
    },
    "635": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "636": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "638": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "ADD",
      "path": "10"
    },
    "639": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "640": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x669"
    },
    "643": {
      "fn": "HopeNobt.transferFrom",
      "jump": "i",
      "offset": [
        1451,
        1752
      ],
      "op": "JUMP",
      "path": "10"
    },
    "644": {
      "offset": [
        598,
        639
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "645": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23C"
    },
    "648": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "650": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "DUP1",
      "path": "10"
    },
    "651": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "652": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "SUB",
      "path": "10"
    },
    "653": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "655": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "DUP2",
      "path": "10"
    },
    "656": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "LT",
      "path": "10"
    },
    "657": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "658": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29A"
    },
    "661": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "662": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "664": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "DUP1",
      "path": "10"
    },
    "665": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "REVERT",
      "path": "10"
    },
    "666": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "667": {
      "op": "POP"
    },
    "668": {
      "offset": [
        598,
        639
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "675": {
      "op": "SHL"
    },
    "676": {
      "op": "SUB"
    },
    "677": {
      "offset": [
        598,
        639
      ],
      "op": "AND",
      "path": "10"
    },
    "678": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x69C"
    },
    "681": {
      "fn": "HopeNobt.transferFrom",
      "jump": "i",
      "offset": [
        598,
        639
      ],
      "op": "JUMP",
      "path": "10"
    },
    "682": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "683": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B2"
    },
    "686": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B1"
    },
    "689": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3068,
        3149
      ],
      "op": "JUMP",
      "path": "3"
    },
    "690": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "691": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "693": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "DUP1",
      "path": "3"
    },
    "694": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "695": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "697": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "698": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "699": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "AND",
      "path": "3"
    },
    "700": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "DUP3",
      "path": "3"
    },
    "701": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "702": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "703": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "704": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "DUP2",
      "path": "3"
    },
    "705": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "706": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SUB",
      "path": "3"
    },
    "707": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "709": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "ADD",
      "path": "3"
    },
    "710": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "711": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "RETURN",
      "path": "3"
    },
    "712": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "713": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F0"
    },
    "716": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "718": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "DUP1",
      "path": "3"
    },
    "719": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "720": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "SUB",
      "path": "3"
    },
    "721": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "723": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "DUP2",
      "path": "3"
    },
    "724": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "LT",
      "path": "3"
    },
    "725": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "726": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DE"
    },
    "729": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "730": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "732": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "DUP1",
      "path": "3"
    },
    "733": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "REVERT",
      "path": "3"
    },
    "734": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "735": {
      "op": "POP"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "742": {
      "op": "SHL"
    },
    "743": {
      "op": "SUB"
    },
    "744": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "DUP2",
      "path": "3"
    },
    "745": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "746": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "AND",
      "path": "3"
    },
    "747": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "748": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "750": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "ADD",
      "path": "3"
    },
    "751": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "752": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6BA"
    },
    "755": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5547,
        5762
      ],
      "op": "JUMP",
      "path": "3"
    },
    "756": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "757": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x232"
    },
    "760": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "762": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "DUP1",
      "path": "10"
    },
    "763": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "764": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "SUB",
      "path": "10"
    },
    "765": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "767": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "DUP2",
      "path": "10"
    },
    "768": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "LT",
      "path": "10"
    },
    "769": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "770": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x30A"
    },
    "773": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "774": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "776": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "DUP1",
      "path": "10"
    },
    "777": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "REVERT",
      "path": "10"
    },
    "778": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "779": {
      "op": "POP"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "786": {
      "op": "SHL"
    },
    "787": {
      "op": "SUB"
    },
    "788": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "DUP2",
      "path": "10"
    },
    "789": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "790": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "AND",
      "path": "10"
    },
    "791": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "792": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "794": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "ADD",
      "path": "10"
    },
    "795": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "796": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x70D"
    },
    "799": {
      "fn": "HopeNobt.mint",
      "jump": "i",
      "offset": [
        1061,
        1158
      ],
      "op": "JUMP",
      "path": "10"
    },
    "800": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "801": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x346"
    },
    "804": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "806": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP1",
      "path": "10"
    },
    "807": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "808": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SUB",
      "path": "10"
    },
    "809": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "811": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP2",
      "path": "10"
    },
    "812": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "LT",
      "path": "10"
    },
    "813": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "814": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x336"
    },
    "817": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "818": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "820": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP1",
      "path": "10"
    },
    "821": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "REVERT",
      "path": "10"
    },
    "822": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "823": {
      "op": "POP"
    },
    "824": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "831": {
      "op": "SHL"
    },
    "832": {
      "op": "SUB"
    },
    "833": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "AND",
      "path": "10"
    },
    "834": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x774"
    },
    "837": {
      "fn": "HopeNobt.getReferrals",
      "jump": "i",
      "offset": [
        2036,
        2157
      ],
      "op": "JUMP",
      "path": "10"
    },
    "838": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "839": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "841": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP1",
      "path": "10"
    },
    "842": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "843": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "845": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP1",
      "path": "10"
    },
    "846": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP3",
      "path": "10"
    },
    "847": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "848": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP4",
      "path": "10"
    },
    "849": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "850": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP2",
      "path": "10"
    },
    "851": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP4",
      "path": "10"
    },
    "852": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "ADD",
      "path": "10"
    },
    "853": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "854": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP4",
      "path": "10"
    },
    "855": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "856": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "857": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "858": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP4",
      "path": "10"
    },
    "859": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "860": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "861": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP4",
      "path": "10"
    },
    "862": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "ADD",
      "path": "10"
    },
    "863": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "864": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP6",
      "path": "10"
    },
    "865": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP2",
      "path": "10"
    },
    "866": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "ADD",
      "path": "10"
    },
    "867": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "868": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "MUL",
      "path": "10"
    },
    "869": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP1",
      "path": "10"
    },
    "870": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP4",
      "path": "10"
    },
    "871": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP4",
      "path": "10"
    },
    "872": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "874": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "875": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP4",
      "path": "10"
    },
    "876": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP2",
      "path": "10"
    },
    "877": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "LT",
      "path": "10"
    },
    "878": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "879": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x382"
    },
    "882": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "883": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP2",
      "path": "10"
    },
    "884": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP2",
      "path": "10"
    },
    "885": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "ADD",
      "path": "10"
    },
    "886": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "887": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP4",
      "path": "10"
    },
    "888": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP3",
      "path": "10"
    },
    "889": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "ADD",
      "path": "10"
    },
    "890": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "891": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "893": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "ADD",
      "path": "10"
    },
    "894": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x36A"
    },
    "897": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "JUMP",
      "path": "10"
    },
    "898": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "899": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "POP",
      "path": "10"
    },
    "900": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "POP",
      "path": "10"
    },
    "901": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "POP",
      "path": "10"
    },
    "902": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "POP",
      "path": "10"
    },
    "903": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "904": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "POP",
      "path": "10"
    },
    "905": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "ADD",
      "path": "10"
    },
    "906": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "907": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "POP",
      "path": "10"
    },
    "908": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "POP",
      "path": "10"
    },
    "909": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "POP",
      "path": "10"
    },
    "910": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "912": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "913": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "DUP1",
      "path": "10"
    },
    "914": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "915": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SUB",
      "path": "10"
    },
    "916": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "917": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "RETURN",
      "path": "10"
    },
    "918": {
      "offset": [
        645,
        686
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "919": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3BC"
    },
    "922": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "924": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "DUP1",
      "path": "10"
    },
    "925": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "926": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "SUB",
      "path": "10"
    },
    "927": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "929": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "DUP2",
      "path": "10"
    },
    "930": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "LT",
      "path": "10"
    },
    "931": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "932": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3AC"
    },
    "935": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "936": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "938": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "DUP1",
      "path": "10"
    },
    "939": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "REVERT",
      "path": "10"
    },
    "940": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "941": {
      "op": "POP"
    },
    "942": {
      "offset": [
        645,
        686
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "947": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "949": {
      "op": "SHL"
    },
    "950": {
      "op": "SUB"
    },
    "951": {
      "offset": [
        645,
        686
      ],
      "op": "AND",
      "path": "10"
    },
    "952": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7ED"
    },
    "955": {
      "fn": "HopeNobt.getReferrals",
      "jump": "i",
      "offset": [
        645,
        686
      ],
      "op": "JUMP",
      "path": "10"
    },
    "956": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "957": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "959": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "DUP1",
      "path": "10"
    },
    "960": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "967": {
      "op": "SHL"
    },
    "968": {
      "op": "SUB"
    },
    "969": {
      "offset": [
        645,
        686
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "970": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "971": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "AND",
      "path": "10"
    },
    "972": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "DUP3",
      "path": "10"
    },
    "973": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "974": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "975": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "976": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "DUP2",
      "path": "10"
    },
    "977": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "978": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "SUB",
      "path": "10"
    },
    "979": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "981": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "ADD",
      "path": "10"
    },
    "982": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "983": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "RETURN",
      "path": "10"
    },
    "984": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "985": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23C"
    },
    "988": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "990": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "DUP1",
      "path": "3"
    },
    "991": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "992": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "SUB",
      "path": "3"
    },
    "993": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "995": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "DUP2",
      "path": "3"
    },
    "996": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "LT",
      "path": "3"
    },
    "997": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "998": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3EE"
    },
    "1001": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1002": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1004": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1005": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1006": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1015": {
      "op": "SHL"
    },
    "1016": {
      "op": "SUB"
    },
    "1017": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "AND",
      "path": "3"
    },
    "1018": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x808"
    },
    "1021": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3365,
        3482
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1022": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1023": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x232"
    },
    "1026": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x823"
    },
    "1029": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1030": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1031": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x232"
    },
    "1034": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1036": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1037": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1038": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "SUB",
      "path": "10"
    },
    "1039": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1041": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1042": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "LT",
      "path": "10"
    },
    "1043": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1044": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x41C"
    },
    "1047": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1048": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1050": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1051": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1052": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1053": {
      "op": "POP"
    },
    "1054": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "1055": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8D0"
    },
    "1058": {
      "fn": "HopeNobt.setEnd",
      "jump": "i",
      "offset": [
        1758,
        1905
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1059": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1060": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BC"
    },
    "1063": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x968"
    },
    "1066": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1067": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1068": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x451"
    },
    "1071": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1073": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1074": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1075": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "SUB",
      "path": "10"
    },
    "1076": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1078": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1079": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "LT",
      "path": "10"
    },
    "1080": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1081": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x441"
    },
    "1084": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1085": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1087": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1088": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1089": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1090": {
      "op": "POP"
    },
    "1091": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1098": {
      "op": "SHL"
    },
    "1099": {
      "op": "SUB"
    },
    "1100": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "AND",
      "path": "10"
    },
    "1101": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x97C"
    },
    "1104": {
      "fn": "HopeNobt.mySquad",
      "jump": "i",
      "offset": [
        2288,
        2427
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1105": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1106": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1108": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1109": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1110": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1111": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1112": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1113": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1115": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1116": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "ADD",
      "path": "10"
    },
    "1117": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1118": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1119": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1120": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1121": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1122": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1123": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1124": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1125": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1126": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "SUB",
      "path": "10"
    },
    "1127": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "ADD",
      "path": "10"
    },
    "1128": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1129": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "RETURN",
      "path": "10"
    },
    "1130": {
      "fn": "ERC20.symbol",
      "offset": [
        2360,
        2445
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1131": {
      "fn": "ERC20.symbol",
      "offset": [
        2360,
        2445
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "1134": {
      "fn": "ERC20.symbol",
      "offset": [
        2360,
        2445
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x991"
    },
    "1137": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2360,
        2445
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1138": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1139": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F0"
    },
    "1142": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1144": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1145": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1146": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "SUB",
      "path": "3"
    },
    "1147": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1149": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1150": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "LT",
      "path": "3"
    },
    "1151": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1152": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x488"
    },
    "1155": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1156": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1158": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1159": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1160": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1161": {
      "op": "POP"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1168": {
      "op": "SHL"
    },
    "1169": {
      "op": "SUB"
    },
    "1170": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1171": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1172": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "AND",
      "path": "3"
    },
    "1173": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1174": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1176": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "ADD",
      "path": "3"
    },
    "1177": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1178": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9F2"
    },
    "1181": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6249,
        6515
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1182": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1183": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F0"
    },
    "1186": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1188": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1189": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1190": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "SUB",
      "path": "10"
    },
    "1191": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1193": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1194": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "LT",
      "path": "10"
    },
    "1195": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1196": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4B4"
    },
    "1199": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1200": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1202": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1203": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1204": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1205": {
      "op": "POP"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "op": "SUB"
    },
    "1214": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1215": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "1216": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "AND",
      "path": "10"
    },
    "1217": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1218": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1220": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "ADD",
      "path": "10"
    },
    "1221": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "1222": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA5A"
    },
    "1225": {
      "fn": "HopeNobt.transfer",
      "jump": "i",
      "offset": [
        1164,
        1445
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1226": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1227": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23C"
    },
    "1230": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1232": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1233": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1234": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "SUB",
      "path": "3"
    },
    "1235": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1237": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1238": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "LT",
      "path": "3"
    },
    "1239": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1240": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E0"
    },
    "1243": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1244": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1246": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1247": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1248": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1249": {
      "op": "POP"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1256": {
      "op": "SHL"
    },
    "1257": {
      "op": "SUB"
    },
    "1258": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1259": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1260": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1261": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "AND",
      "path": "3"
    },
    "1262": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1263": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1265": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "ADD",
      "path": "3"
    },
    "1266": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1267": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "AND",
      "path": "3"
    },
    "1268": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA8F"
    },
    "1271": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3915,
        4064
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1272": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1273": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x346"
    },
    "1276": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1278": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1279": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1280": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "SUB",
      "path": "10"
    },
    "1281": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1283": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1284": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "LT",
      "path": "10"
    },
    "1285": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1286": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x50E"
    },
    "1289": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1290": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1292": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1293": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1294": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1295": {
      "op": "POP"
    },
    "1296": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1303": {
      "op": "SHL"
    },
    "1304": {
      "op": "SUB"
    },
    "1305": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "AND",
      "path": "10"
    },
    "1306": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xABA"
    },
    "1309": {
      "fn": "HopeNobt.getInvitees",
      "jump": "i",
      "offset": [
        2163,
        2282
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1311": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x232"
    },
    "1314": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1316": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1317": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1318": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "SUB",
      "path": "1"
    },
    "1319": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1321": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1322": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "LT",
      "path": "1"
    },
    "1323": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1324": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x534"
    },
    "1327": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1328": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1330": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1331": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1332": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1333": {
      "op": "POP"
    },
    "1334": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1341": {
      "op": "SHL"
    },
    "1342": {
      "op": "SUB"
    },
    "1343": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "AND",
      "path": "1"
    },
    "1344": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB31"
    },
    "1347": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1348": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1349": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x3"
    },
    "1351": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1352": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1353": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1355": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1356": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1357": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1359": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1361": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1365": {
      "op": "NOT"
    },
    "1366": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1369": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1371": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1372": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "AND",
      "path": "3"
    },
    "1373": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1374": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MUL",
      "path": "3"
    },
    "1375": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1376": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1377": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1378": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "AND",
      "path": "3"
    },
    "1379": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1380": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1381": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1382": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DIV",
      "path": "3"
    },
    "1383": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1384": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1385": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1386": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1387": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1388": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DIV",
      "path": "3"
    },
    "1389": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1390": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MUL",
      "path": "3"
    },
    "1391": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1392": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1393": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1394": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1395": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1396": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1397": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1398": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1399": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1400": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1401": {
      "fn": "ERC20.name",
      "offset": [
        2203,
        2216
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1403": {
      "fn": "ERC20.name",
      "offset": [
        2203,
        2216
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1404": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1405": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1406": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1407": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1408": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1409": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1410": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1411": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1412": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1413": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1414": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5D0"
    },
    "1417": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1418": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1419": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1421": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "LT",
      "path": "3"
    },
    "1422": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A5"
    },
    "1425": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1426": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1429": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1430": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1431": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1432": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DIV",
      "path": "3"
    },
    "1433": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MUL",
      "path": "3"
    },
    "1434": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1435": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1436": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1437": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1439": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1440": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1441": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5D0"
    },
    "1444": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1445": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1446": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1447": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1448": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1449": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1450": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1452": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1453": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1455": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1457": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1458": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1459": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1460": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1461": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1462": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1463": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1464": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1465": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1467": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1468": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1469": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1471": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1472": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1473": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1474": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "GT",
      "path": "3"
    },
    "1475": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B3"
    },
    "1478": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1479": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1480": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1481": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SUB",
      "path": "3"
    },
    "1482": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1484": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "AND",
      "path": "3"
    },
    "1485": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1486": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1487": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1488": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1489": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1490": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1491": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1492": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1493": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1494": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1495": {
      "fn": "ERC20.name",
      "offset": [
        2228,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1496": {
      "fn": "ERC20.name",
      "offset": [
        2166,
        2247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1497": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2166,
        2247
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1498": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1499": {
      "fn": "ERC20.approve",
      "offset": [
        4285,
        4289
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1501": {
      "fn": "ERC20.approve",
      "offset": [
        4301,
        4340
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 1,
      "value": "0x5EE"
    },
    "1504": {
      "fn": "ERC20.approve",
      "offset": [
        4310,
        4322
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E7"
    },
    "1507": {
      "fn": "ERC20.approve",
      "offset": [
        4310,
        4320
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC94"
    },
    "1510": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4310,
        4322
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1511": {
      "fn": "ERC20.approve",
      "offset": [
        4310,
        4322
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1512": {
      "fn": "ERC20.approve",
      "offset": [
        4324,
        4331
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1513": {
      "fn": "ERC20.approve",
      "offset": [
        4333,
        4339
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1514": {
      "fn": "ERC20.approve",
      "offset": [
        4301,
        4309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC98"
    },
    "1517": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4301,
        4340
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1518": {
      "fn": "ERC20.approve",
      "offset": [
        4301,
        4340
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "fn": "ERC20.approve",
      "offset": [
        4357,
        4361
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x1"
    },
    "1522": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1523": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1524": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1525": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "POP",
      "path": "3"
    },
    "1526": {
      "fn": "ERC20.approve",
      "offset": [
        4202,
        4368
      ],
      "op": "POP",
      "path": "3"
    },
    "1527": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4202,
        4368
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1528": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1529": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x600"
    },
    "1532": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC94"
    },
    "1535": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1536": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1537": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1539": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1540": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1543": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1544": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1287,
        1293
      ],
      "op": "DIV",
      "path": "1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1551": {
      "op": "SHL"
    },
    "1552": {
      "op": "SUB"
    },
    "1553": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1554": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1555": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "1556": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1557": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "1558": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "1559": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x655"
    },
    "1562": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1563": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1565": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1566": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1567": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1573": {
      "op": "SHL"
    },
    "1574": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1575": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1576": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1578": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1580": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1581": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1582": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1583": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1584": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1585": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1587": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1588": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1589": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1592": {
      "op": "DUP1"
    },
    "1593": {
      "op": "MLOAD"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1596": {
      "op": "PUSH2",
      "value": "0x15AA"
    },
    "1599": {
      "op": "DUP4"
    },
    "1600": {
      "op": "CODECOPY"
    },
    "1601": {
      "op": "DUP2"
    },
    "1602": {
      "op": "MLOAD"
    },
    "1603": {
      "op": "SWAP2"
    },
    "1604": {
      "op": "MSTORE"
    },
    "1605": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1607": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1608": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1609": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1610": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1611": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1612": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1613": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1614": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1615": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "1616": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1618": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1619": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1620": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1621": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1622": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1996,
        2023
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 3,
      "value": "0x65F"
    },
    "1625": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        2003,
        2010
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1626": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        2012,
        2022
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1627": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1996,
        2002
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD84"
    },
    "1630": {
      "fn": "HopeNobt.addReferral",
      "jump": "i",
      "offset": [
        1996,
        2023
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1631": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1996,
        2023
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1632": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "POP",
      "path": "10"
    },
    "1633": {
      "fn": "HopeNobt.addReferral",
      "offset": [
        1911,
        2030
      ],
      "op": "POP",
      "path": "10"
    },
    "1634": {
      "fn": "HopeNobt.addReferral",
      "jump": "o",
      "offset": [
        1911,
        2030
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1635": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1636": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3288,
        3300
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x2"
    },
    "1638": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3288,
        3300
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1639": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3209,
        3307
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1640": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3209,
        3307
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1641": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1642": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1557,
        1561
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1644": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1577,
        1622
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x676"
    },
    "1647": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1596,
        1602
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1648": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1604,
        1613
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1649": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1615,
        1621
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1650": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1577,
        1595
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEBD"
    },
    "1653": {
      "fn": "HopeNobt.transferFrom",
      "jump": "i",
      "offset": [
        1577,
        1622
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1654": {
      "branch": 73,
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1577,
        1622
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1655": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1573,
        1725
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1656": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1573,
        1725
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x691"
    },
    "1659": {
      "branch": 73,
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1573,
        1725
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1660": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1638,
        1675
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 5,
      "value": "0x686"
    },
    "1663": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1649,
        1655
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1664": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1657,
        1666
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1665": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1668,
        1674
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1666": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1638,
        1648
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF35"
    },
    "1669": {
      "fn": "HopeNobt.transferFrom",
      "jump": "i",
      "offset": [
        1638,
        1675
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1670": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1638,
        1675
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1671": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1638,
        1675
      ],
      "op": "POP",
      "path": "10"
    },
    "1672": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1689,
        1714
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 6,
      "value": "0x691"
    },
    "1675": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1696,
        1702
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1676": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1704,
        1713
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1677": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1689,
        1695
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD84"
    },
    "1680": {
      "fn": "HopeNobt.transferFrom",
      "jump": "i",
      "offset": [
        1689,
        1714
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1681": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1689,
        1714
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1682": {
      "op": "POP"
    },
    "1683": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1741,
        1745
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 7,
      "value": "0x1"
    },
    "1685": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1686": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1687": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1688": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "POP",
      "path": "10"
    },
    "1689": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "POP",
      "path": "10"
    },
    "1690": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        1451,
        1752
      ],
      "op": "POP",
      "path": "10"
    },
    "1691": {
      "fn": "HopeNobt.transferFrom",
      "jump": "o",
      "offset": [
        1451,
        1752
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1692": {
      "offset": [
        598,
        639
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1693": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "1695": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1697": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1698": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1700": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1701": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1702": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1703": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1705": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1706": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1707": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1709": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "ADD",
      "path": "10"
    },
    "1710": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1711": {
      "fn": "HopeNobt.transferFrom",
      "offset": [
        598,
        639
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1712": {
      "fn": "HopeNobt.transferFrom",
      "jump": "o",
      "offset": [
        598,
        639
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1713": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1714": {
      "fn": "ERC20.decimals",
      "offset": [
        3133,
        3142
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x5"
    },
    "1716": {
      "fn": "ERC20.decimals",
      "offset": [
        3133,
        3142
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1717": {
      "fn": "ERC20.decimals",
      "offset": [
        3133,
        3142
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1719": {
      "fn": "ERC20.decimals",
      "offset": [
        3133,
        3142
      ],
      "op": "AND",
      "path": "3"
    },
    "1720": {
      "fn": "ERC20.decimals",
      "offset": [
        3068,
        3149
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1721": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3068,
        3149
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1722": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5547,
        5762
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1723": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5635,
        5639
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1725": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5651,
        5734
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 9,
      "value": "0x5EE"
    },
    "1728": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5660,
        5672
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6C7"
    },
    "1731": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5660,
        5670
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC94"
    },
    "1734": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5660,
        5672
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1735": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5660,
        5672
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1736": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5674,
        5681
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1737": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x708"
    },
    "1740": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5722,
        5732
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1741": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5694
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1743": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1745": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5695,
        5707
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6D8"
    },
    "1748": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5695,
        5705
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC94"
    },
    "1751": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5695,
        5707
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1752": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5695,
        5707
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1759": {
      "op": "SHL"
    },
    "1760": {
      "op": "SUB"
    },
    "1761": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1762": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1763": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "AND",
      "path": "3"
    },
    "1764": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1765": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1766": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1768": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1769": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1770": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "ADD",
      "path": "3"
    },
    "1771": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1772": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1773": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1774": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1775": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1777": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1778": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1779": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "ADD",
      "path": "3"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1782": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1783": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1784": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5708
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1785": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1786": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "DUP13",
      "path": "3"
    },
    "1787": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "AND",
      "path": "3"
    },
    "1788": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1789": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1790": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1791": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1792": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1793": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1794": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1795": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5717
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1796": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5721
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC3A"
    },
    "1799": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5683,
        5733
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1800": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5683,
        5733
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1801": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5651,
        5659
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC98"
    },
    "1804": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5651,
        5734
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1805": {
      "fn": "HopeNobt.mint",
      "offset": [
        1061,
        1158
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1806": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x715"
    },
    "1809": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC94"
    },
    "1812": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1813": {
      "fn": "HopeNobt.mint",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1814": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1816": {
      "fn": "HopeNobt.mint",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1817": {
      "fn": "HopeNobt.mint",
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1820": {
      "fn": "HopeNobt.mint",
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1821": {
      "fn": "HopeNobt.mint",
      "offset": [
        1287,
        1293
      ],
      "op": "DIV",
      "path": "1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "op": "SUB"
    },
    "1830": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1831": {
      "fn": "HopeNobt.mint",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1832": {
      "fn": "HopeNobt.mint",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "1833": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1834": {
      "fn": "HopeNobt.mint",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "1835": {
      "fn": "HopeNobt.mint",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "1836": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x76A"
    },
    "1839": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1840": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1842": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1843": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1850": {
      "op": "SHL"
    },
    "1851": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1852": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1853": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1855": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1857": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1858": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1859": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1860": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1861": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1862": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1864": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1865": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1866": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1869": {
      "op": "DUP1"
    },
    "1870": {
      "op": "MLOAD"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1873": {
      "op": "PUSH2",
      "value": "0x15AA"
    },
    "1876": {
      "op": "DUP4"
    },
    "1877": {
      "op": "CODECOPY"
    },
    "1878": {
      "op": "DUP2"
    },
    "1879": {
      "op": "MLOAD"
    },
    "1880": {
      "op": "SWAP2"
    },
    "1881": {
      "op": "MSTORE"
    },
    "1882": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1884": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1885": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1886": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1887": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1888": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1889": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1890": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1891": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1892": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "1893": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1895": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "1896": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1897": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1898": {
      "fn": "HopeNobt.mint",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1899": {
      "fn": "HopeNobt.mint",
      "offset": [
        1132,
        1151
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 10,
      "value": "0x65F"
    },
    "1902": {
      "fn": "HopeNobt.mint",
      "offset": [
        1138,
        1141
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1903": {
      "fn": "HopeNobt.mint",
      "offset": [
        1143,
        1150
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1904": {
      "fn": "HopeNobt.mint",
      "offset": [
        1132,
        1137
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1082"
    },
    "1907": {
      "fn": "HopeNobt.mint",
      "jump": "i",
      "offset": [
        1132,
        1151
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1908": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1915": {
      "op": "SHL"
    },
    "1916": {
      "op": "SUB"
    },
    "1917": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 11
    },
    "1918": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "AND",
      "path": "10"
    },
    "1919": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1921": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1922": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1923": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1924": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2133
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "1926": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1928": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1929": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1930": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1931": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1933": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1934": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1935": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1936": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2140
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1937": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2150
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1939": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2150
      ],
      "op": "ADD",
      "path": "10"
    },
    "1940": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1941": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1942": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1943": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1944": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1945": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1946": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "MUL",
      "path": "10"
    },
    "1947": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1948": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "ADD",
      "path": "10"
    },
    "1949": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1950": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "ADD",
      "path": "10"
    },
    "1951": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1952": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1953": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1954": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1955": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1956": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1957": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2094,
        2110
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "1959": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2094,
        2110
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1960": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1961": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1962": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "ADD",
      "path": "10"
    },
    "1963": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2128,
        2150
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1964": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1965": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1966": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1967": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7E1"
    },
    "1970": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1971": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1973": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "MUL",
      "path": "10"
    },
    "1974": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1975": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "ADD",
      "path": "10"
    },
    "1976": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1977": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1978": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1980": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1981": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1983": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1985": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1986": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1987": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1988": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1989": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1996": {
      "op": "SHL"
    },
    "1997": {
      "op": "SUB"
    },
    "1998": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "AND",
      "path": "10"
    },
    "1999": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2000": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2001": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2003": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2004": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2005": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "ADD",
      "path": "10"
    },
    "2006": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2007": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2009": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "ADD",
      "path": "10"
    },
    "2010": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2011": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2012": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "GT",
      "path": "10"
    },
    "2013": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7C3"
    },
    "2016": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2017": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2018": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "POP",
      "path": "10"
    },
    "2019": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "POP",
      "path": "10"
    },
    "2020": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "POP",
      "path": "10"
    },
    "2021": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "POP",
      "path": "10"
    },
    "2022": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "POP",
      "path": "10"
    },
    "2023": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2024": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2121,
        2150
      ],
      "op": "POP",
      "path": "10"
    },
    "2025": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2026": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2027": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        2036,
        2157
      ],
      "op": "POP",
      "path": "10"
    },
    "2028": {
      "fn": "HopeNobt.getReferrals",
      "jump": "o",
      "offset": [
        2036,
        2157
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2029": {
      "offset": [
        645,
        686
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2030": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xD"
    },
    "2032": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2034": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2035": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2037": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2038": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2039": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2040": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2042": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2043": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2044": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2051": {
      "op": "SHL"
    },
    "2052": {
      "op": "SUB"
    },
    "2053": {
      "offset": [
        645,
        686
      ],
      "op": "AND",
      "path": "10"
    },
    "2054": {
      "fn": "HopeNobt.getReferrals",
      "offset": [
        645,
        686
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2055": {
      "fn": "HopeNobt.getReferrals",
      "jump": "o",
      "offset": [
        645,
        686
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2056": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3365,
        3482
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2063": {
      "op": "SHL"
    },
    "2064": {
      "op": "SUB"
    },
    "2065": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "AND",
      "path": "3",
      "statement": 12
    },
    "2066": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3431,
        3438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2068": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2069": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2070": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2071": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2073": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2074": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2075": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2076": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2078": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2079": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2080": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2081": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3457,
        3475
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2082": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3365,
        3482
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2083": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2084": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x82B"
    },
    "2087": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC94"
    },
    "2090": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2091": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2092": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2094": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2095": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2098": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2099": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "DIV",
      "path": "1"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2106": {
      "op": "SHL"
    },
    "2107": {
      "op": "SUB"
    },
    "2108": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2109": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2110": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "2111": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2112": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "2113": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "2114": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x880"
    },
    "2117": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2118": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2120": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2121": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2122": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2128": {
      "op": "SHL"
    },
    "2129": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2130": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2131": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2133": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2135": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2136": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2137": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2138": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2139": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2140": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2142": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2143": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2144": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2147": {
      "op": "DUP1"
    },
    "2148": {
      "op": "MLOAD"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2151": {
      "op": "PUSH2",
      "value": "0x15AA"
    },
    "2154": {
      "op": "DUP4"
    },
    "2155": {
      "op": "CODECOPY"
    },
    "2156": {
      "op": "DUP2"
    },
    "2157": {
      "op": "MLOAD"
    },
    "2158": {
      "op": "SWAP2"
    },
    "2159": {
      "op": "MSTORE"
    },
    "2160": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2162": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2163": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2164": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2165": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2166": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2167": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2168": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2169": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2170": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "2171": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2173": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2174": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2175": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2176": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2177": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 13,
      "value": "0x5"
    },
    "2179": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2180": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2182": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2183": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2185": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2186": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2189": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2190": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "DIV",
      "path": "1"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2197": {
      "op": "SHL"
    },
    "2198": {
      "op": "SUB"
    },
    "2199": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "AND",
      "path": "1"
    },
    "2200": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1796,
        1802
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2201": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2234": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2235": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2236": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1812,
        1813
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2237": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1815
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2238": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1831
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x5"
    },
    "2240": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2241": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2242": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2249": {
      "op": "SHL"
    },
    "2250": {
      "op": "SUB"
    },
    "2251": {
      "op": "NOT"
    },
    "2252": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "AND",
      "path": "1"
    },
    "2253": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2254": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1825,
        1844
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2255": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1706,
        1851
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2256": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2257": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D8"
    },
    "2260": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC94"
    },
    "2263": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2264": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2265": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2267": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2268": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2271": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2272": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1287,
        1293
      ],
      "op": "DIV",
      "path": "1"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2279": {
      "op": "SHL"
    },
    "2280": {
      "op": "SUB"
    },
    "2281": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2282": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2283": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "2284": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2285": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "2286": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "2287": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x92D"
    },
    "2290": {
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2291": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2293": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2294": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2295": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2301": {
      "op": "SHL"
    },
    "2302": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2303": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2304": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2306": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2308": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2309": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2310": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2311": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2312": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2313": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2315": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2316": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2317": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2320": {
      "op": "DUP1"
    },
    "2321": {
      "op": "MLOAD"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2324": {
      "op": "PUSH2",
      "value": "0x15AA"
    },
    "2327": {
      "op": "DUP4"
    },
    "2328": {
      "op": "CODECOPY"
    },
    "2329": {
      "op": "DUP2"
    },
    "2330": {
      "op": "MLOAD"
    },
    "2331": {
      "op": "SWAP2"
    },
    "2332": {
      "op": "MSTORE"
    },
    "2333": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2335": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2336": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2337": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2338": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2339": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2340": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2341": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2342": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2343": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "2344": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2346": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2347": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2348": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2349": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2350": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1826,
        1840
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 15,
      "value": "0x9"
    },
    "2352": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1826,
        1858
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2353": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1826,
        1858
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2354": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1826,
        1858
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2355": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 16,
      "value": "0x40"
    },
    "2357": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2358": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2359": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2360": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2361": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2362": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2363": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2364": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x2E20F3BA2581CFFA5B994FACD646056498993A84A4452367B91A3BE061B2EA9F"
    },
    "2397": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2398": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2399": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2400": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "SUB",
      "path": "10"
    },
    "2401": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2403": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "ADD",
      "path": "10"
    },
    "2404": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2405": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1873,
        1898
      ],
      "op": "LOG1",
      "path": "10"
    },
    "2406": {
      "fn": "HopeNobt.setEnd",
      "offset": [
        1758,
        1905
      ],
      "op": "POP",
      "path": "10"
    },
    "2407": {
      "fn": "HopeNobt.setEnd",
      "jump": "o",
      "offset": [
        1758,
        1905
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2408": {
      "fn": "Ownable.owner",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2409": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x5"
    },
    "2411": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2412": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2415": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2416": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "DIV",
      "path": "1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2423": {
      "op": "SHL"
    },
    "2424": {
      "op": "SUB"
    },
    "2425": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "AND",
      "path": "1"
    },
    "2426": {
      "fn": "Ownable.owner",
      "offset": [
        1147,
        1153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2427": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1083,
        1160
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2428": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2429": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2341,
        2359
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2431": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2361,
        2380
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2432": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2399,
        2420
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 18,
      "value": "0x988"
    },
    "2435": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2414,
        2419
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2436": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2399,
        2413
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1172"
    },
    "2439": {
      "fn": "HopeNobt.mySquad",
      "jump": "i",
      "offset": [
        2399,
        2420
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2440": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2399,
        2420
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2441": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2392,
        2420
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2442": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2392,
        2420
      ],
      "op": "POP",
      "path": "10"
    },
    "2443": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2392,
        2420
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2444": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2392,
        2420
      ],
      "op": "POP",
      "path": "10"
    },
    "2445": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2446": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "POP",
      "path": "10"
    },
    "2447": {
      "fn": "HopeNobt.mySquad",
      "offset": [
        2288,
        2427
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2448": {
      "fn": "HopeNobt.mySquad",
      "jump": "o",
      "offset": [
        2288,
        2427
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2449": {
      "fn": "ERC20.symbol",
      "offset": [
        2360,
        2445
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2450": {
      "fn": "ERC20.symbol",
      "offset": [
        2431,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 19,
      "value": "0x4"
    },
    "2452": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2453": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2454": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2456": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2457": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2458": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2460": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2462": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2466": {
      "op": "NOT"
    },
    "2467": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2470": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2472": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2473": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "AND",
      "path": "3"
    },
    "2474": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2475": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MUL",
      "path": "3"
    },
    "2476": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ADD",
      "path": "3"
    },
    "2477": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2478": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "2479": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "AND",
      "path": "3"
    },
    "2480": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2481": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2482": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2483": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DIV",
      "path": "3"
    },
    "2484": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2485": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2486": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ADD",
      "path": "3"
    },
    "2487": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2488": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2489": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DIV",
      "path": "3"
    },
    "2490": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2491": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MUL",
      "path": "3"
    },
    "2492": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2493": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ADD",
      "path": "3"
    },
    "2494": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2495": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ADD",
      "path": "3"
    },
    "2496": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2497": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2498": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2499": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2500": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2501": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2502": {
      "fn": "ERC20.symbol",
      "offset": [
        2399,
        2412
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2504": {
      "fn": "ERC20.symbol",
      "offset": [
        2399,
        2412
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2505": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2506": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2507": {
      "fn": "ERC20.symbol",
      "offset": [
        2431,
        2438
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2508": {
      "fn": "ERC20.symbol",
      "offset": [
        2431,
        2438
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2509": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2510": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ADD",
      "path": "3"
    },
    "2511": {
      "fn": "ERC20.symbol",
      "offset": [
        2431,
        2438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2512": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2513": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2514": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2515": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5D0"
    },
    "2518": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2519": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2520": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2522": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "LT",
      "path": "3"
    },
    "2523": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A5"
    },
    "2526": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2527": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2530": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2531": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2532": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2533": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DIV",
      "path": "3"
    },
    "2534": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MUL",
      "path": "3"
    },
    "2535": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2536": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2537": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2538": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2540": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "ADD",
      "path": "3"
    },
    "2541": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2542": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5D0"
    },
    "2545": {
      "fn": "ERC20.symbol",
      "offset": [
        2424,
        2438
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2546": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6249,
        6515
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2547": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6342,
        6346
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2549": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6358,
        6487
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 20,
      "value": "0x5EE"
    },
    "2552": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6367,
        6379
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9FF"
    },
    "2555": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6367,
        6377
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC94"
    },
    "2558": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6367,
        6379
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2559": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6367,
        6379
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2560": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6381,
        6388
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2561": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x708"
    },
    "2564": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6429,
        6444
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2565": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2567": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2568": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2569": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2571": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "ADD",
      "path": "3"
    },
    "2572": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2574": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2575": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2576": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "2578": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2579": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2580": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2582": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "ADD",
      "path": "3"
    },
    "2583": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1613"
    },
    "2586": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "2588": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2589": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "2590": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2592": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2594": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6402,
        6414
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA29"
    },
    "2597": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6402,
        6412
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC94"
    },
    "2600": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6402,
        6414
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2601": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6402,
        6414
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2608": {
      "op": "SHL"
    },
    "2609": {
      "op": "SUB"
    },
    "2610": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2611": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2612": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "AND",
      "path": "3"
    },
    "2613": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2614": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2615": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2617": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2618": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2619": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "ADD",
      "path": "3"
    },
    "2620": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2621": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2622": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2623": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2624": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2626": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2627": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2628": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "ADD",
      "path": "3"
    },
    "2629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2631": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2632": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2633": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6415
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2634": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2635": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "DUP14",
      "path": "3"
    },
    "2636": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "AND",
      "path": "3"
    },
    "2637": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2638": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2639": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2640": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2641": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2642": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2643": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2644": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6424
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2645": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6486
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2646": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6390,
        6428
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x126F"
    },
    "2649": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6390,
        6486
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2650": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1164,
        1445
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2651": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1250,
        1254
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2653": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1270,
        1303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA66"
    },
    "2656": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1285,
        1294
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2657": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1296,
        1302
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2658": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1270,
        1284
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1306"
    },
    "2661": {
      "fn": "HopeNobt.transfer",
      "jump": "i",
      "offset": [
        1270,
        1303
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2662": {
      "branch": 74,
      "fn": "HopeNobt.transfer",
      "offset": [
        1270,
        1303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2663": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1266,
        1418
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2664": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1266,
        1418
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5EE"
    },
    "2667": {
      "branch": 74,
      "fn": "HopeNobt.transfer",
      "offset": [
        1266,
        1418
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2668": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1319,
        1362
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 21,
      "value": "0xA7D"
    },
    "2671": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1330,
        1342
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA76"
    },
    "2674": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1330,
        1340
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC94"
    },
    "2677": {
      "fn": "HopeNobt.transfer",
      "jump": "i",
      "offset": [
        1330,
        1342
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2678": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1330,
        1342
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2679": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1344,
        1353
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2680": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1355,
        1361
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2681": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1319,
        1329
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF35"
    },
    "2684": {
      "fn": "HopeNobt.transfer",
      "jump": "i",
      "offset": [
        1319,
        1362
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2685": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1319,
        1362
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2686": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1319,
        1362
      ],
      "op": "POP",
      "path": "10"
    },
    "2687": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1376,
        1407
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 22,
      "value": "0x5EE"
    },
    "2690": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1383,
        1395
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA89"
    },
    "2693": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1383,
        1393
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC94"
    },
    "2696": {
      "fn": "HopeNobt.transfer",
      "jump": "i",
      "offset": [
        1383,
        1395
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2697": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1383,
        1395
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2698": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1397,
        1406
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2699": {
      "fn": "HopeNobt.transfer",
      "offset": [
        1376,
        1382
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD84"
    },
    "2702": {
      "fn": "HopeNobt.transfer",
      "jump": "i",
      "offset": [
        1376,
        1407
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2703": {
      "fn": "ERC20.allowance",
      "offset": [
        3915,
        4064
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2710": {
      "op": "SHL"
    },
    "2711": {
      "op": "SUB"
    },
    "2712": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 23
    },
    "2713": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2714": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "AND",
      "path": "3"
    },
    "2715": {
      "fn": "ERC20.allowance",
      "offset": [
        4004,
        4011
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2717": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2718": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2719": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2720": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4041
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2722": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2724": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2725": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2726": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2727": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2729": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2730": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2731": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4048
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2732": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2733": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2734": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2735": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "AND",
      "path": "3"
    },
    "2736": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2737": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2738": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2739": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2740": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2741": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2742": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2743": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2744": {
      "fn": "ERC20.allowance",
      "offset": [
        4030,
        4057
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2745": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3915,
        4064
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2746": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2753": {
      "op": "SHL"
    },
    "2754": {
      "op": "SUB"
    },
    "2755": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 24
    },
    "2756": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "AND",
      "path": "10"
    },
    "2757": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2759": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2760": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2761": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2762": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2259
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "2764": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2766": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2767": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2768": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2769": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2771": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2772": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2773": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2774": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2266
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2775": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2275
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2777": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2275
      ],
      "op": "ADD",
      "path": "10"
    },
    "2778": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2779": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2780": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2781": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2782": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2783": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2784": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "MUL",
      "path": "10"
    },
    "2785": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2786": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "ADD",
      "path": "10"
    },
    "2787": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2788": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "ADD",
      "path": "10"
    },
    "2789": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2790": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2791": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2792": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2793": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2794": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2795": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2220,
        2236
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2797": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2220,
        2236
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "2798": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2799": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2800": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "ADD",
      "path": "10"
    },
    "2801": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2254,
        2275
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2802": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2803": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2804": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2805": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7E1"
    },
    "2808": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2809": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2811": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "MUL",
      "path": "10"
    },
    "2812": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2813": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "ADD",
      "path": "10"
    },
    "2814": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2815": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2816": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2818": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2819": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2821": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2823": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2824": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2825": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2826": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2833": {
      "op": "SHL"
    },
    "2834": {
      "op": "SUB"
    },
    "2835": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "AND",
      "path": "10"
    },
    "2836": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2837": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2838": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2840": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2841": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2842": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "ADD",
      "path": "10"
    },
    "2843": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2844": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2846": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "ADD",
      "path": "10"
    },
    "2847": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2848": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2849": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "GT",
      "path": "10"
    },
    "2850": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7C3"
    },
    "2853": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2854": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "POP",
      "path": "10"
    },
    "2855": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "POP",
      "path": "10"
    },
    "2856": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "POP",
      "path": "10"
    },
    "2857": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "POP",
      "path": "10"
    },
    "2858": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "POP",
      "path": "10"
    },
    "2859": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2860": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2247,
        2275
      ],
      "op": "POP",
      "path": "10"
    },
    "2861": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2862": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2863": {
      "fn": "HopeNobt.getInvitees",
      "offset": [
        2163,
        2282
      ],
      "op": "POP",
      "path": "10"
    },
    "2864": {
      "fn": "HopeNobt.getInvitees",
      "jump": "o",
      "offset": [
        2163,
        2282
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2865": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2866": {
      "offset": [
        1297,
        1309
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB39"
    },
    "2869": {
      "offset": [
        1297,
        1307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC94"
    },
    "2872": {
      "jump": "i",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2873": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1309
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2874": {
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2877": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2880": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2881": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "DIV",
      "path": "1"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2888": {
      "op": "SHL"
    },
    "2889": {
      "op": "SUB"
    },
    "2890": {
      "offset": [
        1287,
        1293
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2891": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2892": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1293
      ],
      "op": "AND",
      "path": "1"
    },
    "2893": {
      "offset": [
        1287,
        1309
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2894": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "AND",
      "path": "1"
    },
    "2895": {
      "branch": 92,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1287,
        1309
      ],
      "op": "EQ",
      "path": "1"
    },
    "2896": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB8E"
    },
    "2899": {
      "branch": 92,
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2900": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2902": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2903": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2910": {
      "op": "SHL"
    },
    "2911": {
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2912": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2917": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2919": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2920": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2922": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2925": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2926": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2929": {
      "op": "DUP1"
    },
    "2930": {
      "op": "MLOAD"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2933": {
      "op": "PUSH2",
      "value": "0x15AA"
    },
    "2936": {
      "op": "DUP4"
    },
    "2937": {
      "op": "CODECOPY"
    },
    "2938": {
      "op": "DUP2"
    },
    "2939": {
      "op": "MLOAD"
    },
    "2940": {
      "op": "SWAP2"
    },
    "2941": {
      "op": "MSTORE"
    },
    "2942": {
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2944": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2945": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2946": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2947": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2948": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2949": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2950": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2951": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2952": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SUB",
      "path": "1"
    },
    "2953": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2955": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "ADD",
      "path": "1"
    },
    "2956": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2957": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2958": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1279,
        1346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2965": {
      "op": "SHL"
    },
    "2966": {
      "op": "SUB"
    },
    "2967": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2088,
        2110
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 25
    },
    "2968": {
      "branch": 93,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2088,
        2110
      ],
      "op": "AND",
      "path": "1"
    },
    "2969": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBD3"
    },
    "2972": {
      "branch": 93,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2973": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2975": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2982": {
      "op": "SHL"
    },
    "2983": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2985": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2987": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "2988": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2989": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2990": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "2993": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2994": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2995": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SUB",
      "path": "1"
    },
    "2996": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2997": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2998": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x26"
    },
    "3000": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3001": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3002": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3004": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "3005": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3006": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F3"
    },
    "3009": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x26"
    },
    "3011": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3012": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "3013": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3015": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "ADD",
      "path": "1"
    },
    "3016": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3017": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "POP",
      "path": "1"
    },
    "3018": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "POP",
      "path": "1"
    },
    "3019": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3021": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3022": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3023": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3024": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SUB",
      "path": "1"
    },
    "3025": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3026": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3027": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2080,
        2153
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3028": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 26,
      "value": "0x5"
    },
    "3030": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3031": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3033": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3040": {
      "op": "SHL"
    },
    "3041": {
      "op": "SUB"
    },
    "3042": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3043": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3044": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "AND",
      "path": "1"
    },
    "3045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3046": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3049": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "DIV",
      "path": "1"
    },
    "3051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "AND",
      "path": "1"
    },
    "3052": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2189,
        2195
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3053": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3086": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3087": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3089": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3090": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2168,
        2206
      ],
      "op": "LOG3",
      "path": "1"
    },
    "3091": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2222
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 27,
      "value": "0x5"
    },
    "3093": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3094": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3101": {
      "op": "SHL"
    },
    "3102": {
      "op": "SUB"
    },
    "3103": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3104": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3105": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "AND",
      "path": "1"
    },
    "3106": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3109": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "MUL",
      "path": "1"
    },
    "3110": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3117": {
      "op": "SHL"
    },
    "3118": {
      "op": "SUB"
    },
    "3119": {
      "op": "NOT"
    },
    "3120": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3121": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3122": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "AND",
      "path": "1"
    },
    "3123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3126": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "OR",
      "path": "1"
    },
    "3127": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3128": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2216,
        2233
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3129": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2000,
        2240
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3130": {
      "fn": "SafeMath.add",
      "offset": [
        882,
        1058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3131": {
      "fn": "SafeMath.add",
      "offset": [
        940,
        947
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3133": {
      "fn": "SafeMath.add",
      "offset": [
        971,
        976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3134": {
      "fn": "SafeMath.add",
      "offset": [
        971,
        976
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3135": {
      "fn": "SafeMath.add",
      "offset": [
        971,
        976
      ],
      "op": "ADD",
      "path": "2"
    },
    "3136": {
      "fn": "SafeMath.add",
      "offset": [
        994,
        1000
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 28
    },
    "3137": {
      "fn": "SafeMath.add",
      "offset": [
        994,
        1000
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3138": {
      "fn": "SafeMath.add",
      "offset": [
        994,
        1000
      ],
      "op": "LT",
      "path": "2"
    },
    "3139": {
      "branch": 94,
      "fn": "SafeMath.add",
      "offset": [
        994,
        1000
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3140": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x695"
    },
    "3143": {
      "branch": 94,
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3144": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3146": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3147": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3156": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3157": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3159": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3161": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3162": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "ADD",
      "path": "2"
    },
    "3163": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3164": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1B"
    },
    "3166": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "3168": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3169": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "ADD",
      "path": "2"
    },
    "3170": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3171": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "3204": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "3206": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3207": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "ADD",
      "path": "2"
    },
    "3208": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3209": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3210": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3211": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3212": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3213": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3214": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "SUB",
      "path": "2"
    },
    "3215": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "3217": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "ADD",
      "path": "2"
    },
    "3218": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3219": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        1032
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3220": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3221": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 29
    },
    "3222": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3223": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3224": {
      "fn": "ERC20._approve",
      "offset": [
        9313,
        9653
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3231": {
      "op": "SHL"
    },
    "3232": {
      "op": "SUB"
    },
    "3233": {
      "fn": "ERC20._approve",
      "offset": [
        9414,
        9433
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 30
    },
    "3234": {
      "branch": 87,
      "fn": "ERC20._approve",
      "offset": [
        9414,
        9433
      ],
      "op": "AND",
      "path": "3"
    },
    "3235": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCDD"
    },
    "3238": {
      "branch": 87,
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3239": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3241": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3248": {
      "op": "SHL"
    },
    "3249": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3250": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3251": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3253": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "ADD",
      "path": "3"
    },
    "3254": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3255": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3256": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3258": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "ADD",
      "path": "3"
    },
    "3259": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3260": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3261": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "SUB",
      "path": "3"
    },
    "3262": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3263": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3264": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "3266": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3267": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3268": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3270": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "ADD",
      "path": "3"
    },
    "3271": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3272": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15EF"
    },
    "3275": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "3277": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3278": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "3279": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3281": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "ADD",
      "path": "3"
    },
    "3282": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3283": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "POP",
      "path": "3"
    },
    "3284": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "POP",
      "path": "3"
    },
    "3285": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3287": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3288": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3289": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3290": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "SUB",
      "path": "3"
    },
    "3291": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3292": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3293": {
      "fn": "ERC20._approve",
      "offset": [
        9406,
        9474
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3300": {
      "op": "SHL"
    },
    "3301": {
      "op": "SUB"
    },
    "3302": {
      "fn": "ERC20._approve",
      "offset": [
        9492,
        9513
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 31
    },
    "3303": {
      "branch": 88,
      "fn": "ERC20._approve",
      "offset": [
        9492,
        9513
      ],
      "op": "AND",
      "path": "3"
    },
    "3304": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD22"
    },
    "3307": {
      "branch": 88,
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3308": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3310": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3311": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3317": {
      "op": "SHL"
    },
    "3318": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3319": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3320": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3322": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "ADD",
      "path": "3"
    },
    "3323": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3324": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3325": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3327": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "ADD",
      "path": "3"
    },
    "3328": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3329": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3330": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "SUB",
      "path": "3"
    },
    "3331": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3332": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3333": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "3335": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3336": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3337": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3339": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "ADD",
      "path": "3"
    },
    "3340": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3341": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1519"
    },
    "3344": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x22"
    },
    "3346": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3347": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "3348": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3350": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "ADD",
      "path": "3"
    },
    "3351": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3352": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "POP",
      "path": "3"
    },
    "3353": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "POP",
      "path": "3"
    },
    "3354": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3356": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3357": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3358": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3359": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "SUB",
      "path": "3"
    },
    "3360": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3361": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3362": {
      "fn": "ERC20._approve",
      "offset": [
        9484,
        9552
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3369": {
      "op": "SHL"
    },
    "3370": {
      "op": "SUB"
    },
    "3371": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 32
    },
    "3372": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3373": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "AND",
      "path": "3"
    },
    "3374": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3376": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3377": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3378": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3379": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9574
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3381": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3383": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3384": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3385": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3386": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3388": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3389": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3390": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9581
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3391": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3392": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3393": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "AND",
      "path": "3"
    },
    "3394": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3395": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3396": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3397": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3398": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3399": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3400": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3401": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3402": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3403": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9590
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3404": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9599
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3405": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9599
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3406": {
      "fn": "ERC20._approve",
      "offset": [
        9563,
        9599
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3407": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 33
    },
    "3408": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3409": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3410": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3411": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3412": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3413": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3414": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3447": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3448": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3449": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3450": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SUB",
      "path": "3"
    },
    "3451": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3452": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3453": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "ADD",
      "path": "3"
    },
    "3454": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3455": {
      "fn": "ERC20._approve",
      "offset": [
        9614,
        9646
      ],
      "op": "LOG3",
      "path": "3"
    },
    "3456": {
      "fn": "ERC20._approve",
      "offset": [
        9313,
        9653
      ],
      "op": "POP",
      "path": "3"
    },
    "3457": {
      "fn": "ERC20._approve",
      "offset": [
        9313,
        9653
      ],
      "op": "POP",
      "path": "3"
    },
    "3458": {
      "fn": "ERC20._approve",
      "offset": [
        9313,
        9653
      ],
      "op": "POP",
      "path": "3"
    },
    "3459": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9313,
        9653
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3460": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4021,
        4618
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3467": {
      "op": "SHL"
    },
    "3468": {
      "op": "SUB"
    },
    "3469": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4112
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3470": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4112
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3471": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4112
      ],
      "op": "AND",
      "path": "10"
    },
    "3472": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4124,
        4125
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3474": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4112
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3475": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4112
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3476": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4112
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3477": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4101
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xD"
    },
    "3479": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4112
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3481": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4112
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3482": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4112
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3484": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4112
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3485": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4112
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3486": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4112
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3487": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4112
      ],
      "op": "AND",
      "path": "10"
    },
    "3488": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4126
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3489": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4126
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3490": {
      "branch": 75,
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4126
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3491": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4166
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDC6"
    },
    "3494": {
      "branch": 75,
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4166
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3495": {
      "op": "POP"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3502": {
      "op": "SHL"
    },
    "3503": {
      "op": "SUB"
    },
    "3504": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4146
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3505": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4146
      ],
      "op": "AND",
      "path": "10"
    },
    "3506": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4165,
        4166
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3508": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4146
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3509": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4146
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3510": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4146
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3511": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4135
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "3513": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4146
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3515": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4146
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3516": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4146
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3518": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4146
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3519": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4146
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3520": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3522": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4155
      ],
      "op": "ADD",
      "path": "10"
    },
    "3523": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4162
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3524": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4166
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3525": {
      "branch": 76,
      "fn": "HopeNobt.setRef",
      "offset": [
        4130,
        4166
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3526": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4095,
        4166
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3527": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4091,
        4199
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3528": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4091,
        4199
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDD0"
    },
    "3531": {
      "branch": 76,
      "fn": "HopeNobt.setRef",
      "offset": [
        4091,
        4199
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3532": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4182,
        4189
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 34,
      "value": "0x65F"
    },
    "3535": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4182,
        4189
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3536": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4091,
        4199
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3543": {
      "op": "SHL"
    },
    "3544": {
      "op": "SUB"
    },
    "3545": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 35
    },
    "3546": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3547": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "AND",
      "path": "10"
    },
    "3548": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3550": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3551": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3552": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3553": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4213
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "3555": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3557": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3558": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3559": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3560": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3562": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3563": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3564": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4221
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3565": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4230
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "3567": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4230
      ],
      "op": "ADD",
      "path": "10"
    },
    "3568": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3569": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3570": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3572": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3573": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3574": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "ADD",
      "path": "10"
    },
    "3575": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3576": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3577": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3578": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3579": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3580": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3581": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3582": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3583": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "ADD",
      "path": "10"
    },
    "3584": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3585": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3586": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "3587": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "DUP10",
      "path": "10"
    },
    "3588": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "AND",
      "path": "10"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3595": {
      "op": "SHL"
    },
    "3596": {
      "op": "SUB"
    },
    "3597": {
      "op": "NOT"
    },
    "3598": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "SWAP9",
      "path": "10"
    },
    "3599": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "DUP10",
      "path": "10"
    },
    "3600": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "AND",
      "path": "10"
    },
    "3601": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3602": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "OR",
      "path": "10"
    },
    "3603": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3604": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3605": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4208,
        4246
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3606": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4273
      ],
      "op": "DUP6",
      "path": "10",
      "statement": 36
    },
    "3607": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4273
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3608": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4262
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xD"
    },
    "3610": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4273
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3611": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4273
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3612": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4273
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3613": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4273
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3614": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4273
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3615": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4282
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3616": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4282
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3617": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4282
      ],
      "op": "DUP9",
      "path": "10"
    },
    "3618": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4282
      ],
      "op": "AND",
      "path": "10"
    },
    "3619": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4282
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3620": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4282
      ],
      "op": "OR",
      "path": "10"
    },
    "3621": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4282
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3622": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4256,
        4282
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3623": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4317,
        4333
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3624": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4317,
        4333
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3625": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4317,
        4333
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3626": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4317,
        4333
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3627": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4317,
        4333
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3628": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4317,
        4343
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3630": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4317,
        4343
      ],
      "op": "ADD",
      "path": "10"
    },
    "3631": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 37
    },
    "3632": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3633": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3634": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3635": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "ADD",
      "path": "10"
    },
    "3636": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3637": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3638": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3639": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3640": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3641": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3642": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3643": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3644": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3645": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3646": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "ADD",
      "path": "10"
    },
    "3647": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3648": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3649": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3650": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "3651": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "AND",
      "path": "10"
    },
    "3652": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3653": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3654": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "OR",
      "path": "10"
    },
    "3655": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3656": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3657": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4353,
        4370
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3658": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4317,
        4343
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3659": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4214,
        4220
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3660": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4214,
        4220
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3661": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4411,
        4612
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3662": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4440,
        4451
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "3664": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4440,
        4451
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3665": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4432,
        4437
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3666": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4432,
        4451
      ],
      "op": "LT",
      "path": "10"
    },
    "3667": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4411,
        4612
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3668": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4411,
        4612
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEB6"
    },
    "3671": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4411,
        4612
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3678": {
      "op": "SHL"
    },
    "3679": {
      "op": "SUB"
    },
    "3680": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 38
    },
    "3681": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3682": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "AND",
      "path": "10"
    },
    "3683": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3685": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3686": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3687": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3688": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4490
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xD"
    },
    "3690": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3692": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3693": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3695": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3696": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3697": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3698": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3699": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3700": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "AND",
      "path": "10"
    },
    "3701": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4484,
        4496
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3702": {
      "branch": 77,
      "fn": "HopeNobt.setRef",
      "offset": [
        4514,
        4532
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3703": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4510,
        4573
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE82"
    },
    "3706": {
      "branch": 77,
      "fn": "HopeNobt.setRef",
      "offset": [
        4510,
        4573
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3707": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4552,
        4559
      ],
      "op": "POP",
      "path": "10",
      "statement": 39
    },
    "3708": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4552,
        4559
      ],
      "op": "POP",
      "path": "10"
    },
    "3709": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4552,
        4559
      ],
      "op": "POP",
      "path": "10"
    },
    "3710": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4552,
        4559
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x65F"
    },
    "3713": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4552,
        4559
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3714": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4510,
        4573
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3715": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 40
    },
    "3716": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3717": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3719": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3720": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3721": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "ADD",
      "path": "10"
    },
    "3722": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3723": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3726": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3727": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3728": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3729": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3731": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3732": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3733": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3734": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3735": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "ADD",
      "path": "10"
    },
    "3736": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3737": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3744": {
      "op": "SHL"
    },
    "3745": {
      "op": "SUB"
    },
    "3746": {
      "op": "NOT"
    },
    "3747": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "AND",
      "path": "10"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3754": {
      "op": "SHL"
    },
    "3755": {
      "op": "SUB"
    },
    "3756": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3757": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "AND",
      "path": "10"
    },
    "3758": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "OR",
      "path": "10"
    },
    "3759": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3760": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4586,
        4601
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3761": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4453,
        4461
      ],
      "op": "ADD",
      "path": "10",
      "statement": 41
    },
    "3762": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4411,
        4612
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE4D"
    },
    "3765": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4411,
        4612
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3766": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4411,
        4612
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3767": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4411,
        4612
      ],
      "op": "POP",
      "path": "10"
    },
    "3768": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4021,
        4618
      ],
      "op": "POP",
      "path": "10"
    },
    "3769": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4021,
        4618
      ],
      "op": "POP",
      "path": "10"
    },
    "3770": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4021,
        4618
      ],
      "op": "POP",
      "path": "10"
    },
    "3771": {
      "fn": "HopeNobt.setRef",
      "offset": [
        4021,
        4618
      ],
      "op": "POP",
      "path": "10"
    },
    "3772": {
      "fn": "HopeNobt.setRef",
      "jump": "o",
      "offset": [
        4021,
        4618
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4835,
        5152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4941,
        4945
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3776": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4957,
        4993
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 42,
      "value": "0xECA"
    },
    "3779": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4967,
        4973
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4975,
        4984
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3781": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4986,
        4992
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3782": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4957,
        4966
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1316"
    },
    "3785": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4957,
        4993
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3786": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4957,
        4993
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3787": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5003,
        5124
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 43,
      "value": "0x691"
    },
    "3790": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5012,
        5018
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3791": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5020,
        5032
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xED6"
    },
    "3794": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5020,
        5030
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC94"
    },
    "3797": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5020,
        5032
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3798": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5020,
        5032
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3799": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x708"
    },
    "3802": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5072,
        5078
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3803": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3805": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3806": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3807": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3809": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "ADD",
      "path": "3"
    },
    "3810": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3812": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3813": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3814": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x28"
    },
    "3816": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3817": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3818": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3820": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "ADD",
      "path": "3"
    },
    "3821": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1582"
    },
    "3824": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x28"
    },
    "3826": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3827": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3834": {
      "op": "SHL"
    },
    "3835": {
      "op": "SUB"
    },
    "3836": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "DUP11",
      "path": "3"
    },
    "3837": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "AND",
      "path": "3"
    },
    "3838": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3840": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3841": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3842": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3843": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5045
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3845": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3847": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3848": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3850": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3851": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3852": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5053
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3853": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5066
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF14"
    },
    "3856": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5064
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC94"
    },
    "3859": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5054,
        5066
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3860": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5066
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3867": {
      "op": "SHL"
    },
    "3868": {
      "op": "SUB"
    },
    "3869": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "AND",
      "path": "3"
    },
    "3870": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3871": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3872": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3874": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3875": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "ADD",
      "path": "3"
    },
    "3876": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3877": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3878": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3879": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3880": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3882": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "ADD",
      "path": "3"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3885": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3886": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3887": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5067
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3888": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5123
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3889": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5034,
        5071
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x126F"
    },
    "3892": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5034,
        5123
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3893": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3119,
        4015
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3894": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3208,
        3212
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3896": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3245,
        3246
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3897": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3228,
        3242
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "3899": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3228,
        3242
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3900": {
      "branch": 78,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3228,
        3246
      ],
      "op": "GT",
      "path": "10"
    },
    "3901": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3228,
        3280
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3902": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3228,
        3280
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3903": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3228,
        3280
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF4A"
    },
    "3906": {
      "branch": 78,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3228,
        3280
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3907": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3228,
        3280
      ],
      "op": "POP",
      "path": "10"
    },
    "3908": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3266,
        3280
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "3910": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3266,
        3280
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3911": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3250,
        3262
      ],
      "op": "NUMBER",
      "path": "10"
    },
    "3912": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3250,
        3280
      ],
      "op": "LT",
      "path": "10"
    },
    "3913": {
      "branch": 79,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3250,
        3280
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3914": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3228,
        3280
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3915": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3227,
        3310
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3916": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3227,
        3310
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF59"
    },
    "3919": {
      "branch": 79,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3227,
        3310
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3920": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3227,
        3310
      ],
      "op": "POP",
      "path": "10"
    },
    "3921": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3301,
        3310
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "3923": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3301,
        3310
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3924": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3285,
        3297
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "3926": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3285,
        3297
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3927": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3285,
        3310
      ],
      "op": "LT",
      "path": "10"
    },
    "3928": {
      "branch": 80,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3285,
        3310
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3929": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3227,
        3310
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3930": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3223,
        3349
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3931": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3223,
        3349
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF66"
    },
    "3934": {
      "branch": 80,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3223,
        3349
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3935": {
      "op": "POP"
    },
    "3936": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3333,
        3338
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 44,
      "value": "0x0"
    },
    "3938": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3326,
        3338
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x695"
    },
    "3941": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3326,
        3338
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3942": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3223,
        3349
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3943": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3371,
        3389
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "3945": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3371,
        3389
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3946": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3362,
        3368
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3947": {
      "branch": 81,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3362,
        3389
      ],
      "op": "LT",
      "path": "10"
    },
    "3948": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3362,
        3412
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3949": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3362,
        3412
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF87"
    },
    "3952": {
      "branch": 81,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3362,
        3412
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3953": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3362,
        3412
      ],
      "op": "POP",
      "path": "10"
    },
    "3954": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3403,
        3412
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3961": {
      "op": "SHL"
    },
    "3962": {
      "op": "SUB"
    },
    "3963": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3393,
        3412
      ],
      "op": "AND",
      "path": "10"
    },
    "3964": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3393,
        3399
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3971": {
      "op": "SHL"
    },
    "3972": {
      "op": "SUB"
    },
    "3973": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3393,
        3412
      ],
      "op": "AND",
      "path": "10"
    },
    "3974": {
      "branch": 82,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3393,
        3412
      ],
      "op": "EQ",
      "path": "10"
    },
    "3975": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3362,
        3412
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3976": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3358,
        3451
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3977": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3358,
        3451
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF94"
    },
    "3980": {
      "branch": 82,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3358,
        3451
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3981": {
      "op": "POP"
    },
    "3982": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3435,
        3440
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 45,
      "value": "0x0"
    },
    "3984": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3428,
        3440
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x695"
    },
    "3987": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3428,
        3440
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3988": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3358,
        3451
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3995": {
      "op": "SHL"
    },
    "3996": {
      "op": "SUB"
    },
    "3997": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3496
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3998": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3496
      ],
      "op": "AND",
      "path": "10"
    },
    "3999": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3460,
        3480
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4001": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3496
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4002": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3496
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4003": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3496
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4004": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3488
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "4006": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3496
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4008": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3496
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4009": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3496
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4011": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3496
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4012": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3496
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4013": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4015": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3508
      ],
      "op": "ADD",
      "path": "10"
    },
    "4016": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3483,
        3508
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4017": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3538,
        3552
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "4019": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3538,
        3552
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4020": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3522,
        3552
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4021": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3522,
        3552
      ],
      "op": "LT",
      "path": "10"
    },
    "4022": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3522,
        3552
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4023": {
      "branch": 83,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3522,
        3552
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4024": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3522,
        3592
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFE5"
    },
    "4027": {
      "branch": 83,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3522,
        3592
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4028": {
      "op": "POP"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4035": {
      "op": "SHL"
    },
    "4036": {
      "op": "SUB"
    },
    "4037": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4038": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "DUP7",
      "path": "10"
    },
    "4039": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "AND",
      "path": "10"
    },
    "4040": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3591,
        3592
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4042": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4043": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4044": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4045": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3561
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "4047": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4049": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4050": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4051": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4052": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4054": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4055": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4056": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3569
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4057": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3588
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4058": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3588
      ],
      "op": "DUP9",
      "path": "10"
    },
    "4059": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3588
      ],
      "op": "AND",
      "path": "10"
    },
    "4060": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3588
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4061": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3588
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4062": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3588
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4063": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3588
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4064": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3588
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4065": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3588
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4066": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3588
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4067": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3592
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4068": {
      "branch": 84,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3556,
        3592
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4069": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3522,
        3592
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4070": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3518,
        3631
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4071": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3518,
        3631
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFF4"
    },
    "4074": {
      "branch": 84,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3518,
        3631
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4075": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3615,
        3620
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 46,
      "value": "0x0"
    },
    "4077": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3608,
        3620
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4078": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3608,
        3620
      ],
      "op": "POP",
      "path": "10"
    },
    "4079": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3608,
        3620
      ],
      "op": "POP",
      "path": "10"
    },
    "4080": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3608,
        3620
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x695"
    },
    "4083": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3608,
        3620
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4084": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3518,
        3631
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4085": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3682,
        3700
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "4087": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3682,
        3700
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4088": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3640,
        3655
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4090": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3640,
        3655
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4091": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3658,
        3701
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100F"
    },
    "4094": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3658,
        3701
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4095": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3658,
        3677
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1009"
    },
    "4098": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3658,
        3670
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4099": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3675,
        3676
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "4101": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3658,
        3674
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC3A"
    },
    "4104": {
      "fn": "HopeNobt.sendReward",
      "jump": "i",
      "offset": [
        3658,
        3677
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4105": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3658,
        3677
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4106": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3658,
        3681
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4107": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3658,
        3681
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1471"
    },
    "4110": {
      "fn": "HopeNobt.sendReward",
      "jump": "i",
      "offset": [
        3658,
        3701
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4111": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3658,
        3701
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4112": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3747,
        3759
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "4114": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3747,
        3759
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4115": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3735,
        3744
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "4117": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3735,
        3744
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4118": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3640,
        3701
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4119": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3640,
        3701
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4120": {
      "op": "POP"
    },
    "4121": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3735,
        3759
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4122": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3735,
        3759
      ],
      "op": "SUB",
      "path": "10"
    },
    "4123": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3780,
        3803
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 47
    },
    "4124": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3780,
        3803
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4125": {
      "branch": 85,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3780,
        3803
      ],
      "op": "GT",
      "path": "10"
    },
    "4126": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3780,
        3829
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1027"
    },
    "4129": {
      "branch": 85,
      "fn": "HopeNobt.sendReward",
      "offset": [
        3780,
        3829
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4130": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3816,
        3829
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4131": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3780,
        3829
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1029"
    },
    "4134": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3780,
        3829
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4135": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3780,
        3829
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4136": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3806,
        3813
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4137": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3780,
        3829
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4138": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3769,
        3830
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4139": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3769,
        3830
      ],
      "op": "POP",
      "path": "10"
    },
    "4140": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3840,
        3862
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 48,
      "value": "0x1035"
    },
    "4143": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3846,
        3852
      ],
      "op": "DUP8",
      "path": "10"
    },
    "4144": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3854,
        3861
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4145": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3840,
        3845
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1082"
    },
    "4148": {
      "fn": "HopeNobt.sendReward",
      "jump": "i",
      "offset": [
        3840,
        3862
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4149": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3840,
        3862
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4150": {
      "op": "POP"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4157": {
      "op": "SHL"
    },
    "4158": {
      "op": "SUB"
    },
    "4159": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "SWAP6",
      "path": "10",
      "statement": 49
    },
    "4160": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "DUP7",
      "path": "10"
    },
    "4161": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "AND",
      "path": "10"
    },
    "4162": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4164": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4165": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4166": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4167": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3877
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "4169": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4171": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4172": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4173": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4174": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4176": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4177": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4178": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3885
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4179": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3904
      ],
      "op": "SWAP10",
      "path": "10"
    },
    "4180": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3904
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4181": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3904
      ],
      "op": "SWAP11",
      "path": "10"
    },
    "4182": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3904
      ],
      "op": "AND",
      "path": "10"
    },
    "4183": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3904
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4184": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3904
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4185": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3904
      ],
      "op": "DUP9",
      "path": "10"
    },
    "4186": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3904
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4187": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3904
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4188": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3904
      ],
      "op": "SWAP9",
      "path": "10"
    },
    "4189": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3904
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4190": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3904
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4191": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3914
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4192": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3914
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4193": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3872,
        3914
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4194": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3937
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 50
    },
    "4195": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3937
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4196": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3937
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4197": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3937
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4198": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3937
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "4199": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3937
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4200": {
      "op": "POP"
    },
    "4201": {
      "op": "POP"
    },
    "4202": {
      "op": "POP"
    },
    "4203": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3953,
        3954
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4205": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3949
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4206": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3949
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4207": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3949
      ],
      "op": "ADD",
      "path": "10"
    },
    "4208": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3954
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4209": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3954
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4210": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3954
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4211": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3954
      ],
      "op": "ADD",
      "path": "10"
    },
    "4212": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3954
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4213": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3924,
        3954
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4214": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3964,
        3976
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 51,
      "value": "0xA"
    },
    "4216": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3964,
        3987
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4217": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3964,
        3987
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4218": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3964,
        3987
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4219": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3964,
        3987
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4220": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3964,
        3987
      ],
      "op": "ADD",
      "path": "10"
    },
    "4221": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3964,
        3987
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4222": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3964,
        3987
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4223": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3964,
        3987
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4224": {
      "fn": "HopeNobt.sendReward",
      "offset": [
        3953,
        3954
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4225": {
      "fn": "HopeNobt.sendReward",
      "jump": "o",
      "offset": [
        3119,
        4015
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4226": {
      "fn": "ERC20._mint",
      "offset": [
        7790,
        8160
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4233": {
      "op": "SHL"
    },
    "4234": {
      "op": "SUB"
    },
    "4235": {
      "fn": "ERC20._mint",
      "offset": [
        7873,
        7894
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 52
    },
    "4236": {
      "branch": 89,
      "fn": "ERC20._mint",
      "offset": [
        7873,
        7894
      ],
      "op": "AND",
      "path": "3"
    },
    "4237": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10DD"
    },
    "4240": {
      "branch": 89,
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4241": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4243": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4244": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4245": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4251": {
      "op": "SHL"
    },
    "4252": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4253": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4254": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4256": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4258": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4259": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "ADD",
      "path": "3"
    },
    "4260": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4261": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4263": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "4265": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4266": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "ADD",
      "path": "3"
    },
    "4267": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4268": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "4301": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "4303": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4304": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "ADD",
      "path": "3"
    },
    "4305": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4306": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4307": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4308": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4309": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4310": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4311": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "SUB",
      "path": "3"
    },
    "4312": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "4314": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "ADD",
      "path": "3"
    },
    "4315": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4316": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4317": {
      "fn": "ERC20._mint",
      "offset": [
        7865,
        7930
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4318": {
      "fn": "ERC20._mint",
      "offset": [
        7941,
        7990
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 53,
      "value": "0x10E9"
    },
    "4321": {
      "fn": "ERC20._mint",
      "offset": [
        7970,
        7971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4323": {
      "fn": "ERC20._mint",
      "offset": [
        7974,
        7981
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4324": {
      "fn": "ERC20._mint",
      "offset": [
        7983,
        7989
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4325": {
      "fn": "ERC20._mint",
      "offset": [
        7941,
        7961
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14CA"
    },
    "4328": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        7941,
        7990
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4329": {
      "fn": "ERC20._mint",
      "offset": [
        7941,
        7990
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4330": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8028
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 54,
      "value": "0x2"
    },
    "4332": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8028
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4333": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8040
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10F6"
    },
    "4336": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8040
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4337": {
      "fn": "ERC20._mint",
      "offset": [
        8033,
        8039
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4338": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8032
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC3A"
    },
    "4341": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8016,
        8040
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4342": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8040
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4343": {
      "fn": "ERC20._mint",
      "offset": [
        8001,
        8013
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4345": {
      "fn": "ERC20._mint",
      "offset": [
        8001,
        8040
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4352": {
      "op": "SHL"
    },
    "4353": {
      "op": "SUB"
    },
    "4354": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 55
    },
    "4355": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "AND",
      "path": "3"
    },
    "4356": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8080
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4358": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4359": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4360": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4361": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4363": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4364": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4365": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4366": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4368": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4369": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4370": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8089
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4371": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8101
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x111C"
    },
    "4374": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8101
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4375": {
      "fn": "ERC20._mint",
      "offset": [
        8094,
        8100
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4376": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8093
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC3A"
    },
    "4379": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8071,
        8101
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4380": {
      "fn": "ERC20._mint",
      "offset": [
        8071,
        8101
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4387": {
      "op": "SHL"
    },
    "4388": {
      "op": "SUB"
    },
    "4389": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4390": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "AND",
      "path": "3"
    },
    "4391": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8059
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4393": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4394": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4395": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4396": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4398": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4399": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4400": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4401": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4403": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4404": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4405": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4406": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8101
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4407": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8101
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4408": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8101
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4409": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8101
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4410": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 56
    },
    "4411": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4412": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4413": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4414": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4415": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4416": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4417": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4418": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8068
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4419": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8059
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4420": {
      "fn": "ERC20._mint",
      "offset": [
        8050,
        8059
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4421": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4454": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4455": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4456": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4457": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SUB",
      "path": "3"
    },
    "4458": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4459": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4460": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "ADD",
      "path": "3"
    },
    "4461": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4462": {
      "fn": "ERC20._mint",
      "offset": [
        8116,
        8153
      ],
      "op": "LOG3",
      "path": "3"
    },
    "4463": {
      "fn": "ERC20._mint",
      "offset": [
        7790,
        8160
      ],
      "op": "POP",
      "path": "3"
    },
    "4464": {
      "fn": "ERC20._mint",
      "offset": [
        7790,
        8160
      ],
      "op": "POP",
      "path": "3"
    },
    "4465": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        7790,
        8160
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4466": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2433,
        3113
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4473": {
      "op": "SHL"
    },
    "4474": {
      "op": "SUB"
    },
    "4475": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2587
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4476": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2587
      ],
      "op": "AND",
      "path": "10"
    },
    "4477": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2495,
        2513
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4479": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2587
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4480": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2587
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4481": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2587
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4482": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2580
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "4484": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2587
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4486": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2587
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4487": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2587
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4488": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2587
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4489": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2587
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4491": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2587
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4492": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2587
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4493": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2587
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4494": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2596
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "4496": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2596
      ],
      "op": "ADD",
      "path": "10"
    },
    "4497": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4498": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4499": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4500": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4501": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4502": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4503": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "MUL",
      "path": "10"
    },
    "4504": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4505": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "ADD",
      "path": "10"
    },
    "4506": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4507": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "ADD",
      "path": "10"
    },
    "4508": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4509": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4510": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4511": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4512": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4513": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4514": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2495,
        2513
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4515": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2495,
        2513
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4516": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2572
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "4518": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2572
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4519": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4520": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2596
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4521": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4522": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4523": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "ADD",
      "path": "10"
    },
    "4524": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2575,
        2596
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4525": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4526": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4527": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4528": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11E2"
    },
    "4531": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4532": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4534": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "MUL",
      "path": "10"
    },
    "4535": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4536": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "ADD",
      "path": "10"
    },
    "4537": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4538": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4539": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4541": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4542": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4544": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4546": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4547": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4548": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4549": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4550": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4557": {
      "op": "SHL"
    },
    "4558": {
      "op": "SUB"
    },
    "4559": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "AND",
      "path": "10"
    },
    "4560": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4561": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4562": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4564": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4565": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4566": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "ADD",
      "path": "10"
    },
    "4567": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4568": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4570": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "ADD",
      "path": "10"
    },
    "4571": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4572": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4573": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "GT",
      "path": "10"
    },
    "4574": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11C4"
    },
    "4577": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4578": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4579": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "POP",
      "path": "10"
    },
    "4580": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "POP",
      "path": "10"
    },
    "4581": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "POP",
      "path": "10"
    },
    "4582": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "POP",
      "path": "10"
    },
    "4583": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "POP",
      "path": "10"
    },
    "4584": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4585": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2546,
        2596
      ],
      "op": "POP",
      "path": "10"
    },
    "4586": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2606,
        2626
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4588": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2636,
        2657
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4589": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2672,
        2683
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4591": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2667,
        3061
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4592": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2695,
        2704
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4593": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2695,
        2711
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4594": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2689,
        2692
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4595": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2689,
        2711
      ],
      "op": "LT",
      "path": "10"
    },
    "4596": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2667,
        3061
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4597": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2667,
        3061
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1263"
    },
    "4600": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2667,
        3061
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4601": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2735,
        2744
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4603": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2756
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4604": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2757,
        2760
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4605": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4606": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4607": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4608": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "LT",
      "path": "10"
    },
    "4609": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1206"
    },
    "4612": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4613": {
      "dev": "Index out of range",
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "INVALID",
      "path": "10"
    },
    "4614": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4615": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4617": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "MUL",
      "path": "10"
    },
    "4618": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4620": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "ADD",
      "path": "10"
    },
    "4621": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "ADD",
      "path": "10"
    },
    "4622": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2747,
        2761
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4623": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2735,
        2761
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4624": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2735,
        2761
      ],
      "op": "POP",
      "path": "10"
    },
    "4625": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2791,
        2792
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 57,
      "value": "0x1"
    },
    "4627": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2775,
        2792
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4628": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2775,
        2792
      ],
      "op": "ADD",
      "path": "10"
    },
    "4629": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2775,
        2792
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4630": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2775,
        2792
      ],
      "op": "POP",
      "path": "10"
    },
    "4631": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2823,
        2835
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 58,
      "value": "0x121F"
    },
    "4634": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2833,
        2834
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4635": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2823,
        2832
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x808"
    },
    "4638": {
      "fn": "HopeNobt.selectInvitees",
      "jump": "i",
      "offset": [
        2823,
        2835
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4639": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2823,
        2835
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4646": {
      "op": "SHL"
    },
    "4647": {
      "op": "SUB"
    },
    "4648": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2861
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4649": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2861
      ],
      "op": "AND",
      "path": "10"
    },
    "4650": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2880,
        2881
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4652": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2861
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4653": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2861
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4654": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2861
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4655": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "4657": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2861
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4659": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2861
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4660": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2861
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4662": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2861
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4663": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2861
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4664": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2870
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "4666": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2870
      ],
      "op": "ADD",
      "path": "10"
    },
    "4667": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2877
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4668": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2806,
        2835
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4669": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2806,
        2835
      ],
      "op": "ADD",
      "path": "10"
    },
    "4670": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2806,
        2835
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4671": {
      "branch": 86,
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2853,
        2881
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4672": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2849,
        3051
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x125A"
    },
    "4675": {
      "branch": 86,
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2849,
        3051
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4676": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2902,
        2916
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4678": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2918,
        2933
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4679": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2937,
        2954
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x124F"
    },
    "4682": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2952,
        2953
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4683": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2937,
        2951
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1172"
    },
    "4686": {
      "fn": "HopeNobt.selectInvitees",
      "jump": "i",
      "offset": [
        2937,
        2954
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4687": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2937,
        2954
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4688": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2972,
        2994
      ],
      "op": "SWAP7",
      "path": "10",
      "statement": 59
    },
    "4689": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2972,
        2994
      ],
      "op": "ADD",
      "path": "10"
    },
    "4690": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2972,
        2994
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "4691": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        3012,
        3036
      ],
      "op": "SWAP5",
      "path": "10",
      "statement": 60
    },
    "4692": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        3012,
        3036
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4693": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        3012,
        3036
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "4694": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        3012,
        3036
      ],
      "op": "ADD",
      "path": "10"
    },
    "4695": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        3012,
        3036
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4696": {
      "op": "POP"
    },
    "4697": {
      "op": "POP"
    },
    "4698": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2849,
        3051
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4699": {
      "op": "POP"
    },
    "4700": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2713,
        2719
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 61,
      "value": "0x1"
    },
    "4702": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2713,
        2719
      ],
      "op": "ADD",
      "path": "10"
    },
    "4703": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2667,
        3061
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11EF"
    },
    "4706": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2667,
        3061
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4707": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2667,
        3061
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4708": {
      "op": "POP"
    },
    "4709": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        3078,
        3090
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 62
    },
    "4710": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        3078,
        3090
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4711": {
      "op": "POP"
    },
    "4712": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        3092,
        3105
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4713": {
      "op": "POP"
    },
    "4714": {
      "op": "POP"
    },
    "4715": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2433,
        3113
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4716": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2433,
        3113
      ],
      "op": "POP",
      "path": "10"
    },
    "4717": {
      "fn": "HopeNobt.selectInvitees",
      "offset": [
        2433,
        3113
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4718": {
      "fn": "HopeNobt.selectInvitees",
      "jump": "o",
      "offset": [
        2433,
        3113
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4719": {
      "fn": "SafeMath.sub",
      "offset": [
        1754,
        1941
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4720": {
      "fn": "SafeMath.sub",
      "offset": [
        1840,
        1847
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4722": {
      "fn": "SafeMath.sub",
      "offset": [
        1875,
        1887
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 63
    },
    "4723": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1873
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4724": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1873
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4725": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1873
      ],
      "op": "GT",
      "path": "2"
    },
    "4726": {
      "branch": 95,
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1873
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4727": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12FE"
    },
    "4730": {
      "branch": 95,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4731": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4733": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4734": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4740": {
      "op": "SHL"
    },
    "4741": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4742": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4743": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4745": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4746": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4747": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4748": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4750": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4751": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4752": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4753": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SUB",
      "path": "2"
    },
    "4754": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4755": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4756": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4757": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4758": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4759": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4760": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4761": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4762": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4764": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4765": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4766": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4767": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4768": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4769": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4770": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4772": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4773": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4774": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4775": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4776": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4777": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4779": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4780": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4781": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4782": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "LT",
      "path": "2"
    },
    "4783": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4784": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C3"
    },
    "4787": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4788": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4789": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4790": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4791": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4792": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4793": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4794": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4795": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4796": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4798": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4799": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12AB"
    },
    "4802": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4803": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4804": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4805": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4806": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4807": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4808": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4809": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4810": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4811": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4812": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4813": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4814": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4816": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "AND",
      "path": "2"
    },
    "4817": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4818": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4819": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12F0"
    },
    "4822": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4823": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4824": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4825": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SUB",
      "path": "2"
    },
    "4826": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4827": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4828": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4830": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4831": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4833": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SUB",
      "path": "2"
    },
    "4834": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4837": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "EXP",
      "path": "2"
    },
    "4838": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SUB",
      "path": "2"
    },
    "4839": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "NOT",
      "path": "2"
    },
    "4840": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "AND",
      "path": "2"
    },
    "4841": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4842": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4843": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4845": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "ADD",
      "path": "2"
    },
    "4846": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4847": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4848": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4849": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4850": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4851": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4852": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4853": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "POP",
      "path": "2"
    },
    "4854": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4856": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4857": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4858": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4859": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SUB",
      "path": "2"
    },
    "4860": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4861": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4862": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1888
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4863": {
      "op": "POP"
    },
    "4864": {
      "op": "POP"
    },
    "4865": {
      "op": "POP"
    },
    "4866": {
      "fn": "SafeMath.sub",
      "offset": [
        1910,
        1915
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4867": {
      "fn": "SafeMath.sub",
      "offset": [
        1910,
        1915
      ],
      "op": "SUB",
      "path": "2"
    },
    "4868": {
      "fn": "SafeMath.sub",
      "offset": [
        1910,
        1915
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4869": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1754,
        1941
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4870": {
      "fn": "ERC20.transfer",
      "offset": [
        3685,
        3857
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4871": {
      "fn": "ERC20.transfer",
      "offset": [
        3771,
        3775
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4873": {
      "fn": "ERC20.transfer",
      "offset": [
        3787,
        3829
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 64,
      "value": "0x5EE"
    },
    "4876": {
      "fn": "ERC20.transfer",
      "offset": [
        3797,
        3809
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1313"
    },
    "4879": {
      "fn": "ERC20.transfer",
      "offset": [
        3797,
        3807
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC94"
    },
    "4882": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3797,
        3809
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4883": {
      "fn": "ERC20.transfer",
      "offset": [
        3797,
        3809
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4884": {
      "fn": "ERC20.transfer",
      "offset": [
        3811,
        3820
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4885": {
      "fn": "ERC20.transfer",
      "offset": [
        3822,
        3828
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4886": {
      "fn": "ERC20._transfer",
      "offset": [
        6989,
        7519
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4893": {
      "op": "SHL"
    },
    "4894": {
      "op": "SUB"
    },
    "4895": {
      "fn": "ERC20._transfer",
      "offset": [
        7094,
        7114
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 65
    },
    "4896": {
      "branch": 90,
      "fn": "ERC20._transfer",
      "offset": [
        7094,
        7114
      ],
      "op": "AND",
      "path": "3"
    },
    "4897": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x135B"
    },
    "4900": {
      "branch": 90,
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4901": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4903": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4910": {
      "op": "SHL"
    },
    "4911": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4912": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4913": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4915": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "ADD",
      "path": "3"
    },
    "4916": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4917": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4918": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4920": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "ADD",
      "path": "3"
    },
    "4921": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4922": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4923": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "SUB",
      "path": "3"
    },
    "4924": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4925": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4926": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "4928": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4929": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4930": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4932": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "ADD",
      "path": "3"
    },
    "4933": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4934": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15CA"
    },
    "4937": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x25"
    },
    "4939": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4940": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "4941": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4943": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "ADD",
      "path": "3"
    },
    "4944": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4945": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "POP",
      "path": "3"
    },
    "4946": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "POP",
      "path": "3"
    },
    "4947": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4949": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4950": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4951": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4952": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "SUB",
      "path": "3"
    },
    "4953": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4954": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4955": {
      "fn": "ERC20._transfer",
      "offset": [
        7086,
        7156
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4962": {
      "op": "SHL"
    },
    "4963": {
      "op": "SUB"
    },
    "4964": {
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7197
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 66
    },
    "4965": {
      "branch": 91,
      "fn": "ERC20._transfer",
      "offset": [
        7174,
        7197
      ],
      "op": "AND",
      "path": "3"
    },
    "4966": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13A0"
    },
    "4969": {
      "branch": 91,
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4970": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4972": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4973": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4979": {
      "op": "SHL"
    },
    "4980": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4981": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4982": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4984": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "ADD",
      "path": "3"
    },
    "4985": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4986": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4987": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4989": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "ADD",
      "path": "3"
    },
    "4990": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4991": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4992": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "SUB",
      "path": "3"
    },
    "4993": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4994": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4995": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "4997": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4998": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4999": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5001": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "ADD",
      "path": "3"
    },
    "5002": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5003": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14D0"
    },
    "5006": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x23"
    },
    "5008": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5009": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "5010": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5012": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "ADD",
      "path": "3"
    },
    "5013": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5014": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "POP",
      "path": "3"
    },
    "5015": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "POP",
      "path": "3"
    },
    "5016": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5018": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5019": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5020": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5021": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "SUB",
      "path": "3"
    },
    "5022": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5023": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5024": {
      "fn": "ERC20._transfer",
      "offset": [
        7166,
        7237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5025": {
      "fn": "ERC20._transfer",
      "offset": [
        7248,
        7295
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 67,
      "value": "0x13AB"
    },
    "5028": {
      "fn": "ERC20._transfer",
      "offset": [
        7269,
        7275
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5029": {
      "fn": "ERC20._transfer",
      "offset": [
        7277,
        7286
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5030": {
      "fn": "ERC20._transfer",
      "offset": [
        7288,
        7294
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5031": {
      "fn": "ERC20._transfer",
      "offset": [
        7248,
        7268
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14CA"
    },
    "5034": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7248,
        7295
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5035": {
      "fn": "ERC20._transfer",
      "offset": [
        7248,
        7295
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5036": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 68,
      "value": "0x13E8"
    },
    "5039": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7354
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5040": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5042": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5043": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5044": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5046": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "ADD",
      "path": "3"
    },
    "5047": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5049": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5050": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5051": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "5053": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5054": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5055": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5057": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "ADD",
      "path": "3"
    },
    "5058": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x153B"
    },
    "5061": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "5063": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5064": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5071": {
      "op": "SHL"
    },
    "5072": {
      "op": "SUB"
    },
    "5073": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5074": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "AND",
      "path": "3"
    },
    "5075": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7335
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5077": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5078": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5079": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5080": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5082": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5083": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5084": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5085": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5087": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5088": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5089": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5090": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7343
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5091": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5092": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7347
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x126F"
    },
    "5095": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7326,
        7397
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5096": {
      "fn": "ERC20._transfer",
      "offset": [
        7326,
        7397
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5103": {
      "op": "SHL"
    },
    "5104": {
      "op": "SUB"
    },
    "5105": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5106": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5107": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "AND",
      "path": "3"
    },
    "5108": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7315
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5110": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5111": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5112": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5113": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5115": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5116": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5117": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5118": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5120": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5121": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5122": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7323
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5123": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7397
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5124": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7397
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5125": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7397
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5126": {
      "fn": "ERC20._transfer",
      "offset": [
        7306,
        7397
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5127": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 69
    },
    "5128": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5129": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "AND",
      "path": "3"
    },
    "5130": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5131": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5132": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5133": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7450
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5134": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7462
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1417"
    },
    "5137": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7462
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5138": {
      "fn": "ERC20._transfer",
      "offset": [
        7455,
        7461
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5139": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7454
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC3A"
    },
    "5142": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7430,
        7462
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5143": {
      "fn": "ERC20._transfer",
      "offset": [
        7430,
        7462
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5150": {
      "op": "SHL"
    },
    "5151": {
      "op": "SUB"
    },
    "5152": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5153": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5154": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "AND",
      "path": "3"
    },
    "5155": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7416
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5157": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5158": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5159": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5160": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5162": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5163": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5164": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5165": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5167": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5168": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5169": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5170": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "5171": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7462
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5172": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7462
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5173": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7462
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5174": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7462
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5175": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 70
    },
    "5176": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5177": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5178": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5179": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5180": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5181": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5182": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5183": {
      "fn": "ERC20._transfer",
      "offset": [
        7407,
        7427
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5184": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5185": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5186": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "AND",
      "path": "3"
    },
    "5187": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5188": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5221": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5222": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5223": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5224": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5225": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SUB",
      "path": "3"
    },
    "5226": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "ADD",
      "path": "3"
    },
    "5227": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5228": {
      "fn": "ERC20._transfer",
      "offset": [
        7477,
        7512
      ],
      "op": "LOG3",
      "path": "3"
    },
    "5229": {
      "fn": "ERC20._transfer",
      "offset": [
        6989,
        7519
      ],
      "op": "POP",
      "path": "3"
    },
    "5230": {
      "fn": "ERC20._transfer",
      "offset": [
        6989,
        7519
      ],
      "op": "POP",
      "path": "3"
    },
    "5231": {
      "fn": "ERC20._transfer",
      "offset": [
        6989,
        7519
      ],
      "op": "POP",
      "path": "3"
    },
    "5232": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        6989,
        7519
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5233": {
      "fn": "SafeMath.mul",
      "offset": [
        2188,
        2647
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5234": {
      "fn": "SafeMath.mul",
      "offset": [
        2246,
        2253
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5236": {
      "branch": 96,
      "fn": "SafeMath.mul",
      "offset": [
        2487,
        2493
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5237": {
      "fn": "SafeMath.mul",
      "offset": [
        2483,
        2528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1480"
    },
    "5240": {
      "branch": 96,
      "fn": "SafeMath.mul",
      "offset": [
        2483,
        2528
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5241": {
      "op": "POP"
    },
    "5242": {
      "fn": "SafeMath.mul",
      "offset": [
        2516,
        2517
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x0"
    },
    "5244": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F2"
    },
    "5247": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5248": {
      "fn": "SafeMath.mul",
      "offset": [
        2483,
        2528
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5249": {
      "fn": "SafeMath.mul",
      "offset": [
        2550,
        2555
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5250": {
      "fn": "SafeMath.mul",
      "offset": [
        2550,
        2555
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5251": {
      "fn": "SafeMath.mul",
      "offset": [
        2550,
        2555
      ],
      "op": "MUL",
      "path": "2"
    },
    "5252": {
      "fn": "SafeMath.mul",
      "offset": [
        2554,
        2555
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5253": {
      "fn": "SafeMath.mul",
      "offset": [
        2550,
        2551
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5254": {
      "fn": "SafeMath.mul",
      "offset": [
        2550,
        2555
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5255": {
      "fn": "SafeMath.mul",
      "offset": [
        2550,
        2551
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5256": {
      "fn": "SafeMath.mul",
      "offset": [
        2573,
        2578
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 72,
      "value": "0x148D"
    },
    "5259": {
      "fn": "SafeMath.mul",
      "offset": [
        2573,
        2578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5260": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2573,
        2578
      ],
      "op": "INVALID",
      "path": "2"
    },
    "5261": {
      "fn": "SafeMath.mul",
      "offset": [
        2573,
        2578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5262": {
      "fn": "SafeMath.mul",
      "offset": [
        2573,
        2578
      ],
      "op": "DIV",
      "path": "2"
    },
    "5263": {
      "branch": 97,
      "fn": "SafeMath.mul",
      "offset": [
        2573,
        2583
      ],
      "op": "EQ",
      "path": "2"
    },
    "5264": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x695"
    },
    "5267": {
      "branch": 97,
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5268": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5270": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5271": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5277": {
      "op": "SHL"
    },
    "5278": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5279": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5280": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5282": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "ADD",
      "path": "2"
    },
    "5283": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5284": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5285": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5287": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "ADD",
      "path": "2"
    },
    "5288": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5289": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5290": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "SUB",
      "path": "2"
    },
    "5291": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5292": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5293": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "5295": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5296": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5297": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5299": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "ADD",
      "path": "2"
    },
    "5300": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5301": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1561"
    },
    "5304": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "5306": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5307": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "5308": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5310": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "ADD",
      "path": "2"
    },
    "5311": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5312": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "POP",
      "path": "2"
    },
    "5313": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "POP",
      "path": "2"
    },
    "5314": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5316": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5317": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5318": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5319": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "SUB",
      "path": "2"
    },
    "5320": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5321": {
      "fn": "SafeMath.mul",
      "offset": [
        2565,
        2621
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5322": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10651,
        10743
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5323": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10651,
        10743
      ],
      "op": "POP",
      "path": "3"
    },
    "5324": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10651,
        10743
      ],
      "op": "POP",
      "path": "3"
    },
    "5325": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10651,
        10743
      ],
      "op": "POP",
      "path": "3"
    },
    "5326": {
      "fn": "ERC20._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        10651,
        10743
      ],
      "op": "JUMP",
      "path": "3"
    }
  },
  "sha1": "5f8a927a7364e859385d0c4c12e2d12829d36975",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.6.12;\n\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ncontract HopeNobt is ERC20(\"Hope Nobt\", \"hNOBT\"), Ownable {\n    uint256 transferRewardBase;\n    uint256 maxReward;\n    uint256 maxRewardCount;\n    uint256 rewardEndBlock;\n    uint256 rewardAmount;\n    uint256 maxRefLevel;\n\n    event EndBlock(uint256 _endBlock);\n\n\n    struct UserInfo {\n        mapping(address => uint256) rewards;\n        uint256 rewardCount;\n        address[] invitees;\n        address[] referrals;\n    }\n\n    mapping(address => UserInfo) public uInfo;\n    mapping(address => address) public refMap;\n\n    constructor(\n    ) public {\n        transferRewardBase = 100 * (10 ** uint256(decimals()));\n        maxReward = 20000000 * (10 ** uint256(decimals()));\n        maxRewardCount = 3;\n        maxRefLevel = 12;\n        _mint(msg.sender, 15000000 * (10 ** uint256(decimals())));\n    }\n\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner.\n    function mint(address _to, uint256 _amount) public onlyOwner {\n        _mint(_to, _amount);\n    }\n\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        if (ERC20.transfer(recipient, amount)) {\n            sendReward(_msgSender(), recipient, amount);\n            setRef(_msgSender(), recipient);\n        }\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        if (ERC20.transferFrom(sender, recipient, amount)) {\n            sendReward(sender, recipient, amount);\n            setRef(sender, recipient);\n        }\n        return true;\n    }\n\n    function setEnd(uint256 _rewardEndBlock) public onlyOwner {\n        rewardEndBlock = _rewardEndBlock;\n        emit EndBlock(_rewardEndBlock);\n    }\n\n    function addReferral(address _sender, address _recipient) public onlyOwner {\n        setRef(_sender, _recipient);\n    }\n\n    function getReferrals(address _addr) public view returns (address[] memory){\n        return uInfo[_addr].referrals;\n    }\n\n    function getInvitees(address _addr) public view returns (address[] memory){\n        return uInfo[_addr].invitees;\n    }\n\n    function mySquad(address _addr) public view returns (uint256 totalCount, uint256 totalAmount) {\n        return selectInvitees(_addr);\n    }\n\n    function selectInvitees(address _addr) internal view returns (uint256 totalCount, uint256 totalAmount) {\n        address[] memory _invitees = uInfo[_addr].invitees;\n        uint256 _total_count;\n        uint256 _total_amount;\n        for (uint256 idx = 0; idx < _invitees.length; idx ++) {\n            address u = _invitees[idx];\n            _total_count += 1;\n            _total_amount += balanceOf(u);\n            if (uInfo[u].invitees.length > 0) {\n                (uint256 _count, uint256 _amount) = selectInvitees(u);\n                _total_count += _count;\n                _total_amount += _amount;\n            }\n        }\n        return (_total_count, _total_amount);\n    }\n\n    function sendReward(address sender, address recipient, uint256 amount) internal returns (bool){\n        if ((rewardEndBlock > 0 && block.number >= rewardEndBlock) || rewardAmount >= maxReward) {\n            return false;\n        }\n        if (amount < transferRewardBase || sender == recipient) {\n            return false;\n        }\n        uint256 _rewardCount = uInfo[sender].rewardCount;\n        if (_rewardCount >= maxRewardCount || uInfo[sender].rewards[recipient] > 0) {\n            return false;\n        }\n        uint256 _reward = _rewardCount.add(2).mul(transferRewardBase);\n        uint256 _remainReward = maxReward - rewardAmount;\n        _reward = (_remainReward > _reward ? _reward : _remainReward);\n        _mint(sender, _reward);\n        uInfo[sender].rewards[recipient] = _reward;\n        uInfo[sender].rewardCount += 1;\n        rewardAmount += _reward;\n        return true;\n    }\n\n    function setRef(address sender, address recipient) internal {\n        if (refMap[recipient] != address(0) || uInfo[recipient].invitees.length > 0) {\n            return;\n        }\n        uInfo[sender].invitees.push(recipient);\n        refMap[recipient] = sender;\n        address[] storage refs = uInfo[recipient].referrals;\n        refs.push(sender);\n        address _ref = sender;\n        for (uint level = 0; level < maxRefLevel; level ++) {\n            _ref = refMap[_ref];\n            if (_ref == address(0)) {\n                return;\n            }\n            refs.push(_ref);\n        }\n    }\n}\n",
  "sourceMap": "170:4450:10:-:0;;;693:278;;;;;;;;;-1:-1:-1;1956:145:3;;;;;;;;;;;-1:-1:-1;;;1956:145:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1956:145:3;;;;2030:13;;1956:145;;;2030:13;;:5;;:13;:::i;:::-;-1:-1:-1;2053:17:3;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2080:9:3;:14;;-1:-1:-1;;2080:14:3;2092:2;2080:14;;;-1:-1:-1;2080:9:3;902:12:1;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:1;;-1:-1:-1;;;;;924:18:1;;;;;;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:1;-1:-1:-1;;957:43:1;;-1:-1:-1;;957:43:1;-1:-1:-1;771:10:10;:8;:10::i;:::-;763:19;;757:2;:25;750:3;:33;729:18;:54;831:10;:8;:10::i;:::-;823:19;;817:2;:25;805:8;:38;793:9;:50;870:1;853:14;:18;895:2;881:11;:16;907:57;913:10;951;:8;:10::i;:::-;943:19;;937:2;:25;925:8;:38;907:5;;;:57;;:::i;:::-;170:4450;;598:104:0;685:10;598:104;:::o;3068:81:3:-;3133:9;;;;3068:81;:::o;7790:370::-;-1:-1:-1;;;;;7873:21:3;;7865:65;;;;;-1:-1:-1;;;7865:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;7941:49;7970:1;7974:7;7983:6;7941:20;:49::i;:::-;8016:24;8033:6;8016:12;;:16;;;;;;:24;;;;:::i;:::-;8001:12;:39;-1:-1:-1;;;;;8071:18:3;;:9;:18;;;;;;;;;;;;:30;;8094:6;;8071:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8050:18:3;;:9;:18;;;;;;;;;;;:51;;;;8116:37;;;;;;;8050:18;;:9;;8116:37;;;;;;;;;;7790:370;;:::o;10651:92::-;;;;:::o;882:176:2:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;882:176;-1:-1:-1;;;882:176:2:o;170:4450:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;170:4450:10;;;-1:-1:-1;170:4450:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/HopeNobt.sol",
  "type": "contract"
}